{"abi":null,"bytecode":{"object":"0002000000000002000e000000000002000000000301001900000060033002700000039f0330019700010000003103550000008004000039000000400040043f0000000102200190000000310000c13d000000040230008c00000a310000413d000000000101043b000000e001100270000003a90210009c0000009a0000a13d000003aa0210009c000000ac0000213d000003b10210009c000001590000a13d000003b20210009c0000021f0000613d000003b30210009c000002df0000613d000003b40110009c00000a310000c13d0000000001000416000000000101004b00000a310000c13d0000002401000039000b00000001001d000000000201041a0000002f01000039000c00000001001d000000000101041a000003cf03000041000000800030043f000003c501100197000d00000001001d000000840010043f0000000001000414000003c502200197000000040320008c000003f30000c13d0000000003000031000000200130008c000000000403001900000020040080390000041e0000013d0000000001000416000000000101004b00000a310000c13d0000000c01000039000000000201041a000001000300008a000000000232016f00000001022001bf000000000021041b0000001f01000039000000000201041a000000000232016f00000001022001bf000000000021041b00000144010000390000002002000039000d00000002001d000000000012041b0000012c010000390000002102000039000000000012041b00000104010000390000002202000039000000000012041b000003a0010000410000002502000039000000000012041b000003a1010000410000002602000039000000000012041b000003a2010000410000002702000039000000000012041b000003a3010000410000002802000039000000000012041b000003a4020000410000002903000039000000000023041b000000c003000039000000400030043f000000800010043f000000a00020043f00000002010000390000002a04000039000000000204041a000e00000001001d000000000014041b000000030120008c0000007a0000413d000b00000002001d000c00000004001d00000000004004350000039f0100004100000000020004140000039f0320009c0000000002018019000000c001200210000003a5011001c700008010020000390e770e720000040f000000010220019000000a310000613d000000000201043b0000000b012000290000000202200039000000000312004b0000000c040000290000007a0000813d000000000002041b0000000102200039000000000312004b000000760000413d00000000004004350000039f0100004100000000020004140000039f0320009c0000000002018019000000c001200210000003a5011001c700008010020000390e770e720000040f000000010220019000000a310000613d000000000101043b000000800200043d000000000021041b0000000101100039000000a00200043d000000000021041b000003a6010000410000002b02000039000000000012041b000003a4020000410000002c03000039000000000023041b000000400400043d000003a70340009c000001050000a13d000003e40100004100000000001004350000004101000039000000040010043f000003d80100004100000e7900010430000003b70210009c000000bf0000a13d000003b80210009c000001c20000a13d000003b90210009c000002f80000613d000003ba0210009c000003020000613d000003bb0110009c00000a310000c13d0000000001000416000000000101004b00000a310000c13d0000002501000039000000000101041a000000800010043f000003c30100004100000e780001042e000003ab0210009c000001d00000a13d000003ac0210009c000003070000613d000003ad0210009c0000030c0000613d000003ae0110009c00000a310000c13d0000000001000416000000000101004b00000a310000c13d0000001f01000039000000000101041a000000ff011001900000000001000019000000010100c039000000800010043f000003c30100004100000e780001042e000003be0210009c000001400000213d000003c10210009c000003170000613d000003c20110009c00000a310000c13d0000000001000416000000000101004b00000a310000c13d0000002001000039000000000101041a000e00000001001d000003e80100004100000000001004390000039f0100004100000000020004140000039f0320009c0000000002018019000000c001200210000003e9011001c70000800b020000390e770e720000040f000000010220019000000c950000613d000000000101043b0000000e0210006c000000e20000613d0000002102000039000000000202041a000000000221004b000000e20000613d0000002202000039000000000202041a000000000121004b0000097a0000c13d000000400100043d000003eb0210009c000000940000213d0000002402100039000003f30300004100000000003204350000004402100039000000000300041400000060040000390000000000420435000003ed02000041000000000021043500000064021000390000000000020435000000040210003900000000000204350000039f020000410000039f0430009c00000000030280190000039f0410009c00000000010280190000004001100210000000c002300210000000000121019f000003ee011001c700008006020000390e770e6d0000040f0000000102200190000008d10000613d000000000201043b000000000102004b000009ce0000c13d00000001010003670000000002000031000008d60000013d0000004003400039000000400030043f000c00000004001d0000000001140436000b00000001001d00000000002104350000002d04000039000000000204041a0000000e01000029000000000014041b000000030120008c000001280000413d000a00000002001d000e00000004001d00000000004004350000039f0100004100000000020004140000039f0320009c0000000002018019000000c001200210000003a5011001c700008010020000390e770e720000040f000000010220019000000a310000613d000000000201043b0000000a012000290000000202200039000000000312004b0000000e04000029000001280000813d000000000002041b0000000102200039000000000312004b000001240000413d00000000004004350000039f0100004100000000020004140000039f0320009c0000000002018019000000c001200210000003a5011001c700008010020000390e770e720000040f000000010220019000000a310000613d0000000c020000290000000002020433000000000101043b000000000021041b00000001011000390000000b020000290000000002020433000000000021041b0000000d0100002900000100001004430000012000000443000003a80100004100000e780001042e000003bf0210009c000003260000613d000003c00110009c00000a310000c13d0000000001000416000000000101004b00000a310000c13d0000001602000039000000000102041a000000800010043f0000000000200435000000000201004b000003150000613d000000a004000039000003e50200004100000000030000190000000005040019000000000402041a000003c504400197000000000445043600000001022000390000000103300039000000000613004b000001500000413d000004600000013d000003b50210009c0000033d0000613d000003b60110009c00000a310000c13d0000000001000416000000000101004b00000a310000c13d0000001a04000039000000000504041a000003cb0250009c000000940000213d00000005025002100000003f02200039000003cc02200197000003cd0320009c000000940000213d0000008001200039000000400010043f000000800050043f0000000000400435000000000205004b000003ee0000613d0000008006000039000003df070000410000000008000019000800000005001d000000000107041a000000010210019000000001031002700000007f0430018f000000000403c0190000001f0340008c00000000030000190000000103002039000000000331013f0000000103300190000008fb0000c13d000000400900043d0000000003490436000000000202004b000001a50000613d000900000003001d000a00000004001d000b00000009001d000c00000008001d000e00000006001d000d00000007001d000000000070043500000000010004140000039f0210009c0000039f01008041000000c001100210000003a5011001c700008010020000390e770e720000040f000000010220019000000a310000613d0000000a0a00002900000000020a004b00000008050000290000000e060000290000000c08000029000001ac0000613d000000000201043b00000000010000190000000d070000290000000b09000029000000090b0000290000000003b10019000000000402041a0000000000430435000000010220003900000020011000390000000003a1004b0000019d0000413d000001af0000013d000001000200008a000000000121016f0000000000130435000000000104004b00000020010000390000000001006019000001af0000013d00000000010000190000000d070000290000000b090000290000003f01100039000000200200008a000000000221016f0000000001920019000000000221004b00000000020000190000000102004039000003cb0310009c000000940000213d0000000102200190000000940000c13d0000002006600039000000400010043f000000000096043500000001077000390000000108800039000000000158004b000001730000413d000003ed0000013d000003bc0210009c000003650000613d000003bd0110009c00000a310000c13d0000000001000416000000000101004b00000a310000c13d0000001802000039000000000102041a000000800010043f0000000000200435000000000201004b0000043d0000c13d000003150000013d000003af0210009c000003890000613d000003b00110009c00000a310000c13d0000000001000416000000000101004b00000a310000c13d0000000801000039000000000101041a000000ff01100190000002180000c13d000003c701000041000000800010043f000003c801000041000000840010043f000003c901000041000000a40010043f0000039f0100004100000000020004140000039f0320009c0000000002018019000000c001200210000003ca011001c7000003c8020000410e770e720000040f000000000301001900000060033002700000039f03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000001fb0000613d00000000070000190000000508700210000000000981034f000000000909043b000000800880003900000000009804350000000107700039000000000867004b000001f30000413d000000000705004b0000020a0000613d0000000506600210000000000761034f00000003055002100000008006600039000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000000000003001f000100000001035500000001022001900000053b0000613d0000001f01400039000000600110018f00000080041001bf000000400040043f000000200130008c00000a310000413d000000800100043d000000000101004b0000000001000019000000010100c039000000000101004b0000000001000019000000010100c03900000000001404350000004001400210000003c6011001c700000e780001042e0000000001000416000000000101004b00000a310000c13d0000001d04000039000000000104041a000600000001001d000003cb0210009c000000940000213d000000060100002900000005021002100000003f02200039000003cc02200197000003cd0320009c000000940000213d0000008001200039000000400010043f0000000603000029000000800030043f0000000000400435000000000303004b000002f40000613d000003db0220009c000000940000213d000003de05000041000c00a00000003d000580100000003d0000000006000019000b00000006001d0000004002100039000000400020043f000000000205041a000003c502200197000e00000001001d0000000001210436000700000001001d000d00000005001d0000000101500039000000000301041a000000400200043d000a00000002001d000800000003001d0000000002320436000900000002001d000000000010043500000000010004140000039f0210009c0000039f01008041000000c001100210000003a5011001c700000005020000290e770e720000040f000000010220019000000a310000613d000000000201043b0000000809000029000000080190008c000002d70000413d00000000010000190000000b060000290000000a070000290000000908000029000000e003800039000000000402041a000003dd0540019700000000005304350000002003400210000003dd03300197000000c00580003900000000003504350000004003400210000003dd03300197000000a00580003900000000003504350000006003400210000003dd03300197000000800580003900000000003504350000008003400210000003dd0330019700000060058000390000000000350435000000a003400210000003dd0330019700000040058000390000000000350435000000c003400210000003dd0330019700000020058000390000000000350435000000e003400210000000000038043500000001022000390000010008800039000000080110003900000007031001bf000000000393004b0000025c0000413d000000000202041a000000000391004b000002860000813d000000e003200210000000000838043600000001011001bf0000000e040000290000000d05000029000000000391004b000002be0000813d000000c003200210000003dd0330019700000000083804360000000101100039000000000391004b000002c00000413d000000000391004b000002c60000813d0000008003200210000003dd0330019700000000083804360000000101100039000000000391004b000002c80000413d000000000391004b000002ce0000813d0000004003200210000003dd0330019700000000083804360000000101100039000000000391004b000002d00000413d000000000191004b000002a40000813d000003dd01200197000000000818043600000000017800490000001f01100039000000200200008a000000000221016f0000000001720019000000000221004b00000000020000190000000102004039000003cb0310009c000000940000213d0000000102200190000000940000c13d000000400010043f000000070100002900000000007104350000000c030000290000000003430436000000400100043d0000000106600039000000060260006c00000a330000813d000c00000003001d0000000205500039000003a70210009c0000023a0000a13d000000940000013d000000000391004b000002900000813d000000a003200210000003dd0330019700000000083804360000000101100039000000000391004b000002920000413d000000000391004b000002980000813d0000006003200210000003dd0330019700000000083804360000000101100039000000000391004b0000029a0000413d000000000391004b000002a00000813d0000002003200210000003dd0330019700000000083804360000000101100039000000000191004b000002a20000413d000002a40000013d00000000010000190000000b060000290000000a070000290000000908000029000000000202041a000000000391004b000002830000413d000002860000013d0000000001000416000000000101004b00000a310000c13d0000001c04000039000000000104041a000600000001001d000003cb0210009c000000940000213d000000060100002900000005021002100000003f02200039000003cc02200197000003cd0320009c000000940000213d0000008001200039000000400010043f0000000603000029000000800030043f0000000000400435000000000303004b000006980000c13d000e00000001001d00000080020000390e770d750000040f000003f10000013d0000000001000416000000000101004b00000a310000c13d0000001702000039000000000102041a000000800010043f0000000000200435000000000201004b000004490000c13d000003150000013d0000000001000416000000000101004b00000a310000c13d0e770e0f0000040f0000031b0000013d0000000001000416000000000101004b00000a310000c13d0e770e2f0000040f0000031b0000013d0000000001000416000000000101004b00000a310000c13d0000001502000039000000000102041a000000800010043f0000000000200435000000000201004b000004550000c13d0000002002000039000004610000013d0000000001000416000000000101004b00000a310000c13d0e770d9f0000040f000000000101004b0000000001000019000000010100c039000000400200043d00000000001204350000039f010000410000039f0320009c00000000020180190000004001200210000003c6011001c700000e780001042e0000000001000416000000000101004b00000a310000c13d0000002401000039000d00000001001d000000000201041a0000002e01000039000c00000001001d000000000101041a000003cf03000041000000800030043f000003c501100197000e00000001001d000000840010043f0000000001000414000003c502200197000000040320008c000004730000c13d0000000003000031000000200130008c000000000403001900000020040080390000049e0000013d0000000001000416000000000101004b00000a310000c13d0000001b01000039000000000201041a000500000002001d000003cb0220009c000000940000213d000000050200002900000005022002100000003f02200039000003cc02200197000003cd0320009c000000940000213d000000800f2000390000004000f0043f0000000503000029000000800030043f0000000000100435000000000103004b000007430000c13d000000200100003900000000021f0436000000800100043d00000000001204350000004003f0003900000005021002100000000002320019000000000401004b000009110000c13d0000000001f200490000039f020000410000039f0310009c00000000010280190000039f03f0009c000000000f0280190000004002f002100000006001100210000000000121019f00000e780001042e0000000001000416000000000101004b00000a310000c13d0000001e01000039000000000201041a000100000002001d000003cb0220009c000000940000213d000000010200002900000005022002100000003f02200039000003cc02200197000003cd0320009c000000940000213d0000008003200039000000400030043f0000000104000029000000800040043f0000000000100435000000000104004b0000082d0000c13d00000020010000390000000002130436000000800100043d0000000000120435000e00000003001d000000400230003900000005031002100000000006230019000d00000001001d000000000301004b000009430000c13d000000000b0600190000000e0400002900000000014b00490000046a0000013d0000000001000416000000000101004b00000a310000c13d0000001904000039000000000504041a000003cb0250009c000000940000213d00000005025002100000003f02200039000003cc02200197000003cd0320009c000000940000213d0000008001200039000000400010043f000000800050043f0000000000400435000000000205004b000003ee0000613d0000008006000039000003ce070000410000000008000019000800000005001d000000000107041a000000010210019000000001031002700000007f0430018f000000000403c0190000001f0340008c00000000030000190000000103002039000000000331013f0000000103300190000008fb0000c13d000000400900043d0000000003490436000000000202004b000003d10000613d000900000003001d000a00000004001d000b00000009001d000c00000008001d000e00000006001d000d00000007001d000000000070043500000000010004140000039f0210009c0000039f01008041000000c001100210000003a5011001c700008010020000390e770e720000040f000000010220019000000a310000613d0000000a0a00002900000000020a004b00000008050000290000000e060000290000000c08000029000003d80000613d000000000201043b00000000010000190000000d070000290000000b09000029000000090b0000290000000003b10019000000000402041a0000000000430435000000010220003900000020011000390000000003a1004b000003c90000413d000003db0000013d000001000200008a000000000121016f0000000000130435000000000104004b00000020010000390000000001006019000003db0000013d00000000010000190000000d070000290000000b090000290000003f01100039000000200200008a000000000221016f0000000001920019000000000221004b00000000020000190000000102004039000003cb0310009c000000940000213d0000000102200190000000940000c13d0000002006600039000000400010043f000000000096043500000001077000390000000108800039000000000158004b0000039f0000413d000000400100043d000e00000001001d00000080020000390e770d4d0000040f0000000e04000029000004690000013d0000039f030000410000039f0410009c0000000001038019000000c001100210000003d0011001c70e770e720000040f000000000301001900000060033002700000039f03300197000000200430008c000000000403001900000020040080390000001f0540018f00000005064002720000040b0000613d00000000070000190000000508700210000000000981034f000000000909043b000000800880003900000000009804350000000107700039000000000867004b000004030000413d000000000705004b0000041a0000613d0000000506600210000000000761034f00000003055002100000008006600039000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000000000003001f000100000001035500000001022001900000054b0000613d0000001f01400039000000600110018f00000080021001bf000e00000002001d000000400020043f000000200230008c00000a310000413d0000002302000039000a00000002001d000000000202041a0000002603000039000900000003001d000000000303041a000000800400043d000800000004001d000003d1040000410000000e05000029000000000045043500000084041001bf0000000d060000290000000000640435000000a40410003900000000003404350000000003000414000003c502200197000000040420008c0000056b0000c13d0000000001150019000d00000001001d000000400010043f000005a00000013d000000a004000039000003e20200004100000000030000190000000005040019000000000402041a000003c504400197000000000445043600000001022000390000000103300039000000000613004b000004400000413d000004600000013d000000a004000039000003e10200004100000000030000190000000005040019000000000402041a000003c504400197000000000445043600000001022000390000000103300039000000000613004b0000044c0000413d000004600000013d000000a004000039000003c40200004100000000030000190000000005040019000000000402041a000003c504400197000000000445043600000001022000390000000103300039000000000613004b000004580000413d000000600250008a0000008001000039000e00000001001d0e770dfc0000040f000000400100043d000d00000001001d0000000e020000290e770d3d0000040f0000000d0400002900000000014100490000039f020000410000039f0310009c00000000010280190000039f0340009c000000000402801900000040024002100000006001100210000000000121019f00000e780001042e0000039f030000410000039f0410009c0000000001038019000000c001100210000003d0011001c70e770e720000040f000000000301001900000060033002700000039f03300197000000200430008c000000000403001900000020040080390000001f0540018f00000005064002720000048b0000613d00000000070000190000000508700210000000000981034f000000000909043b000000800880003900000000009804350000000107700039000000000867004b000004830000413d000000000705004b0000049a0000613d0000000506600210000000000761034f00000003055002100000008006600039000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000000000003001f000100000001035500000001022001900000055b0000613d0000001f01400039000000600110018f00000080011001bf000000400010043f000000200130008c00000a310000413d000000800100043d000b00000001001d000003d5010000410000000000100439000003c80100004100000004001004430000039f0100004100000000020004140000039f0320009c0000000002018019000000c001200210000003d6011001c700008002020000390e770e720000040f000000010220019000000c950000613d000000000101043b000000000101004b00000a310000613d000000400400043d000003d701000041000000000014043500000004014000390000000e0200002900000000002104350000039f0100004100000000020004140000039f0320009c00000000020180190000039f0340009c000e00000004001d00000000010440190000004001100210000000c002200210000000000112019f000003d8011001c7000003c8020000410e770e6d0000040f000000000301001900000060033002700000039f0030019d0000039f0330019700010000000103550000000102200190000009db0000613d0000000e02000029000003cb0120009c000000940000213d000000400020043f0000002601000039000000000101041a000a00000001001d0000002301000039000000000101041a000003d5020000410000000000200439000003c501100197000e00000001001d00000004001004430000039f0100004100000000020004140000039f0320009c0000000002018019000000c001200210000003d6011001c700008002020000390e770e720000040f000000010220019000000c950000613d000000000101043b000000000101004b00000a310000613d000000400400043d000003e601000041000000000014043500000004024000390000004001000039000800000002001d000000000012043500000044014000390000002a03000039000000000203041a00000000002104350000000000300435000900000004001d0000006401400039000000000302004b000005040000613d000003e7030000410000000004000019000000000503041a000000000151043600000001033000390000000104400039000000000524004b000004fe0000413d000000090200002900000024022000390000000a03000029000000000032043500000000020004140000000e03000029000000040330008c000005240000613d000000090500002900000000015100490000039f030000410000039f0450009c0000000004030019000000000405401900000040044002100000039f0510009c00000000010380190000006001100210000000000141019f0000039f0420009c0000000002038019000000c002200210000000000121019f0000000e020000290e770e6d0000040f000000000301001900000060033002700000039f0030019d0000039f033001970001000000010355000000010220019000000b990000613d0000000901000029000003cb0110009c000000940000213d0000000904000029000000400040043f0000000d01000029000000000201041a0000000c01000029000000000101041a000003cf030000410000000000340435000003c501100197000000080300002900000000001304350000000001000414000003c502200197000000040320008c00000bdb0000c13d0000000003000031000000200130008c0000000004030019000000200400803900000c0c0000013d000000400200043d0000001f0430018f0000000505300272000005480000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000005400000413d000000000604004b00000d060000613d00000cf90000013d000000400200043d0000001f0430018f0000000505300272000005580000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000005500000413d000000000604004b00000d060000613d00000cf90000013d000000400200043d0000001f0430018f0000000505300272000005680000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000005600000413d000000000604004b00000d060000613d00000cf90000013d0000039f010000410000039f0430009c0000000003018019000000c0013002100000004003500210000000000131019f000003d2011001c70e770e720000040f0000000e0a000029000000000301001900000060033002700000039f03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000005860000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b0000057e0000413d000000000705004b000005950000613d0000000506600210000000000761034f00000000066a00190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000000000003001f00010000000103550000000102200190000009010000613d0000001f01400039000000600110018f0000000001a10019000d00000001001d000000400010043f000000200130008c00000a310000413d0000000e010000290000000001010433000003d3020000410000000d040000290000000002240436000e00000002001d00000004024001bf000003d40300004100000000003204350000002402400039000d00000004001d00000000001204350000039f0100004100000000020004140000039f0320009c0000000002018019000000c0012002100000004002400210000000000112019f000003d2011001c7000003c8020000410e770e720000040f0000000d0a000029000000000301001900000060033002700000039f03300197000000600430008c000000000403001900000060040080390000001f0540018f0000000506400272000005c90000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b000005c10000413d000000000705004b000005d80000613d0000000506600210000000000761034f00000000066a00190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000000000003001f00010000000103550000000102200190000008c10000613d0000001f01400039000000e00110018f0000000001a10019000000400010043f000000600130008c00000a310000413d0000000d010000290000000001010433000700000001001d000000ff0110008c00000a310000213d0000000d0100002900000040011000390000000001010433000600000001001d0000000e010000290000000001010433000d00000001001d0000002e01000039000000000101041a000e00000001001d000003d5010000410000000000100439000003c80100004100000004001004430000039f0100004100000000020004140000039f0320009c0000000002018019000000c001200210000003d6011001c700008002020000390e770e720000040f0000000e03000029000003c503300197000000010220019000000c950000613d000000000101043b000000000101004b00000a310000613d000000400400043d000003d7010000410000000000140435000000040140003900000000003104350000039f0100004100000000020004140000039f0320009c00000000020180190000039f0340009c000e00000004001d00000000010440190000004001100210000000c002200210000000000112019f000003d8011001c7000003c8020000410e770e6d0000040f000000000301001900000060033002700000039f0030019d0000039f033001970001000000010355000000010220019000000a450000613d0000000e01000029000003cb0110009c000000940000213d0000000e01000029000000400010043f0000000901000029000000000101041a000900000001001d0000000c01000029000000000101041a000e00000001001d0000000a01000029000000000101041a000003d5020000410000000000200439000003c501100197000a00000001001d00000004001004430000039f0100004100000000020004140000039f0320009c0000000002018019000000c001200210000003d6011001c700008002020000390e770e720000040f0000000e03000029000003c503300197000000010220019000000c950000613d000000000101043b000000000101004b00000a310000613d000000400500043d000003d90100004100000000001504350000000402500039000000c001000039000500000002001d0000000000120435000000c4015000390000002d04000039000000000204041a00000000002104350000000000400435000e00000005001d000000e401500039000000000402004b000006560000613d000003da040000410000000005000019000000000604041a000000000161043600000001044000390000000105500039000000000625004b000006500000413d0000000e05000029000000a4025000390000000604000029000000000042043500000084025000390000000d0400002900000000004204350000000702000029000000ff0220018f000000640450003900000000002404350000004402500039000000090400002900000000004204350000002402500039000000000032043500000000020004140000000a03000029000000040330008c000006820000613d0000000e0500002900000000015100490000039f030000410000039f0450009c0000000004030019000000000405401900000040044002100000039f0510009c00000000010380190000006001100210000000000141019f0000039f0420009c0000000002038019000000c002200210000000000112019f0000000a020000290e770e6d0000040f000000000301001900000060033002700000039f0030019d0000039f033001970001000000010355000000010220019000000c960000613d0000000e01000029000003cb0110009c000000940000213d0000000e04000029000000400040043f0000000b01000029000000000201041a0000000c01000029000000000101041a000003cf030000410000000000340435000003c501100197000000050300002900000000001304350000000001000414000003c502200197000000040320008c00000ca60000c13d0000000004000031000000200140008c000000200400803900000cd80000013d000003db0220009c000000940000213d000003dc04000041000000a005000039000580100000003d0000000006000019000b00000006001d000c00000005001d0000004002100039000000400020043f000000000204041a000003c502200197000e00000001001d0000000001210436000700000001001d000d00000004001d0000000101400039000000000301041a000000400200043d000a00000002001d000800000003001d0000000002320436000900000002001d000000000010043500000000010004140000039f0210009c0000039f01008041000000c001100210000003a5011001c700000005020000290e770e720000040f000000010220019000000a310000613d000000000201043b0000000809000029000000080190008c0000073b0000413d00000000010000190000000b060000290000000a070000290000000908000029000000e003800039000000000402041a000003dd0540019700000000005304350000002003400210000003dd03300197000000c00580003900000000003504350000004003400210000003dd03300197000000a00580003900000000003504350000006003400210000003dd03300197000000800580003900000000003504350000008003400210000003dd0330019700000060058000390000000000350435000000a003400210000003dd0330019700000040058000390000000000350435000000c003400210000003dd0330019700000020058000390000000000350435000000e003400210000000000038043500000001022000390000010008800039000000080110003900000007031001bf000000000393004b000006c10000413d000000000202041a000000000391004b000006eb0000813d000000e003200210000000000838043600000001011001bf0000000d040000290000000c05000029000000000391004b000007220000813d000000c003200210000003dd0330019700000000083804360000000101100039000000000391004b000007240000413d000000000391004b0000072a0000813d0000008003200210000003dd0330019700000000083804360000000101100039000000000391004b0000072c0000413d000000000391004b000007320000813d0000004003200210000003dd0330019700000000083804360000000101100039000000000391004b000007340000413d000000000191004b000007090000813d000003dd01200197000000000818043600000000017800490000001f01100039000000200200008a000000000221016f0000000001720019000000000221004b00000000020000190000000102004039000003cb0310009c0000000e03000029000000940000213d0000000102200190000000940000c13d000000400010043f000000070100002900000000007104350000000005350436000000400100043d0000000106600039000000060260006c000002f40000813d0000000204400039000003a70210009c0000069e0000a13d000000940000013d000000000391004b000006f50000813d000000a003200210000003dd0330019700000000083804360000000101100039000000000391004b000006f70000413d000000000391004b000006fd0000813d0000006003200210000003dd0330019700000000083804360000000101100039000000000391004b000006ff0000413d000000000391004b000007050000813d0000002003200210000003dd0330019700000000083804360000000101100039000000000191004b000007070000413d000007090000013d00000000010000190000000b060000290000000a070000290000000908000029000000000202041a000000000391004b000006e80000413d000006eb0000013d000003db0120009c000000940000213d000003e005000041000c00a00000003d000b00000000001d0000004006f00039000000400060043f000000000105041a000000010210019000000001031002700000007f0430018f000000000403c0190000001f0340008c00000000030000190000000103002039000000000331013f0000000103300190000008fb0000c13d00000000004604350000006003f00039000000000202004b000e0000000f001d000d00000005001d000007790000613d000800000003001d000a00000004001d000900000006001d000000000050043500000000010004140000039f0210009c0000039f01008041000000c001100210000003a5011001c700008010020000390e770e720000040f000000010220019000000a310000613d0000000a07000029000000000207004b000007800000613d000000000201043b00000000010000190000000e0f0000290000000d05000029000000090600002900000008080000290000000003810019000000000402041a000000000043043500000001022000390000002001100039000000000371004b000007710000413d000007840000013d000001000200008a000000000121016f0000000000130435000000000104004b00000020010000390000000001006019000007840000013d00000000010000190000000e0f0000290000000d0500002900000009060000290000003f01100039000a0020000000920000000a0210017f0000000001620019000000000221004b00000000020000190000000102004039000003cb0310009c000000940000213d0000000102200190000000940000c13d000000400010043f00000000016f0436000600000001001d0000000101500039000000000301041a000000400200043d000900000002001d000700000003001d0000000002320436000800000002001d000000000010043500000000010004140000039f0210009c0000039f01008041000000c001100210000003a5011001c700008010020000390e770e720000040f000000010220019000000a310000613d000000000201043b0000000708000029000000080180008c000008260000413d00000000010000190000000e060000290000000807000029000000e003700039000000000402041a000003dd0540019700000000005304350000002003400210000003dd03300197000000c00570003900000000003504350000004003400210000003dd03300197000000a00570003900000000003504350000006003400210000003dd03300197000000800570003900000000003504350000008003400210000003dd0330019700000060057000390000000000350435000000a003400210000003dd0330019700000040057000390000000000350435000000c003400210000003dd0330019700000020057000390000000000350435000000e003400210000000000037043500000001022000390000010007700039000000080110003900000007031001bf000000000383004b000007aa0000413d000000000202041a000000000381004b000007d40000813d000000e003200210000000000737043600000001011001bf0000000d050000290000000904000029000000000381004b0000080d0000813d000000c003200210000003dd0330019700000000073704360000000101100039000000000381004b0000080f0000413d000000000381004b000008150000813d0000008003200210000003dd0330019700000000073704360000000101100039000000000381004b000008170000413d000000000381004b0000081d0000813d0000004003200210000003dd0330019700000000073704360000000101100039000000000381004b0000081f0000413d000000000181004b000007f20000813d000003dd01200197000000000717043600000000014700490000001f011000390000000a0210017f0000000001420019000000000221004b00000000020000190000000102004039000003cb0310009c000000940000213d0000000102200190000000940000c13d000000400010043f000000060100002900000000004104350000000c010000290000000001610436000c00000001001d000000400f00043d0000000b020000290000000102200039000b00000002001d000000050120006c00000a440000813d0000000205500039000003a701f0009c000007480000a13d000000940000013d000000000381004b000007de0000813d000000a003200210000003dd0330019700000000073704360000000101100039000000000381004b000007e00000413d000000000381004b000007e60000813d0000006003200210000003dd0330019700000000073704360000000101100039000000000381004b000007e80000413d000000000381004b000007ee0000813d0000002003200210000003dd0330019700000000073704360000000101100039000000000181004b000007f00000413d000007f20000013d00000000010000190000000e060000290000000807000029000000000202041a000000000381004b000007d10000413d000007d40000013d000e00000003001d000003db0120009c000000940000213d000503e300000045000400a00000003d000300000000001d0000000e020000290000004001200039000000400010043f0000000503000029000000000103041a000003c5011001970000000001120436000200000001001d00000001013001bf000000000501041a000003cb0250009c000000940000213d00000005025002100000003f02200039000003cc02200197000000400300043d0000000002230019000600000003001d000000000332004b00000000030000190000000103004039000003cb0420009c000000940000213d0000000103300190000000940000c13d000000400020043f000700000005001d00000006020000290000000000520435000000000010043500000000010004140000039f0210009c0000039f01008041000000c001100210000003a5011001c700008010020000390e770e720000040f000000010220019000000a310000613d0000000705000029000000000205004b000008ae0000613d000000000601043b00000000070000190000000608000029000000000106041a000000010210019000000001031002700000007f0430018f000000000403c0190000001f0340008c00000000030000190000000103002039000000000332004b000008fb0000c13d000000400900043d0000000003490436000000000202004b000008910000613d000800000003001d000900000004001d000a00000009001d000b00000008001d000c00000007001d000d00000006001d000000000060043500000000010004140000039f0210009c0000039f01008041000000c001100210000003a5011001c700008010020000390e770e720000040f000000010220019000000a310000613d000000090a00002900000000020a004b0000000c070000290000000b08000029000008980000613d000000000201043b000000000100001900000007050000290000000d060000290000000a09000029000000080b0000290000000003b10019000000000402041a0000000000430435000000010220003900000020011000390000000003a1004b000008890000413d0000089c0000013d000001000200008a000000000121016f0000000000130435000000000104004b000000200100003900000000010060190000089c0000013d000000000100001900000007050000290000000d060000290000000a090000290000003f01100039000000200200008a000000000221016f0000000001920019000000000221004b00000000020000190000000102004039000003cb0310009c000000940000213d0000000102200190000000940000c13d0000002008800039000000400010043f000000000098043500000001066000390000000107700039000000000157004b000008600000413d0000000201000029000000060200002900000000002104350000000e0100002900000004020000290000000002120436000400000002001d000000400300043d00000003020000290000000102200039000300000002001d000000010120006c00000bda0000813d0000000501000029000500020010003d000e00000003001d000003a70130009c000008330000a13d000000940000013d000000400200043d0000001f0430018f0000000505300272000008ce0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000008c60000413d000000000604004b00000d060000613d00000cf90000013d0001000000010355000000000201001900000060022002700000039f0020019d0000039f02200197000000400300043d0000001f0420018f0000000505200272000008e30000613d000000000600001900000005076002100000000008730019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000008db0000413d000000000604004b000008f20000613d0000000505500210000000000151034f00000000055300190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f00000000001504350000039f010000410000039f0430009c00000000030180190000039f0420009c000000000201801900000060012002100000004002300210000000000112019f00000e7900010430000003e40100004100000000001004350000002201000039000000040010043f000003d80100004100000e7900010430000000400200043d0000001f0430018f00000005053002720000090e0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000009060000413d000000000604004b00000d060000613d00000cf90000013d000000800400003900000040050000390000000006000019000009180000013d0000000106600039000000000716004b0000035b0000813d0000000007f20049000000400770008a00000000037304360000002004400039000000000704043300000000890704340000000007520436000000400c20003900000000ba0904340000000000ac04350000006009200039000000000c0a004b0000092d0000613d000000000c000019000000000d9c0019000000000ecb0019000000000e0e04330000000000ed0435000000200cc00039000000000dac004b000009260000413d000000000b9a001900000000000b04350000001f0aa00039000000200b00008a000000000aba016f00000000099a001900000000080804330000000002290049000000000027043500000000070804330000000002790436000000000907004b000009150000613d00000000090000190000002008800039000000000a080433000003dd0aa001970000000002a204360000000109900039000000000a79004b0000093b0000413d000009150000013d0000008003000039000000400400003900000000050000190000094b0000013d00000001055000390000000d0150006c00000000060b0019000003860000813d0000000e0760006a000000400770008a0000000002720436000000200330003900000000070304330000000087070434000003c5077001970000000009760436000000000708043300000000004904350000004009600039000000000807043300000000008904350000006009600039000000050a800210000000000b9a0019000000000a08004b000009470000613d000000000a000019000009680000013d0000001f01c00039000000200d00008a0000000001d1016f000000000cbc001900000000000c0435000000000bb10019000000010aa0003900000000018a004b000009470000813d000000000c6b0049000000600cc0008a0000000009c904360000002007700039000000000c07043300000000dc0c0434000000000bcb0436000000000e0c004b0000095f0000613d000000000e000019000000000fbe00190000000001ed0019000000000101043300000000001f0435000000200ee000390000000001ce004b000009720000413d0000095f0000013d000000400300043d000003cd0130009c000000940000213d0000008001300039000000400010043f00000060013000390000000802000039000000000021043500000040013000390000000502000039000000000021043500000020013000390000000402000039000000000021043500000003010000390000000000130435000c80090000003d000b00010000003d0000000005000019000d00000003001d000009920000013d000000030150008c0000000105500039000000e20000813d0000000501500210000000000131001900000000020104330000000001000414000003c504200197000000040240008c0000098f0000613d0000039f0210009c0000039f01008041000000c001100210000003ea011001c70000000c020000290000000b03000029000e00000005001d00000000050000190e770e6d0000040f0000000e05000029000000000301001900000060033002700000039f0030019d0000000d03000029000100000001035500000001012001900000098f0000c13d000000400100043d000003eb0210009c000000940000213d0000002402100039000003ec030000410000000000320435000000440210003900000000030004140000006004000039000e00000004001d0000000000420435000003ed02000041000000000021043500000064021000390000000000020435000000040210003900000000000204350000039f020000410000039f0430009c00000000030280190000039f0410009c00000000010280190000004001100210000000c002300210000000000121019f000003ee011001c700008006020000390e770e6d0000040f000000010220019000000b840000613d000000000101043b000000000201004b00000ba90000c13d0000000101000367000000000200003100000b890000013d000000400a00043d000003f40100004100000000011a0436000e00000001001d0000000001000414000003c502200197000000040320008c000009eb0000c13d0000000003000031000000400130008c0000000004030019000000400400803900000a1c0000013d000000400200043d0000001f0430018f0000000505300272000009e80000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000009e00000413d000000000604004b00000d060000613d00000cf90000013d0000039f030000410000039f0410009c00000000010380190000039f04a0009c00000000030a40190000004003300210000000c001100210000000000131019f000003f5011001c7000d0000000a001d0e770e6d0000040f0000000d0a000029000000000301001900000060033002700000039f03300197000000400430008c000000000403001900000040040080390000001f0540018f000000050640027200000a090000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b00000a010000413d000000000705004b00000a180000613d0000000506600210000000000761034f00000000066a00190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000000000003001f0001000000010355000000010220019000000a340000613d0000001f01400039000000e00110018f0000000004a10019000000000114004b00000000010000190000000101004039000003cb0240009c000000940000213d0000000101100190000000940000c13d000d00000004001d000000400040043f000000400130008c00000a310000413d00000000010a0433000003c50210009c00000a310000213d0000000e020000290000000002020433000003c50320009c00000a550000a13d000000000100001900000e7900010430000002f40000013d000000400200043d0000001f0430018f000000050530027200000a410000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00000a390000413d000000000604004b00000d060000613d00000cf90000013d000003520000013d000000400200043d0000001f0430018f000000050530027200000a520000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00000a4a0000413d000000000604004b00000d060000613d00000cf90000013d0000002403000039000000000403041a000003ef04400197000000000224019f000000000023041b0000002302000039000000000302041a000003ef03300197000000000113019f000000000012041b0000000d02000029000003a70120009c000000940000213d0000004001200039000000400010043f0000002007200039000003f6010000410000000000170435000000040300003a0000000000320435000000400100043d000000200210003900000a740000613d000000000400001900000000052400190000000006740019000000000606043300000000006504350000002004400039000000000534004b00000a6d0000413d000e00000007001d000000000323001900000000000304350000000003130049000000200430008a00000000004104350000001f03300039000c0020000000920000000c0430017f0000000003140019000000000443004b00000000040000190000000104004039000003cb0530009c000000940000213d0000000104400190000000940000c13d000000400030043f0000039f040000410000039f0320009c0000000002048019000000400220021000000000010104330000039f0310009c00000000010480190000006001100210000000000121019f00000000020004140000039f0320009c0000000002048019000000c002200210000000000112019f000003ea011001c700008010020000390e770e720000040f000000010220019000000a310000613d000000000201043b000000400400043d000b00000004001d000003f70100004100000000001404350000000401400039000a00000002001d000000000021043500000000010004140000039f0210009c0000039f0300004100000000010380190000039f0240009c00000000030440190000004002300210000000c001100210000000000121019f000003d8011001c7000003c8020000410e770e720000040f0000000b0a000029000000000301001900000060033002700000039f03300197000000200430008c000000000403001900000020040080390000001f0540018f000000050640027200000ac00000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b00000ab80000413d00000000090a0019000000000705004b00000ad00000613d0000000506600210000000000761034f00000000066900190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000000000003001f0001000000010355000000010220019000000c3f0000613d0000001f01400039000000600210018f0000000001920019000000000221004b00000000020000190000000102004039000003cb0410009c000000940000213d0000000102200190000000940000c13d000000400010043f000000200130008c00000a310000413d0000000001090433000b00000001001d000003c50110009c00000a310000213d000003d5010000410000000000100439000003c80100004100000004001004430000039f0100004100000000020004140000039f0320009c0000000002018019000000c001200210000003d6011001c700008002020000390e770e720000040f000000010220019000000c950000613d000000000101043b000000000101004b00000a310000613d000000400300043d000000240130003900000040020000390000000000210435000003f801000041000000000013043500000004023000390000000b01000029000800000002001d00000000001204350000000d01000029000000000101043300000044023000390000000000120435000900000003001d0000006402300039000000000301004b0000000e0600002900000b110000613d000000000300001900000000042300190000000005630019000000000505043300000000005404350000002003300039000000000413004b00000b0a0000413d000000000221001900000000000204350000001f011000390000000c0110017f00000064011000390000039f020000410000039f0310009c0000000001028019000000600110021000000000030004140000039f0430009c0000000003028019000000c003300210000000000113019f00000009040000290000039f0340009c0000000002044019000e0040002002180000000e011001af000003c8020000410e770e6d0000040f000000000301001900000060033002700000039f0030019d0000039f033001970001000000010355000000010220019000000d1d0000613d0000000901000029000003cb0110009c000000940000213d0000000901000029000000400010043f000000000401001900000030010000390000000a02000029000000000021041b0000000b01000029000003c5011001970000002e02000039000000000302041a000003ef03300197000000000113019f000000000012041b000003f7010000410000000000140435000003d401000041000000080200002900000000001204350000039f0100004100000000020004140000039f0320009c0000000002018019000000c0012002100000000e011001af000003d8011001c7000003c8020000410e770e720000040f000000090a000029000000000301001900000060033002700000039f03300197000000200430008c000000000403001900000020040080390000001f0540018f000000050640027200000b5e0000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b00000b560000413d000000000705004b00000b6d0000613d0000000506600210000000000761034f00000009066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000000000003001f0001000000010355000000010220019000000d2d0000613d0000001f01400039000000600110018f0000000901100029000003cb0210009c000000940000213d000000400010043f000000200130008c00000a310000413d00000009010000290000000001010433000003c50210009c00000a310000213d0000002f02000039000000000302041a000003ef03300197000000000113019f000000000012041b000000000100001900000e780001042e0001000000010355000000000201001900000060022002700000039f0020019d0000039f02200197000000400300043d0000001f0420018f000000050520027200000b960000613d000000000600001900000005076002100000000008730019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00000b8e0000413d000000000604004b000008e50000c13d000008f20000013d000000400200043d0000001f0430018f000000050530027200000ba60000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00000b9e0000413d000000000604004b00000d060000613d00000cf90000013d000003c5021001970000002403000039000000000103041a000003ef01100197000000000121019f000d00000003001d000000000013041b000000400100043d000003eb0310009c000000940000213d0000002503000039000000000303041a000000a4041000390000000000240435000000840210003900000000003204350000002402100039000003f0030000410000000000320435000000640210003900000000030004140000004004000039000000000042043500000044021000390000000e040000290000000000420435000003ed020000410000000000210435000000040210003900000000000204350000039f020000410000039f0430009c00000000030280190000039f0410009c00000000010280190000004001100210000000c002300210000000000121019f000003f1011001c700008006020000390e770e6d0000040f000000010220019000000c2a0000613d000000000101043b000000000201004b00000c4f0000c13d0000000101000367000000000200003100000c2f0000013d0000037a0000013d0000039f030000410000039f0410009c000000000103801900000009050000290000039f0450009c00000000030540190000004003300210000000c001100210000000000131019f000003d8011001c70e770e720000040f000000090a000029000000000301001900000060033002700000039f03300197000000200430008c000000000403001900000020040080390000001f0540018f000000050640027200000bf90000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b00000bf10000413d000000000705004b00000c080000613d0000000506600210000000000761034f00000009066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000000000003001f0001000000010355000000010220019000000c1a0000613d0000001f01400039000000600110018f0000000901100029000003cb0210009c000000940000213d000000400010043f000000200130008c00000a310000413d000000090100002900000000010104330000000b0110006c00000ce40000a13d000000000100001900000e780001042e000000400200043d0000001f0430018f000000050530027200000c270000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00000c1f0000413d000000000604004b00000d060000613d00000cf90000013d0001000000010355000000000201001900000060022002700000039f0020019d0000039f02200197000000400300043d0000001f0420018f000000050520027200000c3c0000613d000000000600001900000005076002100000000008730019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00000c340000413d000000000604004b000008f20000613d000008e50000013d000000400200043d0000001f0430018f000000050530027200000c4c0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00000c440000413d000000000604004b00000cf90000c13d00000d060000013d000c03c50010019b0000002301000039000000000201041a000003ef022001970000000c022001af000000000021041b0000002701000039000000000101041a000b00000001001d0000000d01000029000000000101041a000003d5020000410000000000200439000003c501100197000e00000001001d00000004001004430000039f0100004100000000020004140000039f0320009c0000000002018019000000c001200210000003d6011001c700008002020000390e770e720000040f000000010220019000000c950000613d000000000101043b000000000101004b00000a310000613d000000400200043d00000024012000390000000b030000290000000000310435000003f2010000410000000000120435000d00000002001d00000004012000390000000c02000029000000000021043500000000010004140000000e02000029000000040220008c00000c8d0000613d0000039f020000410000039f0310009c00000000010280190000000d040000290000039f0340009c00000000020440190000004002200210000000c001100210000000000121019f000003d2011001c70000000e020000290e770e6d0000040f000000000301001900000060033002700000039f0030019d0000039f033001970001000000010355000000010220019000000d0d0000613d0000000d02000029000003cb0120009c000000940000213d000000400020043f0000000d02000029000003a70120009c000000940000213d00000a620000013d000000000001042f000000400200043d0000001f0430018f000000050530027200000ca30000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00000c9b0000413d000000000604004b00000d060000613d00000cf90000013d0000039f030000410000000e050000290000039f0450009c000000000403001900000000040540190000039f0510009c0000000001038019000000c0011002100000004003400210000000000113019f000003d8011001c70e770e720000040f0000000e0a000029000000000301001900000060033002700000039f03300197000000200430008c000000000403001900000020040080390000001f0540018f000000050640027200000cc50000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b00000cbd0000413d000000000705004b00000cd40000613d0000000506600210000000000761034f0000000e066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000000000003001f0001000000010355000000010220019000000cea0000613d0000001f01400039000000600110018f0000000e01100029000003cb0210009c000000940000213d000000400010043f000000200140008c00000a310000413d0000000e010000290000000001010433000000080110006c00000c180000213d000003e40100004100000000001004350000000101000039000000040010043f000003d80100004100000e7900010430000000400200043d0000001f0430018f000000050530027200000cf70000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00000cef0000413d000000000604004b00000d060000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f00000000001504350000039f010000410000039f0420009c000000000201801900000040012002100000006002300210000000000121019f00000e7900010430000000400200043d0000001f0430018f000000050530027200000d1a0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00000d120000413d000000000604004b00000d060000613d00000cf90000013d000000400200043d0000001f0430018f000000050530027200000d2a0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00000d220000413d000000000604004b00000d060000613d00000cf90000013d000000400200043d0000001f0430018f000000050530027200000d3a0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00000d320000413d000000000604004b00000d060000613d00000cf90000013d00000020030000390000000004310436000000000302043300000000003404350000004001100039000000000403004b00000d4c0000613d000000000400001900000020022000390000000005020433000003c50550019700000000015104360000000104400039000000000534004b00000d450000413d000000000001042d0000002003000039000000000331043600000000040204330000000000430435000000400510003900000005034002100000000003350019000000000604004b00000d730000613d000000000600001900000d610000013d0000001f08700039000000200900008a000000000898016f0000000007370019000000000007043500000000033800190000000106600039000000000746004b00000d730000813d0000000007130049000000400770008a00000000057504360000002002200039000000000702043300000000870704340000000003730436000000000907004b00000d580000613d0000000009000019000000000a390019000000000b980019000000000b0b04330000000000ba04350000002009900039000000000a79004b00000d6b0000413d00000d580000013d0000000001030019000000000001042d0000002003000039000000000331043600000000040204330000000000430435000000400510003900000005034002100000000003350019000000000604004b00000d9d0000613d0000004006000039000000000700001900000d840000013d0000000107700039000000000847004b00000d9d0000813d0000000008130049000000400880008a0000000005850436000000200220003900000000080204330000000098080434000003c508800197000000000a830436000000000809043300000000006a0435000000400a300039000000000908043300000000009a04350000006003300039000000000a09004b00000d810000613d000000000a0000190000002008800039000000000b080433000003dd0bb001970000000003b30436000000010aa00039000000000b9a004b00000d950000413d00000d810000013d0000000001030019000000000001042d00040000000000020000002001000039000000000101041a000400000001001d000003e80100004100000000001004390000039f0100004100000000020004140000039f0320009c0000000002018019000000c001200210000003e9011001c70000800b020000390e770e720000040f000000010220019000000df50000613d000000000101043b000000040210006c000000000300001900000dbd0000613d0000002102000039000000000202041a000000000221004b000000000300001900000dbd0000613d0000002202000039000000000202041a000000000121004b000000000300001900000dbf0000c13d0000000001030019000000000001042d000000400500043d000003f90150009c00000df60000813d0000008001500039000000400010043f00000060015000390000000802000039000000000021043500000040015000390000000502000039000000000021043500000020015000390000000402000039000000000021043500000003010000390000000000150435000180090000003d00000001030000390000000006000019000300000005001d000200000003001d00000dd80000013d000000030160008c000000010660003900000df20000813d0000000501600210000000000151001900000000020104330000000001000414000003c504200197000000040240008c00000dd50000613d0000039f0210009c0000039f01008041000000c001100210000003ea011001c700000001020000290000000005000019000400000006001d0e770e6d0000040f00000004060000290000000203000029000000000401001900000060044002700000039f0040019d00000003050000290001000000010355000000010120019000000dd50000c13d0000000001030019000000000001042d00000000030000190000000001030019000000000001042d000000000001042f000003e40100004100000000001004350000004101000039000000040010043f000003d80100004100000e79000104300000001f02200039000000200300008a000000000232016f0000000001120019000000000221004b00000000020000190000000102004039000003cb0310009c00000e090000213d000000010220019000000e090000c13d000000400010043f000000000001042d000003e40100004100000000001004350000004101000039000000040010043f000003d80100004100000e790001043000010000000000020000002001000039000000000101041a000100000001001d000003e80100004100000000001004390000039f0100004100000000020004140000039f0320009c0000000002018019000000c001200210000003e9011001c70000800b020000390e770e720000040f000000010220019000000e2e0000613d0000000102000039000000000101043b000000010310006c00000e2c0000613d0000002103000039000000000303041a000000000331004b00000e2c0000613d0000002202000039000000000202041a000000000121004b00000000020000190000000102006039000000010120018f000000000001042d000000000001042f0004000000000002000000400500043d000003cd0150009c00000e660000213d0000008001500039000000400010043f00000060015000390000000802000039000000000021043500000040015000390000000502000039000000000021043500000020015000390000000402000039000000000021043500000003010000390000000000150435000180090000003d00000001030000390000000006000019000300000005001d000200000003001d00000e490000013d000000030160008c000000010660003900000e630000813d0000000501600210000000000151001900000000020104330000000001000414000003c504200197000000040240008c00000e460000613d0000039f0210009c0000039f01008041000000c001100210000003ea011001c700000001020000290000000005000019000400000006001d0e770e6d0000040f00000004060000290000000203000029000000000401001900000060044002700000039f0040019d00000003050000290001000000010355000000010120019000000e460000c13d0000000001030019000000000001042d00000000030000190000000001030019000000000001042d000003e40100004100000000001004350000004101000039000000040010043f000003d80100004100000e7900010430000000000001042f00000e70002104210000000102000039000000000001042d0000000002000019000000000001042d00000e75002104230000000102000039000000000001042d0000000002000019000000000001042d00000e770000043200000e780001042e00000e79000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c40000000000000000000000000000000000000000000000015af1d78b58c400000000000000000000000000000000000000000000000000056bc75e2d631000000fd7c981d39bece61f7499702bf59b3114a90e66b51ba2c53abdf7b62986c00ae5ebd1e1b5a5478a944ecab36a9a954ac3b6b8216875f6524caa7a1d870965760200000000000000000000000000000000000020000000000000000000000000d1445c931158119b00449ffcac3c947d028c0c359c34a6646d95962b3b55c6ad000000000000000000000000000000000000000000000000ffffffffffffffbf00000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000066d9a99f00000000000000000000000000000000000000000000000000000000b5508aa800000000000000000000000000000000000000000000000000000000d9a34b2000000000000000000000000000000000000000000000000000000000d9a34b2100000000000000000000000000000000000000000000000000000000e20c9f7100000000000000000000000000000000000000000000000000000000fa7626d400000000000000000000000000000000000000000000000000000000b5508aa900000000000000000000000000000000000000000000000000000000ba414fa600000000000000000000000000000000000000000000000000000000916a17c500000000000000000000000000000000000000000000000000000000916a17c600000000000000000000000000000000000000000000000000000000b0464fdc00000000000000000000000000000000000000000000000000000000b1fc2abc0000000000000000000000000000000000000000000000000000000066d9a9a00000000000000000000000000000000000000000000000000000000085226c81000000000000000000000000000000000000000000000000000000002ade387f000000000000000000000000000000000000000000000000000000003f7286f3000000000000000000000000000000000000000000000000000000003f7286f40000000000000000000000000000000000000000000000000000000045bb5aae000000000000000000000000000000000000000000000000000000005909c12f000000000000000000000000000000000000000000000000000000002ade3880000000000000000000000000000000000000000000000000000000003e5e3c23000000000000000000000000000000000000000000000000000000000fd3f0bc000000000000000000000000000000000000000000000000000000000fd3f0bd000000000000000000000000000000000000000000000000000000001ed7831c000000000000000000000000000000000000000000000000000000000852749b000000000000000000000000000000000000000000000000000000000a9254e4000000000000000000000000000000000000002000000080000000000000000055f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000020000000000000000000000000667f9d70000000000000000000000000000000000000000000000000000000000000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d6661696c656400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044000000800000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0000000000000000000000000000000000000000000000000ffffffffffffff7f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c969570a082310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000008000000000000000008d93d984000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044000000000000000000000000e341eaa400000000000000000000000000000000000000000000000000000000ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff801806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830200000200000000000000000000000000000024000000000000000000000000ca669fa70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000001b2aa644000000000000000000000000000000000000000000000000000000004a2cc91ee622da3bc833a54c37ffcb6f3ec23b7793efc5eaf5e71b7b406c5c06000000000000000000000000000000000000000000000000ffffffffffffff3f0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a211ffffffff000000000000000000000000000000000000000000000000000000006d4407e7be21f808e6509aa9fa9143369579dd7d760fe20a2c09680fc146134f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc1c624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c15b13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e3504e487b7100000000000000000000000000000000000000000000000000000000d833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428932b61db900000000000000000000000000000000000000000000000000000000beced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d29a8a0592ac89c5ad3bc6df8224c17b485976f597df104ee20d0df415241f670b02000002000000000000000000000000000000040000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffff7b010001254767133c0bfab0f12cca9e4bf07dcd32133865c9401a3cd248cb80109c4d535bdea7cd8a978f128b93471df48c7dbab89d703809115bdc118c235bfd0200000000000000000000000000000000000084000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000001000219f332fef3bb095dec9e508e76220eb3a464d321f351d201f347c9d62102000000000000000000000000000000000000c400000000000000000000000040c10f190000000000000000000000000000000000000000000000000000000001000099d8c437db3f79f2b41b7a6772dfa52f4f3d4d686867c76639536eb836075c6db80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000007573657200000000000000000000000000000000000000000000000000000000ffa1864900000000000000000000000000000000000000000000000000000000c657c71800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffff800000000000000000000000000000000000000000000000000000000000000000"},"assembly":"\t.text\n\t.file\t\"MerkleAirdrop.t.sol:MerkleAirdropTest\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[14]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_11\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_415\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.le\t@.BB0_19\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.gt\t@.BB0_26\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.le\t@.BB0_55\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_91\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.eq\t@.BB0_123\n\tsub.s!\t@CPI0_21[0], r1, r1\n\tjump.ne\t@.BB0_415\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t36, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tsload\tr1, r2\n\tadd\t47, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tsload\tr1, r1\n\tadd\t@CPI0_48[0], r0, r3\n\tst.1\t128, r3\n\tand\t@CPI0_38[0], r1, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_38[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_177\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_183\n.BB0_11:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t31, r0, r1\n\tsload\tr1, r2\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t324, r0, r1\n\tadd\t32, r0, r2\n\tadd\tr2, r0, stack-[13]\n\tsstore\tr2, r1\n\tadd\t300, r0, r1\n\tadd\t33, r0, r2\n\tsstore\tr2, r1\n\tadd\t260, r0, r1\n\tadd\t34, r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_1[0], r0, r1\n\tadd\t37, r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_2[0], r0, r1\n\tadd\t38, r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_3[0], r0, r1\n\tadd\t39, r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_4[0], r0, r1\n\tadd\t40, r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tadd\t41, r0, r3\n\tsstore\tr3, r2\n\tadd\t192, r0, r3\n\tst.1\t64, r3\n\tst.1\t128, r1\n\tst.1\t160, r2\n\tadd\t2, r0, r1\n\tadd\t42, r0, r4\n\tsload\tr4, r2\n\tadd\tr1, r0, stack-[14]\n\tsstore\tr4, r1\n\tsub.s!\t3, r2, r1\n\tjump.lt\t@.BB0_16\n\tadd\tr2, r0, stack-[11]\n\tadd\tr4, r0, stack-[12]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_415\n\tld\tr1, r2\n\tadd\tstack-[11], r2, r1\n\tadd\t2, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[12], r0, r4\n\tjump.ge\t@.BB0_16\n.BB0_15:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_15\n.BB0_16:\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_415\n\tld\tr1, r1\n\tld.1\t128, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tld.1\t160, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_7[0], r0, r1\n\tadd\t43, r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tadd\t44, r0, r3\n\tsstore\tr3, r2\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_8[0], r4, r3\n\tjump.le\t@.BB0_44\n.BB0_18:\n\tadd\t@CPI0_69[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_57[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_19:\n\tsub.s!\t@CPI0_24[0], r1, r2\n\tjump.le\t@.BB0_32\n\tsub.s!\t@CPI0_25[0], r1, r2\n\tjump.le\t@.BB0_73\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.eq\t@.BB0_128\n\tsub.s!\t@CPI0_27[0], r1, r2\n\tjump.eq\t@.BB0_131\n\tsub.s!\t@CPI0_28[0], r1, r1\n\tjump.ne\t@.BB0_415\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t37, r0, r1\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_26:\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.le\t@.BB0_78\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_133\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.eq\t@.BB0_135\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tjump.ne\t@.BB0_415\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t31, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_32:\n\tsub.s!\t@CPI0_31[0], r1, r2\n\tjump.gt\t@.BB0_50\n\tsub.s!\t@CPI0_34[0], r1, r2\n\tjump.eq\t@.BB0_138\n\tsub.s!\t@CPI0_35[0], r1, r1\n\tjump.ne\t@.BB0_415\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t32, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_73[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_74[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_508\n\tld\tr1, r1\n\tsub.s!\tstack-[14], r1, r2\n\tjump.eq\t@.BB0_40\n\tadd\t33, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB0_40\n\tadd\t34, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_388\n.BB0_40:\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_76[0], r1, r2\n\tjump.gt\t@.BB0_18\n\tadd\t36, r1, r2\n\tadd\t@CPI0_84[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tcontext.gas_left\tr3\n\tadd\t96, r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI0_78[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r1, r2\n\tst.1\tr2, r0\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_79[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_358\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_397\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_359\n.BB0_44:\n\tadd\t64, r4, r3\n\tst.1\t64, r3\n\tadd\tr4, r0, stack-[12]\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\tr1, r2\n\tadd\t45, r0, r4\n\tsload\tr4, r2\n\tadd\tstack-[14], r0, r1\n\tsstore\tr4, r1\n\tsub.s!\t3, r2, r1\n\tjump.lt\t@.BB0_48\n\tadd\tr2, r0, stack-[10]\n\tadd\tr4, r0, stack-[14]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_415\n\tld\tr1, r2\n\tadd\tstack-[10], r2, r1\n\tadd\t2, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[14], r0, r4\n\tjump.ge\t@.BB0_48\n.BB0_47:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_47\n.BB0_48:\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_415\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_9[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_50:\n\tsub.s!\t@CPI0_32[0], r1, r2\n\tjump.eq\t@.BB0_141\n\tsub.s!\t@CPI0_33[0], r1, r1\n\tjump.ne\t@.BB0_415\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t22, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_54\n\tadd\t160, r0, r4\n\tadd\t@CPI0_70[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_187:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_38[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_187\n\tjump\t@.BB0_197\n.BB0_55:\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.eq\t@.BB0_144\n\tsub.s!\t@CPI0_23[0], r1, r1\n\tjump.ne\t@.BB0_415\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t26, r0, r4\n\tsload\tr4, r5\n\tsub.s!\t@CPI0_44[0], r5, r2\n\tjump.gt\t@.BB0_18\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_45[0], r2, r2\n\tsub.s!\t@CPI0_46[0], r2, r3\n\tjump.gt\t@.BB0_18\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tst.1\t128, r5\n\tst.1\t0, r4\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_175\n\tadd\t128, r0, r6\n\tadd\t@CPI0_64[0], r0, r7\n\tadd\tr0, r0, r8\n\tadd\tr5, r0, stack-[8]\n.BB0_62:\n\tsload\tr7, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_366\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_68\n\tadd\tr3, r0, stack-[9]\n\tadd\tr4, r0, stack-[10]\n\tadd\tr9, r0, stack-[11]\n\tadd\tr8, r0, stack-[12]\n\tadd\tr6, r0, stack-[14]\n\tadd\tr7, r0, stack-[13]\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_415\n\tadd\tstack-[10], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[12], r0, r8\n\tjump.eq\t@.BB0_69\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r7\n\tadd\tstack-[11], r0, r9\n\tadd\tstack-[9], r0, r11\n.BB0_67:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_67\n\tjump\t@.BB0_70\n.BB0_68:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_70\n.BB0_69:\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r7\n\tadd\tstack-[11], r0, r9\n.BB0_70:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_44[0], r1, r3\n\tjump.gt\t@.BB0_18\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_18\n\tadd\t32, r6, r6\n\tst.1\t64, r1\n\tst.1\tr6, r9\n\tadd\t1, r7, r7\n\tadd\t1, r8, r8\n\tsub!\tr8, r5, r1\n\tjump.lt\t@.BB0_62\n\tjump\t@.BB0_174\n.BB0_73:\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.eq\t@.BB0_150\n\tsub.s!\t@CPI0_30[0], r1, r1\n\tjump.ne\t@.BB0_415\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t24, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_188\n\tjump\t@.BB0_54\n.BB0_78:\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_157\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.ne\t@.BB0_415\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_90\n\tadd\t@CPI0_40[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_41[0], r0, r1\n\tst.1\t132, r1\n\tadd\t@CPI0_42[0], r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_43[0], r1, r1\n\tadd\t@CPI0_41[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_85\n\tadd\tr0, r0, r7\n.BB0_84:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_84\n.BB0_85:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_87\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_87:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_222\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r4\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_415\n\tld.1\t128, r1\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n.BB0_90:\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\tr4, r1\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_39[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_91:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t29, r0, r4\n\tsload\tr4, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_44[0], r1, r2\n\tjump.gt\t@.BB0_18\n\tadd\tstack-[6], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_45[0], r2, r2\n\tsub.s!\t@CPI0_46[0], r2, r3\n\tjump.gt\t@.BB0_18\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[6], r0, r3\n\tst.1\t128, r3\n\tst.1\t0, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_127\n\tsub.s!\t@CPI0_60[0], r2, r2\n\tjump.gt\t@.BB0_18\n\tadd\t@CPI0_63[0], r0, r5\n\tadd\t160, r0, stack-[12]\n\tadd\t32784, r0, stack-[5]\n\tadd\tr0, r0, r6\n.BB0_97:\n\tadd\tr6, r0, stack-[11]\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tsload\tr5, r2\n\tand\t@CPI0_38[0], r2, r2\n\tadd\tr1, r0, stack-[14]\n\tst.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tr5, r0, stack-[13]\n\tadd\t1, r5, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\tr3, r0, stack-[8]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_415\n\tld\tr1, r2\n\tadd\tstack-[8], r0, r9\n\tsub.s!\t8, r9, r1\n\tjump.lt\t@.BB0_116\n\tadd\tr0, r0, r1\n\tadd\tstack-[11], r0, r6\n\tadd\tstack-[10], r0, r7\n\tadd\tstack-[9], r0, r8\n.BB0_100:\n\tadd\t224, r8, r3\n\tsload\tr2, r4\n\tand\t@CPI0_62[0], r4, r5\n\tst.1\tr3, r5\n\tshl.s\t32, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t192, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t64, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t160, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t96, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t128, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t128, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t96, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t160, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t64, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t192, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t32, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t224, r4, r3\n\tst.1\tr8, r3\n\tadd\t1, r2, r2\n\tadd\t256, r8, r8\n\tadd\t8, r1, r1\n\tor\t7, r1, r3\n\tsub!\tr3, r9, r3\n\tjump.lt\t@.BB0_100\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_103\n.BB0_102:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr8, r3, r8\n\tor\t1, r1, r1\n.BB0_103:\n\tadd\tstack-[14], r0, r4\n\tadd\tstack-[13], r0, r5\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_105\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_118\n.BB0_106:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_107\n.BB0_119:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_120\n.BB0_108:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_109\n.BB0_121:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_122\n.BB0_110:\n\tsub!\tr1, r9, r1\n\tjump.ge\t@.BB0_112\n.BB0_111:\n\tand\t@CPI0_62[0], r2, r1\n\tst.1.inc\tr8, r1, r8\n.BB0_112:\n\tsub\tr8, r7, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r7, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_44[0], r1, r3\n\tjump.gt\t@.BB0_18\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_18\n\tst.1\t64, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\tr1, r7\n\tadd\tstack-[12], r0, r3\n\tst.1.inc\tr3, r4, r3\n\tld.1\t64, r1\n\tadd\t1, r6, r6\n\tsub.s!\tstack-[6], r6, r2\n\tjump.ge\t@.BB0_416\n\tadd\tr3, r0, stack-[12]\n\tadd\t2, r5, r5\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.le\t@.BB0_97\n\tjump\t@.BB0_18\n.BB0_105:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_106\n.BB0_118:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_119\n.BB0_107:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_108\n.BB0_120:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_121\n.BB0_109:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_110\n.BB0_122:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r1\n\tjump.lt\t@.BB0_111\n\tjump\t@.BB0_112\n.BB0_116:\n\tadd\tr0, r0, r1\n\tadd\tstack-[11], r0, r6\n\tadd\tstack-[10], r0, r7\n\tadd\tstack-[9], r0, r8\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_102\n\tjump\t@.BB0_103\n.BB0_123:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t28, r0, r4\n\tsload\tr4, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_44[0], r1, r2\n\tjump.gt\t@.BB0_18\n\tadd\tstack-[6], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_45[0], r2, r2\n\tsub.s!\t@CPI0_46[0], r2, r3\n\tjump.gt\t@.BB0_18\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[6], r0, r3\n\tst.1\t128, r3\n\tst.1\t0, r4\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_266\n.BB0_127:\n\tadd\tr1, r0, stack-[14]\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_array_struct_FuzzSelector_dyn, @DEFAULT_UNWIND\n\tjump\t@.BB0_176\n.BB0_128:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t23, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_191\n\tjump\t@.BB0_54\n.BB0_131:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tnear_call\tr0, @fun_isOnZkSyncChainId, @DEFAULT_UNWIND\n\tjump\t@.BB0_140\n.BB0_133:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tnear_call\tr0, @fun_isOnZkSyncPrecompiles, @DEFAULT_UNWIND\n\tjump\t@.BB0_140\n.BB0_135:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t21, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_194\n.BB0_54:\n\tadd\t32, r0, r2\n\tjump\t@.BB0_198\n.BB0_138:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tnear_call\tr0, @fun_isZkSyncChain, @DEFAULT_UNWIND\n.BB0_140:\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_39[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_141:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t36, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tsload\tr1, r2\n\tadd\t46, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tsload\tr1, r1\n\tadd\t@CPI0_48[0], r0, r3\n\tst.1\t128, r3\n\tand\t@CPI0_38[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_38[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_201\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_207\n.BB0_144:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t27, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[5]\n\tsub.s!\t@CPI0_44[0], r2, r2\n\tjump.gt\t@.BB0_18\n\tadd\tstack-[5], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_45[0], r2, r2\n\tsub.s!\t@CPI0_46[0], r2, r3\n\tjump.gt\t@.BB0_18\n\tadd\t128, r2, r15\n\tst.1\t64, r15\n\tadd\tstack-[5], r0, r3\n\tst.1\t128, r3\n\tst.1\t0, r1\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_294\n.BB0_148:\n\tadd\t32, r0, r1\n\tst.1.inc\tr15, r1, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\t64, r15, r3\n\tshl.s\t5, r1, r2\n\tadd\tr2, r3, r2\n\tsub!\tr1, r0, r4\n\tjump.ne\t@.BB0_372\n.BB0_149:\n\tsub\tr2, r15, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r15, r3\n\tadd.ge\tr2, r0, r15\n\tshl.s\t64, r15, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_150:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t30, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[1]\n\tsub.s!\t@CPI0_44[0], r2, r2\n\tjump.gt\t@.BB0_18\n\tadd\tstack-[1], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_45[0], r2, r2\n\tsub.s!\t@CPI0_46[0], r2, r3\n\tjump.gt\t@.BB0_18\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tadd\tstack-[1], r0, r4\n\tst.1\t128, r4\n\tst.1\t0, r1\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_332\n.BB0_154:\n\tadd\t32, r0, r1\n\tst.1.inc\tr3, r1, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[14]\n\tadd\t64, r3, r2\n\tshl.s\t5, r1, r3\n\tadd\tr3, r2, r6\n\tadd\tr1, r0, stack-[13]\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_380\n\tadd\tr6, r0, r11\n.BB0_156:\n\tadd\tstack-[14], r0, r4\n\tsub\tr11, r4, r1\n\tjump\t@.BB0_200\n.BB0_157:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_415\n\tadd\t25, r0, r4\n\tsload\tr4, r5\n\tsub.s!\t@CPI0_44[0], r5, r2\n\tjump.gt\t@.BB0_18\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_45[0], r2, r2\n\tsub.s!\t@CPI0_46[0], r2, r3\n\tjump.gt\t@.BB0_18\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tst.1\t128, r5\n\tst.1\t0, r4\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_175\n\tadd\t128, r0, r6\n\tadd\t@CPI0_47[0], r0, r7\n\tadd\tr0, r0, r8\n\tadd\tr5, r0, stack-[8]\n.BB0_162:\n\tsload\tr7, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_366\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_168\n\tadd\tr3, r0, stack-[9]\n\tadd\tr4, r0, stack-[10]\n\tadd\tr9, r0, stack-[11]\n\tadd\tr8, r0, stack-[12]\n\tadd\tr6, r0, stack-[14]\n\tadd\tr7, r0, stack-[13]\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_415\n\tadd\tstack-[10], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[12], r0, r8\n\tjump.eq\t@.BB0_169\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r7\n\tadd\tstack-[11], r0, r9\n\tadd\tstack-[9], r0, r11\n.BB0_167:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_167\n\tjump\t@.BB0_170\n.BB0_168:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_170\n.BB0_169:\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r7\n\tadd\tstack-[11], r0, r9\n.BB0_170:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_44[0], r1, r3\n\tjump.gt\t@.BB0_18\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_18\n\tadd\t32, r6, r6\n\tst.1\t64, r1\n\tst.1\tr6, r9\n\tadd\t1, r7, r7\n\tadd\t1, r8, r8\n\tsub!\tr8, r5, r1\n\tjump.lt\t@.BB0_162\n.BB0_174:\n\tld.1\t64, r1\n.BB0_175:\n\tadd\tr1, r0, stack-[14]\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_array_string_dyn, @DEFAULT_UNWIND\n.BB0_176:\n\tadd\tstack-[14], r0, r4\n\tjump\t@.BB0_199\n.BB0_177:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_180\n\tadd\tr0, r0, r7\n.BB0_179:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_179\n.BB0_180:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_182\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_182:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_227\n.BB0_183:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r2\n\tadd\tr2, r0, stack-[14]\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_415\n\tadd\t35, r0, r2\n\tadd\tr2, r0, stack-[10]\n\tsload\tr2, r2\n\tadd\t38, r0, r3\n\tadd\tr3, r0, stack-[9]\n\tsload\tr3, r3\n\tld.1\t128, r4\n\tadd\tr4, r0, stack-[8]\n\tadd\t@CPI0_50[0], r0, r4\n\tadd\tstack-[14], r0, r5\n\tst.1\tr5, r4\n\tor\t132, r1, r4\n\tadd\tstack-[13], r0, r6\n\tst.1\tr4, r6\n\tadd\t164, r1, r4\n\tst.1\tr4, r3\n\tcontext.gas_left\tr3\n\tand\t@CPI0_38[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_237\n\tadd\tr5, r1, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t64, r1\n\tjump\t@.BB0_244\n.BB0_188:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_67[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_189:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_38[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_189\n\tjump\t@.BB0_197\n.BB0_191:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_66[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_192:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_38[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_192\n\tjump\t@.BB0_197\n.BB0_194:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_37[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_195:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_38[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_195\n.BB0_197:\n\tsub.s\t96, r5, r2\n.BB0_198:\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @abi_encode_array_address_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n.BB0_199:\n\tsub\tr1, r4, r1\n.BB0_200:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_201:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_204\n\tadd\tr0, r0, r7\n.BB0_203:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_203\n.BB0_204:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_206\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_206:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_232\n.BB0_207:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_415\n\tld.1\t128, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI0_54[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_41[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_508\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_415\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_41[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_399\n\tadd\tstack-[14], r0, r2\n\tsub.s!\t@CPI0_44[0], r2, r1\n\tjump.gt\t@.BB0_18\n\tst.1\t64, r2\n\tadd\t38, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t35, r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_54[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_38[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_508\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_415\n\tld.1\t64, r4\n\tadd\t@CPI0_71[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r2\n\tadd\t64, r0, r1\n\tadd\tr2, r0, stack-[8]\n\tst.1\tr2, r1\n\tadd\t68, r4, r1\n\tadd\t42, r0, r3\n\tsload\tr3, r2\n\tst.1\tr1, r2\n\tst.1\t0, r3\n\tadd\tr4, r0, stack-[9]\n\tadd\t100, r4, r1\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_217\n\tadd\t@CPI0_72[0], r0, r3\n\tadd\tr0, r0, r4\n.BB0_216:\n\tsload\tr3, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_216\n.BB0_217:\n\tadd\tstack-[9], r0, r2\n\tadd\t36, r2, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr2, r3\n\tcontext.gas_left\tr2\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB0_219\n\tadd\tstack-[9], r0, r5\n\tsub\tr1, r5, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_467\n.BB0_219:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_18\n\tadd\tstack-[9], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_48[0], r0, r3\n\tst.1\tr4, r3\n\tand\t@CPI0_38[0], r1, r1\n\tadd\tstack-[8], r0, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_38[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_477\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_483\n.BB0_222:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_225\n\tadd\tr0, r0, r6\n.BB0_224:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_224\n.BB0_225:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_530\n\tjump\t@.BB0_529\n.BB0_227:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_230\n\tadd\tr0, r0, r6\n.BB0_229:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_229\n.BB0_230:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_530\n\tjump\t@.BB0_529\n.BB0_232:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_235\n\tadd\tr0, r0, r6\n.BB0_234:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_234\n.BB0_235:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_530\n\tjump\t@.BB0_529\n.BB0_237:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tshl.s\t64, r5, r3\n\tor\tr1, r3, r1\n\tor\t@CPI0_51[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_240\n\tadd\tr0, r0, r7\n.BB0_239:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_239\n.BB0_240:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_242\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_242:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_367\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_415\n.BB0_244:\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\t@CPI0_52[0], r0, r2\n\tadd\tstack-[13], r0, r4\n\tst.1.inc\tr4, r2, r2\n\tadd\tr2, r0, stack-[14]\n\tor\t4, r4, r2\n\tadd\t@CPI0_53[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tadd\tr4, r0, stack-[13]\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tshl.s\t64, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_51[0], r1, r1\n\tadd\t@CPI0_41[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_247\n\tadd\tr0, r0, r7\n.BB0_246:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_246\n.BB0_247:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_249\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_249:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_353\n\tadd\t31, r4, r1\n\tand\t224, r1, r1\n\tadd\tr1, r10, r1\n\tst.1\t64, r1\n\tsub.s!\t96, r3, r1\n\tjump.lt\t@.BB0_415\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tsub.s!\t255, r1, r1\n\tjump.gt\t@.BB0_415\n\tadd\tstack-[13], r0, r1\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t46, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_54[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_41[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tand\t@CPI0_38[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_508\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_415\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_41[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_423\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_18\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_54[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_38[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tand\t@CPI0_38[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_508\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_415\n\tld.1\t64, r5\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r2\n\tadd\t192, r0, r1\n\tadd\tr2, r0, stack-[5]\n\tst.1\tr2, r1\n\tadd\t196, r5, r1\n\tadd\t45, r0, r4\n\tsload\tr4, r2\n\tst.1\tr1, r2\n\tst.1\t0, r4\n\tadd\tr5, r0, stack-[14]\n\tadd\t228, r5, r1\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_261\n\tadd\t@CPI0_59[0], r0, r4\n\tadd\tr0, r0, r5\n.BB0_260:\n\tsload\tr4, r6\n\tst.1.inc\tr1, r6, r1\n\tadd\t1, r4, r4\n\tadd\t1, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_260\n.BB0_261:\n\tadd\tstack-[14], r0, r5\n\tadd\t164, r5, r2\n\tadd\tstack-[6], r0, r4\n\tst.1\tr2, r4\n\tadd\t132, r5, r2\n\tadd\tstack-[13], r0, r4\n\tst.1\tr2, r4\n\tadd\tstack-[7], r0, r2\n\tand\t255, r2, r2\n\tadd\t100, r5, r4\n\tst.1\tr4, r2\n\tadd\t68, r5, r2\n\tadd\tstack-[9], r0, r4\n\tst.1\tr2, r4\n\tadd\t36, r5, r2\n\tst.1\tr2, r3\n\tcontext.gas_left\tr2\n\tadd\tstack-[10], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB0_263\n\tadd\tstack-[14], r0, r5\n\tsub\tr1, r5, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_509\n.BB0_263:\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_18\n\tadd\tstack-[14], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_48[0], r0, r3\n\tst.1\tr4, r3\n\tand\t@CPI0_38[0], r1, r1\n\tadd\tstack-[5], r0, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_38[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_514\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_520\n.BB0_266:\n\tsub.s!\t@CPI0_60[0], r2, r2\n\tjump.gt\t@.BB0_18\n\tadd\t@CPI0_61[0], r0, r4\n\tadd\t160, r0, r5\n\tadd\t32784, r0, stack-[5]\n\tadd\tr0, r0, r6\n.BB0_268:\n\tadd\tr6, r0, stack-[11]\n\tadd\tr5, r0, stack-[12]\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tsload\tr4, r2\n\tand\t@CPI0_38[0], r2, r2\n\tadd\tr1, r0, stack-[14]\n\tst.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tr4, r0, stack-[13]\n\tadd\t1, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\tr3, r0, stack-[8]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_415\n\tld\tr1, r2\n\tadd\tstack-[8], r0, r9\n\tsub.s!\t8, r9, r1\n\tjump.lt\t@.BB0_287\n\tadd\tr0, r0, r1\n\tadd\tstack-[11], r0, r6\n\tadd\tstack-[10], r0, r7\n\tadd\tstack-[9], r0, r8\n.BB0_271:\n\tadd\t224, r8, r3\n\tsload\tr2, r4\n\tand\t@CPI0_62[0], r4, r5\n\tst.1\tr3, r5\n\tshl.s\t32, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t192, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t64, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t160, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t96, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t128, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t128, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t96, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t160, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t64, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t192, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t32, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t224, r4, r3\n\tst.1\tr8, r3\n\tadd\t1, r2, r2\n\tadd\t256, r8, r8\n\tadd\t8, r1, r1\n\tor\t7, r1, r3\n\tsub!\tr3, r9, r3\n\tjump.lt\t@.BB0_271\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_274\n.BB0_273:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr8, r3, r8\n\tor\t1, r1, r1\n.BB0_274:\n\tadd\tstack-[13], r0, r4\n\tadd\tstack-[12], r0, r5\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_276\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_289\n.BB0_277:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_278\n.BB0_290:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_291\n.BB0_279:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_280\n.BB0_292:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_293\n.BB0_281:\n\tsub!\tr1, r9, r1\n\tjump.ge\t@.BB0_283\n.BB0_282:\n\tand\t@CPI0_62[0], r2, r1\n\tst.1.inc\tr8, r1, r8\n.BB0_283:\n\tsub\tr8, r7, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r7, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_44[0], r1, r3\n\tadd\tstack-[14], r0, r3\n\tjump.gt\t@.BB0_18\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_18\n\tst.1\t64, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\tr1, r7\n\tst.1.inc\tr5, r3, r5\n\tld.1\t64, r1\n\tadd\t1, r6, r6\n\tsub.s!\tstack-[6], r6, r2\n\tjump.ge\t@.BB0_127\n\tadd\t2, r4, r4\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.le\t@.BB0_268\n\tjump\t@.BB0_18\n.BB0_276:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_277\n.BB0_289:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_290\n.BB0_278:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_279\n.BB0_291:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_292\n.BB0_280:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_281\n.BB0_293:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r1\n\tjump.lt\t@.BB0_282\n\tjump\t@.BB0_283\n.BB0_287:\n\tadd\tr0, r0, r1\n\tadd\tstack-[11], r0, r6\n\tadd\tstack-[10], r0, r7\n\tadd\tstack-[9], r0, r8\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_273\n\tjump\t@.BB0_274\n.BB0_294:\n\tsub.s!\t@CPI0_60[0], r2, r1\n\tjump.gt\t@.BB0_18\n\tadd\t@CPI0_65[0], r0, r5\n\tadd\t160, r0, stack-[12]\n\tadd\tr0, r0, stack-[11]\n.BB0_296:\n\tadd\t64, r15, r6\n\tst.1\t64, r6\n\tsload\tr5, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_366\n\tst.1\tr6, r4\n\tadd\t96, r15, r3\n\tsub!\tr2, r0, r2\n\tadd\tr15, r0, stack-[14]\n\tadd\tr5, r0, stack-[13]\n\tjump.eq\t@.BB0_302\n\tadd\tr3, r0, stack-[8]\n\tadd\tr4, r0, stack-[10]\n\tadd\tr6, r0, stack-[9]\n\tst.1\t0, r5\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_415\n\tadd\tstack-[10], r0, r7\n\tsub!\tr7, r0, r2\n\tjump.eq\t@.BB0_303\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r15\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[9], r0, r6\n\tadd\tstack-[8], r0, r8\n.BB0_301:\n\tadd\tr1, r8, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r7, r3\n\tjump.lt\t@.BB0_301\n\tjump\t@.BB0_304\n.BB0_302:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_304\n.BB0_303:\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r15\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[9], r0, r6\n.BB0_304:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, stack-[10]\n\tand\tstack-[10], r1, r2\n\tadd\tr2, r6, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_44[0], r1, r3\n\tjump.gt\t@.BB0_18\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_18\n\tst.1\t64, r1\n\tst.1.inc\tr15, r6, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\t1, r5, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[9]\n\tadd\tr3, r0, stack-[7]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[8]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_415\n\tld\tr1, r2\n\tadd\tstack-[7], r0, r8\n\tsub.s!\t8, r8, r1\n\tjump.lt\t@.BB0_325\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[8], r0, r7\n.BB0_309:\n\tadd\t224, r7, r3\n\tsload\tr2, r4\n\tand\t@CPI0_62[0], r4, r5\n\tst.1\tr3, r5\n\tshl.s\t32, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t192, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t64, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t160, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t96, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t128, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t128, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t96, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t160, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t64, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t192, r4, r3\n\tand\t@CPI0_62[0], r3, r3\n\tadd\t32, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t224, r4, r3\n\tst.1\tr7, r3\n\tadd\t1, r2, r2\n\tadd\t256, r7, r7\n\tadd\t8, r1, r1\n\tor\t7, r1, r3\n\tsub!\tr3, r8, r3\n\tjump.lt\t@.BB0_309\n\tsload\tr2, r2\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_312\n.BB0_311:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr7, r3, r7\n\tor\t1, r1, r1\n.BB0_312:\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[9], r0, r4\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_314\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_327\n.BB0_315:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_316\n.BB0_328:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_329\n.BB0_317:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_318\n.BB0_330:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_331\n.BB0_319:\n\tsub!\tr1, r8, r1\n\tjump.ge\t@.BB0_321\n.BB0_320:\n\tand\t@CPI0_62[0], r2, r1\n\tst.1.inc\tr7, r1, r7\n.BB0_321:\n\tsub\tr7, r4, r1\n\tadd\t31, r1, r1\n\tand\tstack-[10], r1, r2\n\tadd\tr2, r4, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_44[0], r1, r3\n\tjump.gt\t@.BB0_18\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_18\n\tst.1\t64, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\tr1, r4\n\tadd\tstack-[12], r0, r1\n\tst.1.inc\tr1, r6, r1\n\tadd\tr1, r0, stack-[12]\n\tld.1\t64, r15\n\tadd\tstack-[11], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\tstack-[5], r2, r1\n\tjump.ge\t@.BB0_422\n\tadd\t2, r5, r5\n\tsub.s!\t@CPI0_8[0], r15, r1\n\tjump.le\t@.BB0_296\n\tjump\t@.BB0_18\n.BB0_314:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_315\n.BB0_327:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_328\n.BB0_316:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_317\n.BB0_329:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_330\n.BB0_318:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_319\n.BB0_331:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_62[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r1\n\tjump.lt\t@.BB0_320\n\tjump\t@.BB0_321\n.BB0_325:\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[8], r0, r7\n\tsload\tr2, r2\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_311\n\tjump\t@.BB0_312\n.BB0_332:\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI0_60[0], r2, r1\n\tjump.gt\t@.BB0_18\n\tadd\t@CPI0_68[0], r0, stack-[5]\n\tadd\t160, r0, stack-[4]\n\tadd\tr0, r0, stack-[3]\n.BB0_334:\n\tadd\tstack-[14], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[5], r0, r3\n\tsload\tr3, r1\n\tand\t@CPI0_38[0], r1, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[2]\n\tor\t1, r3, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI0_44[0], r5, r2\n\tjump.gt\t@.BB0_18\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_45[0], r2, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[6]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_44[0], r2, r4\n\tjump.gt\t@.BB0_18\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_18\n\tst.1\t64, r2\n\tadd\tr5, r0, stack-[7]\n\tadd\tstack-[6], r0, r2\n\tst.1\tr2, r5\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_415\n\tadd\tstack-[7], r0, r5\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_351\n\tld\tr1, r6\n\tadd\tr0, r0, r7\n\tadd\tstack-[6], r0, r8\n.BB0_340:\n\tsload\tr6, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_366\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_346\n\tadd\tr3, r0, stack-[8]\n\tadd\tr4, r0, stack-[9]\n\tadd\tr9, r0, stack-[10]\n\tadd\tr8, r0, stack-[11]\n\tadd\tr7, r0, stack-[12]\n\tadd\tr6, r0, stack-[13]\n\tst.1\t0, r6\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_415\n\tadd\tstack-[9], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[12], r0, r7\n\tadd\tstack-[11], r0, r8\n\tjump.eq\t@.BB0_347\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[13], r0, r6\n\tadd\tstack-[10], r0, r9\n\tadd\tstack-[8], r0, r11\n.BB0_345:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_345\n\tjump\t@.BB0_348\n.BB0_346:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_348\n.BB0_347:\n\tadd\tr0, r0, r1\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[13], r0, r6\n\tadd\tstack-[10], r0, r9\n.BB0_348:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_44[0], r1, r3\n\tjump.gt\t@.BB0_18\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_18\n\tadd\t32, r8, r8\n\tst.1\t64, r1\n\tst.1\tr8, r9\n\tadd\t1, r6, r6\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r1\n\tjump.lt\t@.BB0_340\n.BB0_351:\n\tadd\tstack-[2], r0, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[4], r0, r2\n\tst.1.inc\tr2, r1, r2\n\tadd\tr2, r0, stack-[4]\n\tld.1\t64, r3\n\tadd\tstack-[3], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\tstack-[1], r2, r1\n\tjump.ge\t@.BB0_476\n\tadd\tstack-[5], r0, r1\n\tadd\t2, r1, stack-[5]\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI0_8[0], r3, r1\n\tjump.le\t@.BB0_334\n\tjump\t@.BB0_18\n.BB0_353:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_356\n\tadd\tr0, r0, r6\n.BB0_355:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_355\n.BB0_356:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_530\n\tjump\t@.BB0_529\n.BB0_358:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_359:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_362\n\tadd\tr0, r0, r6\n.BB0_361:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_361\n.BB0_362:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_365\n.BB0_364:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_365:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_366:\n\tadd\t@CPI0_69[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_57[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_367:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_370\n\tadd\tr0, r0, r6\n.BB0_369:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_369\n.BB0_370:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_530\n\tjump\t@.BB0_529\n.BB0_372:\n\tadd\t128, r0, r4\n\tadd\t64, r0, r5\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_374\n.BB0_373:\n\tadd\t1, r6, r6\n\tsub!\tr6, r1, r7\n\tjump.ge\t@.BB0_149\n.BB0_374:\n\tsub\tr2, r15, r7\n\tsub.s\t64, r7, r7\n\tst.1.inc\tr3, r7, r3\n\tadd\t32, r4, r4\n\tld.1\tr4, r7\n\tld.1.inc\tr7, r9, r8\n\tst.1.inc\tr2, r5, r7\n\tadd\t64, r2, r12\n\tld.1.inc\tr9, r10, r11\n\tst.1\tr12, r10\n\tadd\t96, r2, r9\n\tsub!\tr10, r0, r12\n\tjump.eq\t@.BB0_377\n\tadd\tr0, r0, r12\n.BB0_376:\n\tadd\tr12, r9, r13\n\tadd\tr11, r12, r14\n\tld.1\tr14, r14\n\tst.1\tr13, r14\n\tadd\t32, r12, r12\n\tsub!\tr12, r10, r13\n\tjump.lt\t@.BB0_376\n.BB0_377:\n\tadd\tr10, r9, r11\n\tst.1\tr11, r0\n\tadd\t31, r10, r10\n\tsub.s\t32, r0, r11\n\tand\tr10, r11, r10\n\tadd\tr10, r9, r9\n\tld.1\tr8, r8\n\tsub\tr9, r2, r2\n\tst.1\tr7, r2\n\tld.1\tr8, r7\n\tst.1.inc\tr9, r7, r2\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB0_373\n\tadd\tr0, r0, r9\n.BB0_379:\n\tadd\t32, r8, r8\n\tld.1\tr8, r10\n\tand\t@CPI0_62[0], r10, r10\n\tst.1.inc\tr2, r10, r2\n\tadd\t1, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB0_379\n\tjump\t@.BB0_373\n.BB0_380:\n\tadd\t128, r0, r3\n\tadd\t64, r0, r4\n\tadd\tr0, r0, r5\n\tjump\t@.BB0_382\n.BB0_381:\n\tadd\t1, r5, r5\n\tsub.s!\tstack-[13], r5, r1\n\tadd\tr11, r0, r6\n\tjump.ge\t@.BB0_156\n.BB0_382:\n\tsub.s\tstack-[14], r6, r7\n\tsub.s\t64, r7, r7\n\tst.1.inc\tr2, r7, r2\n\tadd\t32, r3, r3\n\tld.1\tr3, r7\n\tld.1.inc\tr7, r7, r8\n\tand\t@CPI0_38[0], r7, r7\n\tst.1.inc\tr6, r7, r9\n\tld.1\tr8, r7\n\tst.1\tr9, r4\n\tadd\t64, r6, r9\n\tld.1\tr7, r8\n\tst.1\tr9, r8\n\tadd\t96, r6, r9\n\tshl.s\t5, r8, r10\n\tadd\tr10, r9, r11\n\tsub!\tr8, r0, r10\n\tjump.eq\t@.BB0_381\n\tadd\tr0, r0, r10\n\tjump\t@.BB0_385\n.BB0_384:\n\tadd\t31, r12, r1\n\tsub.s\t32, r0, r13\n\tand\tr1, r13, r1\n\tadd\tr12, r11, r12\n\tst.1\tr12, r0\n\tadd\tr1, r11, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r8, r1\n\tjump.ge\t@.BB0_381\n.BB0_385:\n\tsub\tr11, r6, r12\n\tsub.s\t96, r12, r12\n\tst.1.inc\tr9, r12, r9\n\tadd\t32, r7, r7\n\tld.1\tr7, r12\n\tld.1.inc\tr12, r12, r13\n\tst.1.inc\tr11, r12, r11\n\tsub!\tr12, r0, r14\n\tjump.eq\t@.BB0_384\n\tadd\tr0, r0, r14\n.BB0_387:\n\tadd\tr14, r11, r15\n\tadd\tr13, r14, r1\n\tld.1\tr1, r1\n\tst.1\tr15, r1\n\tadd\t32, r14, r14\n\tsub!\tr14, r12, r1\n\tjump.lt\t@.BB0_387\n\tjump\t@.BB0_384\n.BB0_388:\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_46[0], r3, r1\n\tjump.gt\t@.BB0_18\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t96, r3, r1\n\tadd\t8, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t5, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\t4, r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r1\n\tst.1\tr3, r1\n\tadd\t32777, r0, stack-[12]\n\tadd\t1, r0, stack-[11]\n\tadd\tr0, r0, r5\n\tadd\tr3, r0, stack-[13]\n\tjump\t@.BB0_391\n.BB0_390:\n\tsub.s!\t3, r5, r1\n\tadd\t1, r5, r5\n\tjump.ge\t@.BB0_40\n.BB0_391:\n\tshl.s\t5, r5, r1\n\tadd\tr1, r3, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_38[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB0_390\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tadd\tstack-[11], r0, r3\n\tadd\tr5, r0, stack-[14]\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tadd\tstack-[13], r0, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_390\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_76[0], r1, r2\n\tjump.gt\t@.BB0_18\n\tadd\t36, r1, r2\n\tadd\t@CPI0_77[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tcontext.gas_left\tr3\n\tadd\t96, r0, r4\n\tadd\tr4, r0, stack-[14]\n\tst.1\tr2, r4\n\tadd\t@CPI0_78[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r1, r2\n\tst.1\tr2, r0\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_79[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_462\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_472\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_463\n.BB0_397:\n\tld.1\t64, r10\n\tadd\t@CPI0_85[0], r0, r1\n\tst.1.inc\tr10, r1, r1\n\tadd\tr1, r0, stack-[14]\n\tcontext.gas_left\tr1\n\tand\t@CPI0_38[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_404\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t64, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t64, r0, r4\n\tjump\t@.BB0_410\n.BB0_399:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_402\n\tadd\tr0, r0, r6\n.BB0_401:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_401\n.BB0_402:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_530\n\tjump\t@.BB0_529\n.BB0_404:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r4\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_86[0], r1, r1\n\tadd\tr10, r0, stack-[13]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t64, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t64, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_407\n\tadd\tr0, r0, r7\n.BB0_406:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_406\n.BB0_407:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_409\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_409:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_417\n.BB0_410:\n\tadd\t31, r4, r1\n\tand\t224, r1, r1\n\tadd\tr1, r10, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_44[0], r4, r2\n\tjump.gt\t@.BB0_18\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_18\n\tadd\tr4, r0, stack-[13]\n\tst.1\t64, r4\n\tsub.s!\t64, r3, r1\n\tjump.lt\t@.BB0_415\n\tld.1\tr10, r1\n\tsub.s!\t@CPI0_38[0], r1, r2\n\tjump.gt\t@.BB0_415\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_38[0], r2, r3\n\tjump.le\t@.BB0_428\n.BB0_415:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_416:\n\tjump\t@.BB0_127\n.BB0_417:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_420\n\tadd\tr0, r0, r6\n.BB0_419:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_419\n.BB0_420:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_530\n\tjump\t@.BB0_529\n.BB0_422:\n\tjump\t@.BB0_148\n.BB0_423:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_426\n\tadd\tr0, r0, r6\n.BB0_425:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_425\n.BB0_426:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_530\n\tjump\t@.BB0_529\n.BB0_428:\n\tadd\t36, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_80[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr3, r2\n\tadd\t35, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_80[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[13], r0, r2\n\tsub.s!\t@CPI0_8[0], r2, r1\n\tjump.gt\t@.BB0_18\n.BB0_429:\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t32, r2, r7\n\tadd\t@CPI0_87[0], r0, r1\n\tst.1\tr7, r1\n\tadd!\t4, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tjump.eq\t@.BB0_432\n\tadd\tr0, r0, r4\n.BB0_431:\n\tadd\tr4, r2, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_431\n.BB0_432:\n\tadd\tr7, r0, stack-[14]\n\tadd\tr3, r2, r3\n\tst.1\tr3, r0\n\tsub\tr3, r1, r3\n\tsub.s\t32, r3, r4\n\tst.1\tr1, r4\n\tadd\t31, r3, r3\n\tsub.s\t32, r0, stack-[12]\n\tand\tstack-[12], r3, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_44[0], r3, r5\n\tjump.gt\t@.BB0_18\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_18\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_415\n\tld\tr1, r2\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[11]\n\tadd\t@CPI0_88[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr2, r0, stack-[10]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_41[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_438\n\tadd\tr0, r0, r7\n.BB0_437:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_437\n.BB0_438:\n\tadd\tr10, r0, r9\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_440\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr9, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_440:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_498\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_44[0], r1, r4\n\tjump.gt\t@.BB0_18\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_18\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_415\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[11]\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tjump.gt\t@.BB0_415\n\tadd\t@CPI0_54[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_41[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_508\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_415\n\tld.1\t64, r3\n\tadd\t36, r3, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_89[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r2\n\tadd\tstack-[11], r0, r1\n\tadd\tr2, r0, stack-[8]\n\tst.1\tr2, r1\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\t68, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[9]\n\tadd\t100, r3, r2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[14], r0, r6\n\tjump.eq\t@.BB0_450\n\tadd\tr0, r0, r3\n.BB0_449:\n\tadd\tr3, r2, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_449\n.BB0_450:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t31, r1, r1\n\tand\tstack-[12], r1, r1\n\tadd\t100, r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tadd\tstack-[9], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, stack-[14]\n\tor\tstack-[14], r1, r1\n\tadd\t@CPI0_41[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_536\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_18\n\tadd\tstack-[9], r0, r1\n\tst.1\t64, r1\n\tadd\tr1, r0, r4\n\tadd\t48, r0, r1\n\tadd\tstack-[10], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tand\t@CPI0_38[0], r1, r1\n\tadd\t46, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_80[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\t@CPI0_88[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_53[0], r0, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\tstack-[14], r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t@CPI0_41[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_455\n\tadd\tr0, r0, r7\n.BB0_454:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_454\n.BB0_455:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_457\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[9], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_457:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_541\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[9], r1, r1\n\tsub.s!\t@CPI0_44[0], r1, r2\n\tjump.gt\t@.BB0_18\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_415\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_38[0], r1, r2\n\tjump.gt\t@.BB0_415\n\tadd\t47, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_80[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_462:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_463:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_466\n\tadd\tr0, r0, r6\n.BB0_465:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_465\n.BB0_466:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_364\n\tjump\t@.BB0_365\n.BB0_467:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_470\n\tadd\tr0, r0, r6\n.BB0_469:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_469\n.BB0_470:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_530\n\tjump\t@.BB0_529\n.BB0_472:\n\tand\t@CPI0_38[0], r1, r2\n\tadd\t36, r0, r3\n\tsload\tr3, r1\n\tand\t@CPI0_80[0], r1, r1\n\tor\tr1, r2, r1\n\tadd\tr3, r0, stack-[13]\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_76[0], r1, r3\n\tjump.gt\t@.BB0_18\n\tadd\t37, r0, r3\n\tsload\tr3, r3\n\tadd\t164, r1, r4\n\tst.1\tr4, r2\n\tadd\t132, r1, r2\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t@CPI0_81[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t100, r1, r2\n\tcontext.gas_left\tr3\n\tadd\t64, r0, r4\n\tst.1\tr2, r4\n\tadd\t68, r1, r2\n\tadd\tstack-[14], r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI0_78[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_82[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_492\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_502\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_493\n.BB0_476:\n\tjump\t@.BB0_154\n.BB0_477:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[9], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_57[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_480\n\tadd\tr0, r0, r7\n.BB0_479:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_479\n.BB0_480:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_482\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[9], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_482:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_487\n.BB0_483:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[9], r1, r1\n\tsub.s!\t@CPI0_44[0], r1, r2\n\tjump.gt\t@.BB0_18\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_415\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\tstack-[11], r1, r1\n\tjump.le\t@.BB0_523\n.BB0_486:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_487:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_490\n\tadd\tr0, r0, r6\n.BB0_489:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_489\n.BB0_490:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_530\n\tjump\t@.BB0_529\n.BB0_492:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_493:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_496\n\tadd\tr0, r0, r6\n.BB0_495:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_495\n.BB0_496:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_365\n\tjump\t@.BB0_364\n.BB0_498:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_501\n\tadd\tr0, r0, r6\n.BB0_500:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_500\n.BB0_501:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_529\n\tjump\t@.BB0_530\n.BB0_502:\n\tand\t@CPI0_38[0], r1, stack-[12]\n\tadd\t35, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_80[0], r2, r2\n\tor\tstack-[12], r2, r2\n\tsstore\tr1, r2\n\tadd\t39, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_54[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_38[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_508\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_415\n\tld.1\t64, r2\n\tadd\t36, r2, r1\n\tadd\tstack-[11], r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_83[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[13]\n\tadd\t4, r2, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[14], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_506\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[13], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_51[0], r1, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n.BB0_506:\n\tadd\tstack-[13], r0, r2\n\tsub.s!\t@CPI0_44[0], r2, r1\n\tjump.gt\t@.BB0_18\n\tst.1\t64, r2\n\tadd\tstack-[13], r0, r2\n\tsub.s!\t@CPI0_8[0], r2, r1\n\tjump.gt\t@.BB0_18\n\tjump\t@.BB0_429\n.BB0_508:\n\trevert\n.BB0_509:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_512\n\tadd\tr0, r0, r6\n.BB0_511:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_511\n.BB0_512:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_530\n\tjump\t@.BB0_529\n.BB0_514:\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[14], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t64, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_517\n\tadd\tr0, r0, r7\n.BB0_516:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_516\n.BB0_517:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_519\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[14], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_519:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_524\n.BB0_520:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[14], r1, r1\n\tsub.s!\t@CPI0_44[0], r1, r2\n\tjump.gt\t@.BB0_18\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_415\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\tstack-[8], r1, r1\n\tjump.gt\t@.BB0_486\n.BB0_523:\n\tadd\t@CPI0_69[0], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_57[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_524:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_527\n\tadd\tr0, r0, r6\n.BB0_526:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_526\n.BB0_527:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_530\n.BB0_529:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_530:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_531:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_534\n\tadd\tr0, r0, r6\n.BB0_533:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_533\n.BB0_534:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_530\n\tjump\t@.BB0_529\n.BB0_536:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_539\n\tadd\tr0, r0, r6\n.BB0_538:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_538\n.BB0_539:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_530\n\tjump\t@.BB0_529\n.BB0_541:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_544\n\tadd\tr0, r0, r6\n.BB0_543:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_543\n.BB0_544:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_530\n\tjump\t@.BB0_529\n.func_end0:\n\nabi_encode_array_address_dyn:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\t32, r2, r2\n\tld.1\tr2, r5\n\tand\t@CPI1_0[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tret\n.func_end1:\n\nabi_encode_array_string_dyn:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1\tr2, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r5\n\tshl.s\t5, r4, r3\n\tadd\tr5, r3, r3\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB2_6\n\tadd\tr0, r0, r6\n\tjump\t@.BB2_2\n.BB2_5:\n\tadd\t31, r7, r8\n\tsub.s\t32, r0, r9\n\tand\tr8, r9, r8\n\tadd\tr7, r3, r7\n\tst.1\tr7, r0\n\tadd\tr8, r3, r3\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.ge\t@.BB2_6\n.BB2_2:\n\tsub\tr3, r1, r7\n\tsub.s\t64, r7, r7\n\tst.1.inc\tr5, r7, r5\n\tadd\t32, r2, r2\n\tld.1\tr2, r7\n\tld.1.inc\tr7, r7, r8\n\tst.1.inc\tr3, r7, r3\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB2_5\n\tadd\tr0, r0, r9\n.BB2_4:\n\tadd\tr9, r3, r10\n\tadd\tr8, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB2_4\n\tjump\t@.BB2_5\n.BB2_6:\n\tadd\tr3, r0, r1\n\tret\n.func_end2:\n\nabi_encode_array_struct_FuzzSelector_dyn:\n.func_begin3:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1\tr2, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r5\n\tshl.s\t5, r4, r3\n\tadd\tr5, r3, r3\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB3_6\n\tadd\t64, r0, r6\n\tadd\tr0, r0, r7\n\tjump\t@.BB3_2\n.BB3_5:\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.ge\t@.BB3_6\n.BB3_2:\n\tsub\tr3, r1, r8\n\tsub.s\t64, r8, r8\n\tst.1.inc\tr5, r8, r5\n\tadd\t32, r2, r2\n\tld.1\tr2, r8\n\tld.1.inc\tr8, r8, r9\n\tand\t@CPI3_0[0], r8, r8\n\tst.1.inc\tr3, r8, r10\n\tld.1\tr9, r8\n\tst.1\tr10, r6\n\tadd\t64, r3, r10\n\tld.1\tr8, r9\n\tst.1\tr10, r9\n\tadd\t96, r3, r3\n\tsub!\tr9, r0, r10\n\tjump.eq\t@.BB3_5\n\tadd\tr0, r0, r10\n.BB3_4:\n\tadd\t32, r8, r8\n\tld.1\tr8, r11\n\tand\t@CPI3_1[0], r11, r11\n\tst.1.inc\tr3, r11, r3\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB3_4\n\tjump\t@.BB3_5\n.BB3_6:\n\tadd\tr3, r0, r1\n\tret\n.func_end3:\n\nfun_isZkSyncChain:\n.func_begin4:\n\tnop\tstack+=[4]\n\tadd\t32, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\t@CPI4_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI4_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tsub.s!\tstack-[4], r1, r2\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB4_5\n\tadd\t33, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB4_5\n\tadd\t34, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tadd\tr0, r0, r3\n\tjump.ne\t@.BB4_6\n.BB4_5:\n\tadd\tr3, r0, r1\n\tret\n.BB4_6:\n\tld.1\t64, r5\n\tsub.s!\t@CPI4_3[0], r5, r1\n\tjump.ge\t@.BB4_7\n\tadd\t128, r5, r1\n\tst.1\t64, r1\n\tadd\t96, r5, r1\n\tadd\t8, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r5, r1\n\tadd\t5, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r5, r1\n\tadd\t4, r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r1\n\tst.1\tr5, r1\n\tadd\t32777, r0, stack-[1]\n\tadd\t1, r0, r3\n\tadd\tr0, r0, r6\n\tadd\tr5, r0, stack-[3]\n\tadd\tr3, r0, stack-[2]\n\tjump\t@.BB4_9\n.BB4_12:\n\tsub.s!\t3, r6, r1\n\tadd\t1, r6, r6\n\tjump.ge\t@.BB4_13\n.BB4_9:\n\tshl.s\t5, r6, r1\n\tadd\tr1, r5, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI4_4[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB4_12\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tadd.ge\t@CPI4_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_5[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tr0, r0, r5\n\tadd\tr6, r0, stack-[4]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[2], r0, r3\n\tadd\tr1, r0, r4\n\tshr.s\t96, r4, r4\n\tand\t@CPI4_1[0], r4, stack[@returndatasize]\n\tadd\tstack-[3], r0, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB4_12\n\tadd\tr3, r0, r1\n\tret\n.BB4_13:\n\tadd\tr0, r0, r3\n\tadd\tr3, r0, r1\n\tret\n.BB4_1:\n\trevert\n.BB4_7:\n\tadd\t@CPI4_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfinalize_allocation:\n.func_begin5:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tjump.gt\t@.BB5_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_2\n\tst.1\t64, r1\n\tret\n.BB5_2:\n\tadd\t@CPI5_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfun_isOnZkSyncChainId:\n.func_begin6:\n\tnop\tstack+=[1]\n\tadd\t32, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI6_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tadd\t1, r0, r2\n\tld\tr1, r1\n\tsub.s!\tstack-[1], r1, r3\n\tjump.eq\t@.BB6_5\n\tadd\t33, r0, r3\n\tsload\tr3, r3\n\tsub!\tr1, r3, r3\n\tjump.eq\t@.BB6_5\n\tadd\t34, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB6_5:\n\tand\t1, r2, r1\n\tret\n.BB6_1:\n\trevert\n.func_end6:\n\nfun_isOnZkSyncPrecompiles:\n.func_begin7:\n\tnop\tstack+=[4]\n\tld.1\t64, r5\n\tsub.s!\t@CPI7_0[0], r5, r1\n\tjump.gt\t@.BB7_1\n\tadd\t128, r5, r1\n\tst.1\t64, r1\n\tadd\t96, r5, r1\n\tadd\t8, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r5, r1\n\tadd\t5, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r5, r1\n\tadd\t4, r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r1\n\tst.1\tr5, r1\n\tadd\t32777, r0, stack-[1]\n\tadd\t1, r0, r3\n\tadd\tr0, r0, r6\n\tadd\tr5, r0, stack-[3]\n\tadd\tr3, r0, stack-[2]\n\tjump\t@.BB7_3\n.BB7_6:\n\tsub.s!\t3, r6, r1\n\tadd\t1, r6, r6\n\tjump.ge\t@.BB7_7\n.BB7_3:\n\tshl.s\t5, r6, r1\n\tadd\tr1, r5, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI7_1[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB7_6\n\tsub.s!\t@CPI7_2[0], r1, r2\n\tadd.ge\t@CPI7_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_3[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tr0, r0, r5\n\tadd\tr6, r0, stack-[4]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[2], r0, r3\n\tadd\tr1, r0, r4\n\tshr.s\t96, r4, r4\n\tand\t@CPI7_2[0], r4, stack[@returndatasize]\n\tadd\tstack-[3], r0, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB7_6\n\tadd\tr3, r0, r1\n\tret\n.BB7_7:\n\tadd\tr0, r0, r3\n\tadd\tr3, r0, r1\n\tret\n.BB7_1:\n\tadd\t@CPI7_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\n__cxa_throw:\n.func_begin8:\n\trevert\n.func_end8:\n\n__farcall:\n.func_begin9:\n.tmp0:\n\tfar_call\tr1, r2, @.BB9_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end9:\n\n__staticcall:\n.func_begin10:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB10_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB10_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end10:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI4_1:\nCPI6_1:\nCPI7_2:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -38733980356924212998632005821026408372590900073093808180983500287173593348156\nCPI0_2:\n\t.cell 25000000000000000000\nCPI0_3:\n\t.cell 100000000000000000000\nCPI0_4:\n\t.cell 7165955598810210947758972440497647702352813213923475212099083589497985089546\nCPI0_5:\n\t.cell -11795789301421276014426121139251082969971371454818346283546590961205884918410\nCPI0_6:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_7:\n\t.cell -21137919357405986966591444426442475500032540806690943300186094939880085403987\nCPI0_8:\n\t.cell 18446744073709551551\nCPI0_9:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_10:\n\t.cell 1725540767\nCPI0_11:\n\t.cell 3041954472\nCPI0_12:\n\t.cell 3651357472\nCPI0_13:\n\t.cell 3651357473\nCPI0_14:\n\t.cell 3792478065\nCPI0_15:\n\t.cell 4202047188\nCPI0_16:\n\t.cell 3041954473\nCPI0_17:\n\t.cell 3124842406\nCPI0_18:\n\t.cell 2439649221\nCPI0_19:\n\t.cell 2439649222\nCPI0_20:\n\t.cell 2957397980\nCPI0_21:\n\t.cell 2986093244\nCPI0_22:\n\t.cell 1725540768\nCPI0_23:\n\t.cell 2233625729\nCPI0_24:\n\t.cell 719206527\nCPI0_25:\n\t.cell 1064470259\nCPI0_26:\n\t.cell 1064470260\nCPI0_27:\n\t.cell 1169906350\nCPI0_28:\n\t.cell 1493811503\nCPI0_29:\n\t.cell 719206528\nCPI0_30:\n\t.cell 1046363171\nCPI0_31:\n\t.cell 265547964\nCPI0_32:\n\t.cell 265547965\nCPI0_33:\n\t.cell 517440284\nCPI0_34:\n\t.cell 139621531\nCPI0_35:\n\t.cell 177362148\nCPI0_36:\n\t.cell 2535301202817642044428229017600\nCPI0_37:\n\t.cell 38878206584692966203415385907871375197469080758325516314230789535345649042549\nCPI0_38:\nCPI1_0:\nCPI3_0:\nCPI4_4:\nCPI7_1:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_39:\n\t.cell 2535301200456458802993406410752\nCPI0_40:\n\t.cell 46361386726410499263322427381369506175992020241588171917386103515624534704128\nCPI0_41:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI0_42:\n\t.cell 46308022326495007027972728677917914892729792999299745830475596687180801507328\nCPI0_43:\n\t.cell 5387515053331158197795811229696\nCPI0_44:\nCPI5_0:\n\t.cell 18446744073709551615\nCPI0_45:\n\t.cell 57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_46:\nCPI7_0:\n\t.cell 18446744073709551487\nCPI0_47:\n\t.cell -48719757687822547800745197551118351534541568878739321821808546113428889233771\nCPI0_48:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI0_49:\n\t.cell 2852213852874699394802404818944\nCPI0_50:\n\t.cell -51754749830882998550257207451194206483020054980427481391018172681031593754624\nCPI0_51:\n\t.cell 5387515050969974956360988622848\nCPI0_52:\n\t.cell -13000608119627727876772300249704890262799149961116506745709105103651939024896\nCPI0_53:\n\t.cell -37977571911845989512430043814285979273712922650878732108812190966532310630528\nCPI0_54:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_55:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_56:\n\t.cell -24243573542908756656742960469620706294859471809197549687606805108482832859136\nCPI0_57:\nCPI4_7:\nCPI5_2:\nCPI7_5:\n\t.cell 2852213850513516153367582212096\nCPI0_58:\n\t.cell 12287802011638825227754471026996419262624315710288255251704735217855525552128\nCPI0_59:\n\t.cell 33550280150062231128225087615149342456621128802140773398544284085856898931718\nCPI0_60:\n\t.cell 18446744073709551423\nCPI0_61:\n\t.cell 6454973039698199198119942482240540643982028891330163610098731264865829167633\nCPI0_62:\nCPI3_1:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_63:\n\t.cell 49422300655976383518971161772042036479724517635858811238160587340303074464591\nCPI0_64:\n\t.cell 2481041784956016742021570618494952475758789857281704946240779902470294861374\nCPI0_65:\n\t.cell 26616959624788145501257665028759500958019551560565664426117466910078421933505\nCPI0_66:\n\t.cell -26169279673760072341673943167871893214131042372482409454972450661548556448747\nCPI0_67:\n\t.cell -35624623585156310935986566609950774337791491079595188565361216048441042957010\nCPI0_68:\n\t.cell 36516136433507714556481507284757523525550975291680945358964353894568634540880\nCPI0_69:\nCPI4_6:\nCPI5_1:\nCPI7_4:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_70:\n\t.cell -18002263324862296164297574372220909754226456243825434961346737007256845270391\nCPI0_71:\n\t.cell 22937413733187175715868565775962365304842191654271196425550700422551176216576\nCPI0_72:\n\t.cell -29487237927401896585245331716554042710778635660785814218489451273394777143854\nCPI0_73:\nCPI4_0:\nCPI6_0:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI0_74:\nCPI4_2:\nCPI6_2:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_75:\nCPI4_5:\nCPI7_3:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_76:\n\t.cell 18446744073709551483\nCPI0_77:\n\t.cell 452320755367215223072041012693165450642974499454535319430480752770768666640\nCPI0_78:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_79:\n\t.cell 904625697166532776746648320380374280103671765658434358441154937409622769664\nCPI0_80:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_81:\n\t.cell 452327351686492022877892650253381504445681004043670624601512424814225774113\nCPI0_82:\n\t.cell 904625697166532776746648320380374280103671770729036759354072543396435591168\nCPI0_83:\n\t.cell 29289127993025145568725129057828671567744754166070328588094505464281371246592\nCPI0_84:\n\t.cell 452316996283280943972454270104842362384458315300090353714335364538069596214\nCPI0_85:\n\t.cell 3329497121024463004105485098519422691205340781826206436700955321439975636992\nCPI0_86:\n\t.cell 316912650057057350374175801344\nCPI0_87:\n\t.cell 53124490846506627539696473457219140915193552683999888592509667915023370944512\nCPI0_88:\n\t.cell -166923669067369873766191994592930785159943346089370123761369690313261580288\nCPI0_89:\n\t.cell -26079055428631999755169999820041264995593315863804083392934812248473178472448\nCPI4_3:\n\t.cell 18446744073709551488\n","methodIdentifiers":{"IS_TEST()":"fa7626d4","ROOT()":"5909c12f","excludeArtifacts()":"b5508aa9","excludeContracts()":"e20c9f71","excludeSelectors()":"b0464fdc","excludeSenders()":"1ed7831c","failed()":"ba414fa6","isOnZkSyncChainId()":"45bb5aae","isOnZkSyncPrecompiles()":"d9a34b21","isZkSyncChain()":"0852749b","setUp()":"0a9254e4","targetArtifactSelectors()":"66d9a9a0","targetArtifacts()":"85226c81","targetContracts()":"3f7286f4","targetInterfaces()":"2ade3880","targetSelectors()":"916a17c6","targetSenders()":"3e5e3c23","testUserCanClaimWithPermit()":"b1fc2abc","testUsersCanClaim()":"0fd3f0bd"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.3a2587f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOnZkSyncChainId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOnZkSyncPrecompiles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isZkSync\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isZkSyncChain\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isZkSync\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUserCanClaimWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUsersCanClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/MerkleAirdrop.t.sol\":\"MerkleAirdropTest\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":murky/=lib/murky/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/foundry-devops/src/ZkSyncChainChecker.sol\":{\"keccak256\":\"0xbcf7e7847171a8e028ccecbe9cd3a75f9d3b102c12806d86d13a57a66d204a6a\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5c075822f6919ac2eaa770d7db6497447cacc0aa9c386bfd6f52ab71fd7d0081\",\"dweb:/ipfs/QmSryCcJrLfifu3SCiAQganu4YxTXJXs2JqpsfNymPp2qL\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12\",\"dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x18436638da96539b6a9f971f8ce332c6fcad32d15c988af689b174f753d9936b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0351b5b167c9f0f6eb670bc6db5e9579aadb9a42edc62256c182695c3e9bf47e\",\"dweb:/ipfs/QmSQPNXU4NYhYojvyqHRzQx2duRx5njv6AHssoJMQb8Tq1\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x80b4189de089dc632b752b365a16c5063b58cc24da0dd38b82f2c25f56d25c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e2717e78844156a86733f1cada84dba906ffe03e4957de12ca219c65e9191b\",\"dweb:/ipfs/QmW8vg3AafPJRo7EC75RQJTtjiaYmfPa4U4sqmEuBXXzaP\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0xc452b8c0ab5a57e6ca49c4fbe6aead2460c2f8d60d58bc60af68e559b7ca1179\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0980b3b9e8cd9d9a0f2ae848f0f36a85158887e6fd961142a13b11299ae7f30a\",\"dweb:/ipfs/QmUrmDji3NR2V3YezV8xHSS3wjeBKq16FL7cHdBCnwLjKd\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0x29074fe5a74bb024c57b3570abf6c74d8bceed3438694d470fd0166a3ecd196a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4f8435ccbc56e384f4cc9ac9ff491cf30a82f2beac00e33ccc2cf8af3f77cc3\",\"dweb:/ipfs/QmUKJXxTe6nn1qfgnX8xbnboNNAPUuEmJyGqMZCKNiFBgn\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xfd29ed7a01e9ef109cc31542ca0f51ba3e793740570b69172ec3d8bfbb1643b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99379e0649be8106d2708a2bde73b5cdaba4505f1001f1586b53788bf971d097\",\"dweb:/ipfs/QmV9cCnvFoVzV2cVDW4Zbs3JQ3ehxBcooQS52taVxR637S\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x686a21b9be2594ccfda3a855270dd8ebc4288b8a9ed84ecd4ef1bca2ea3fc46b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c0bbc37f4d1aaae086d73f13f41b8043a9ad5b07f30a2fd7b8a74ead99b1ef6\",\"dweb:/ipfs/QmZpFyfCCFpbrkNtfHTn18qV7VvptPdoLN82Qu5XtMCci6\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xa548dd62e9e17616ae80a1e7ac7b1447ae377efc27fb9f7b4f4fbf5c0b0a1dfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27e9ae3e67eb229444cd43d49db5be57c586155fd1d363b3b1f9bb1b7bb0087\",\"dweb:/ipfs/QmT2GFnpXsTWBs8bkeVJtQ4VNX7f3igxwB77JBCr4mDXb3\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0xa67f5e17d65eea22581382bd8c2804025f1029bfbd80908dc77b218fad29fb1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db1206248cec67bdd40009d0b57e91a2ce62fd4a85eff8d3ea51b28b550afe88\",\"dweb:/ipfs/QmYcWcZ3XRPSx9r8cFwjokpESjjiCtkebVE4VK3FjE3GVd\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x89c4d3509df3e1387752bf07f04bdf967ddb424d8917808bc9e6e4bc7995db0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2909c1aa5cc0ef4288e88c361fc114838aeb2c9396f83886ab9c52b39baf602f\",\"dweb:/ipfs/QmS246CQ6JN1dH3khhZvURLFEgfJ1DiV7J1VYxisfqLVnm\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x2fe0f666490bd88fa762c0c49cbba17e847e45cf259d744d6797636392beee41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ad7a55cdd08f0c336167e50e2fd172142de995409a81ffc0602792262f2e86c\",\"dweb:/ipfs/QmY7g2r17jJ6ZGoJ3DzSa7abQzvUXJATGy4sd8SEPt7oA3\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x3f1998a2904792ff2a576827876638b4917573186537f878d30b23277a3b8d38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8dfb08ed617c9d874de901e44ac8af7af7b13e7c84000a1da3cdaf6004593e8\",\"dweb:/ipfs/QmPX2hZAvCZJCQNSXcWqhxh3xp6UitwESrw3K2u3aYNqiu\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2be34e47fc07baed68c4878618a6e13c13243753c3f656ca1b6e05287c5df4ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0bc7f3ae934c76aae959cf061b9764a6dbb2313c4281944dde278cd418599da\",\"dweb:/ipfs/QmYtYLrwC1nPJd86kVrQFQAGeS3XGmhXjCj25LQGfGkugi\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cd59334ed58b8884cd1f775afc9400db702e674e5d6a7a438c655b9de788d7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e62c7de7318f413b6352e3f2704ca23e7725ff144e43c8bd574d12dbf29047\",\"dweb:/ipfs/QmSEXG2rBx1VxU2uFTWdiChjDvA4osEY2mesjmoVeVhHko\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5c8d4114f077f6803bb89b8b07bfa26dfbf8f2001708e4e7fdf1e8d9ddd42f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b66c74efa1f994e3ea467b4165da1575857b29d81bec36e94678fe494ce5c615\",\"dweb:/ipfs/QmeXQFdzSJFmN8UdhxMqQwwUh1U2WEha5NoVLbSg3pCJc5\"]},\"script/DeployMerkleAirdrop.s.sol\":{\"keccak256\":\"0x2b9971edb0c4006377cf814d1a6156dbb9513d695e58ae2ca31835fbadaa44aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d85c9d69a1bc0c9eb0213fabdbfffb9a8ca6d351cc12612e1feff87aa310ef95\",\"dweb:/ipfs/QmVYghT9j5nDQR7nSoaL2xAxKt34xcjB9HPCDEu712kt1v\"]},\"src/Merkle-Airdrop.sol\":{\"keccak256\":\"0xe10eeea559ed3090a21d3bae5d302ac13fbeee23bfdba4013e21f0efc1a64fdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae3f6d0fb7f83c72ffe1073c23a130d3badafaee2f0e96c22648513a87f42be4\",\"dweb:/ipfs/QmV64vT4eziFpdaJwcju57kcFbVFmbufuBfCuWH9iME1vN\"]},\"src/PranavCoin.sol\":{\"keccak256\":\"0xc2e7805619d14dfe7c674ec5ddc3c6b3fe4189b975247a6e276d301b8497ed9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b14a31ab09d15fbd009e6b6c422e5bd14fdea193f8fc3cd8f5c10c7774a143e\",\"dweb:/ipfs/QmdCeQaaFSUuwCGNcAUDya9nHZeBTN4V9bShJ1uaMxfLQU\"]},\"test/MerkleAirdrop.t.sol\":{\"keccak256\":\"0x14e1a9bb7a980f1971cfd4a19bacb40d80cf5c326338fbcaef5ad61fad26eaf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1a48c51f5137d4a9e1f84d9bbc455308a25b68d05fc721045be33cdc7bb60c6\",\"dweb:/ipfs/Qmaq8yPYFkpgPtG7kF5tNSMMjuLYUEGdf4h2FJhW1AHgvK\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 0:\"lib/forge-std/src/Base.sol\", 3:\"lib/forge-std/src/StdAssertions.sol\", 4:\"lib/forge-std/src/StdChains.sol\", 5:\"lib/forge-std/src/StdCheats.sol\", 7:\"lib/forge-std/src/StdInvariant.sol\", 13:\"lib/forge-std/src/StdUtils.sol\", 14:\"lib/forge-std/src/Test.sol\", 25:\"lib/foundry-devops/src/ZkSyncChainChecker.sol\", 60:\"test/MerkleAirdrop.t.sol\"\nobject \"MerkleAirdropTest_56652\" {\n    code {\n        {\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            /// @src 4:3166:3170  \"true\"\n            let _1 := 0x01\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            let _2 := not(255)\n            sstore(/** @src 4:3166:3170  \"true\" */ 0x0c, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ or(and(sload(/** @src 4:3166:3170  \"true\" */ 0x0c), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _2), /** @src 4:3166:3170  \"true\" */ _1))\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            sstore(/** @src 14:1038:1042  \"true\" */ 0x1f, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ or(and(sload(/** @src 14:1038:1042  \"true\" */ 0x1f), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _2), /** @src 4:3166:3170  \"true\" */ _1))\n            /// @src 25:196:199  \"324\"\n            let _3 := 0x20\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            sstore(/** @src 25:196:199  \"324\" */ _3, 0x0144)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            sstore(/** @src 25:236:239  \"300\" */ 0x21, 0x012c)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            sstore(/** @src 25:281:284  \"260\" */ 0x22, 0x0104)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            sstore(/** @src 60:651:717  \"0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4\" */ 0x25, 0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            sstore(/** @src 60:748:757  \"25 * 1e18\" */ 0x26, 0x015af1d78b58c40000)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            sstore(/** @src 60:786:803  \"AmountToClaim * 4\" */ 0x27, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0x056bc75e2d63100000)\n            /// @src 60:829:895  \"0x0fd7c981d39bece61f7499702bf59b3114a90e66b51ba2c53abdf7b62986c00a\"\n            let _4 := 0x0fd7c981d39bece61f7499702bf59b3114a90e66b51ba2c53abdf7b62986c00a\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            sstore(/** @src 60:829:895  \"0x0fd7c981d39bece61f7499702bf59b3114a90e66b51ba2c53abdf7b62986c00a\" */ 0x28, _4)\n            /// @src 60:920:986  \"0xe5ebd1e1b5a5478a944ecab36a9a954ac3b6b8216875f6524caa7a1d87096576\"\n            let _5 := 0xe5ebd1e1b5a5478a944ecab36a9a954ac3b6b8216875f6524caa7a1d87096576\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            sstore(/** @src 60:920:986  \"0xe5ebd1e1b5a5478a944ecab36a9a954ac3b6b8216875f6524caa7a1d87096576\" */ 0x29, _5)\n            /// @src 60:1010:1030  \"[proofOne, proofTwo]\"\n            let expr_mpos := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ allocate_memory()\n            mstore(expr_mpos, /** @src 60:829:895  \"0x0fd7c981d39bece61f7499702bf59b3114a90e66b51ba2c53abdf7b62986c00a\" */ _4)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            mstore(/** @src 60:1010:1030  \"[proofOne, proofTwo]\" */ add(expr_mpos, /** @src 25:196:199  \"324\" */ _3), /** @src 60:920:986  \"0xe5ebd1e1b5a5478a944ecab36a9a954ac3b6b8216875f6524caa7a1d87096576\" */ _5)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            let oldLen := sload(/** @src 60:1010:1030  \"[proofOne, proofTwo]\" */ 0x2a)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            let _6 := 2\n            sstore(/** @src 60:1010:1030  \"[proofOne, proofTwo]\" */ 0x2a, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _6)\n            if lt(_6, oldLen)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 60:1010:1030  \"[proofOne, proofTwo]\" */ 0x2a)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 25:196:199  \"324\" */ _3)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _7 := add(data, oldLen)\n                let start := add(data, _6)\n                for { }\n                lt(start, _7)\n                {\n                    start := add(start, /** @src 4:3166:3170  \"true\" */ _1)\n                }\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            let srcPtr := expr_mpos\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 60:1010:1030  \"[proofOne, proofTwo]\" */ 0x2a)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 25:196:199  \"324\" */ _3)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            for { }\n            lt(i, _6)\n            {\n                i := add(i, /** @src 4:3166:3170  \"true\" */ _1)\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            {\n                let _8 := mload(srcPtr)\n                srcPtr := add(srcPtr, /** @src 25:196:199  \"324\" */ _3)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                sstore(add(data_1, i), _8)\n            }\n            /// @src 60:1063:1129  \"0xd1445c931158119b00449ffcac3c947d028c0c359c34a6646d95962b3b55c6ad\"\n            let _9 := 0xd1445c931158119b00449ffcac3c947d028c0c359c34a6646d95962b3b55c6ad\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            sstore(/** @src 60:1063:1129  \"0xd1445c931158119b00449ffcac3c947d028c0c359c34a6646d95962b3b55c6ad\" */ 0x2b, _9)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            sstore(/** @src 60:1160:1226  \"0xe5ebd1e1b5a5478a944ecab36a9a954ac3b6b8216875f6524caa7a1d87096576\" */ 0x2c, /** @src 60:920:986  \"0xe5ebd1e1b5a5478a944ecab36a9a954ac3b6b8216875f6524caa7a1d87096576\" */ _5)\n            /// @src 60:1256:1288  \"[proofPermitOne, proofPermitTwo]\"\n            let expr_mpos_1 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ allocate_memory()\n            mstore(expr_mpos_1, /** @src 60:1063:1129  \"0xd1445c931158119b00449ffcac3c947d028c0c359c34a6646d95962b3b55c6ad\" */ _9)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            mstore(/** @src 60:1256:1288  \"[proofPermitOne, proofPermitTwo]\" */ add(expr_mpos_1, /** @src 25:196:199  \"324\" */ _3), /** @src 60:920:986  \"0xe5ebd1e1b5a5478a944ecab36a9a954ac3b6b8216875f6524caa7a1d87096576\" */ _5)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            let oldLen_1 := sload(/** @src 60:1256:1288  \"[proofPermitOne, proofPermitTwo]\" */ 0x2d)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            sstore(/** @src 60:1256:1288  \"[proofPermitOne, proofPermitTwo]\" */ 0x2d, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _6)\n            if lt(_6, oldLen_1)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 60:1256:1288  \"[proofPermitOne, proofPermitTwo]\" */ 0x2d)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let data_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 25:196:199  \"324\" */ _3)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _10 := add(data_2, oldLen_1)\n                let start_1 := add(data_2, _6)\n                for { }\n                lt(start_1, _10)\n                {\n                    start_1 := add(start_1, /** @src 4:3166:3170  \"true\" */ _1)\n                }\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            let srcPtr_1 := expr_mpos_1\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 60:1256:1288  \"[proofPermitOne, proofPermitTwo]\" */ 0x2d)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            let data_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 25:196:199  \"324\" */ _3)\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            let i_1 := /** @src -1:-1:-1 */ 0\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            for { }\n            lt(i_1, _6)\n            {\n                i_1 := add(i_1, /** @src 4:3166:3170  \"true\" */ _1)\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            {\n                let _11 := mload(srcPtr_1)\n                srcPtr_1 := add(srcPtr_1, /** @src 25:196:199  \"324\" */ _3)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                sstore(add(data_3, i_1), _11)\n            }\n            let _12 := mload(64)\n            let _13 := datasize(\"MerkleAirdropTest_56652_deployed\")\n            codecopy(_12, dataoffset(\"MerkleAirdropTest_56652_deployed\"), _13)\n            return(_12, _13)\n        }\n        function allocate_memory() -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n    }\n    /// @use-src 0:\"lib/forge-std/src/Base.sol\", 3:\"lib/forge-std/src/StdAssertions.sol\", 5:\"lib/forge-std/src/StdCheats.sol\", 7:\"lib/forge-std/src/StdInvariant.sol\", 14:\"lib/forge-std/src/Test.sol\", 25:\"lib/foundry-devops/src/ZkSyncChainChecker.sol\", 60:\"test/MerkleAirdrop.t.sol\"\n    object \"MerkleAirdropTest_56652_deployed\" {\n        code {\n            {\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0852749b { external_fun_isZkSyncChain() }\n                    case 0x0a9254e4 { external_fun_setUp() }\n                    case 0x0fd3f0bd {\n                        external_fun_testUsersCanClaim()\n                    }\n                    case 0x1ed7831c { external_fun_excludeSenders() }\n                    case 0x2ade3880 {\n                        external_fun_targetInterfaces()\n                    }\n                    case 0x3e5e3c23 { external_fun_targetSenders() }\n                    case 0x3f7286f4 {\n                        external_fun_targetContracts()\n                    }\n                    case 0x45bb5aae {\n                        external_fun_isOnZkSyncChainId()\n                    }\n                    case 0x5909c12f { external_fun_ROOT() }\n                    case 0x66d9a9a0 {\n                        external_fun_targetArtifactSelectors()\n                    }\n                    case 0x85226c81 {\n                        external_fun_targetArtifacts()\n                    }\n                    case 0x916a17c6 {\n                        external_fun_targetSelectors()\n                    }\n                    case 0xb0464fdc {\n                        external_fun_excludeSelectors()\n                    }\n                    case 0xb1fc2abc {\n                        external_fun_testUserCanClaimWithPermit()\n                    }\n                    case 0xb5508aa9 {\n                        external_fun_excludeArtifacts()\n                    }\n                    case 0xba414fa6 { external_fun_failed() }\n                    case 0xd9a34b21 {\n                        external_fun_isOnZkSyncPrecompiles()\n                    }\n                    case 0xe20c9f71 {\n                        external_fun_excludeContracts()\n                    }\n                    case 0xfa7626d4 { external_fun_IS_TEST() }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0) { revert(0, 0) }\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function external_fun_isZkSyncChain()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := fun_isZkSyncChain()\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function external_fun_setUp()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 60:1390:1734  \"if (!isZkSyncChain()) {...\"\n                switch /** @src 60:1394:1410  \"!isZkSyncChain()\" */ cleanup_bool(iszero(/** @src 60:1395:1410  \"isZkSyncChain()\" */ fun_isZkSyncChain()))\n                case /** @src 60:1390:1734  \"if (!isZkSyncChain()) {...\" */ 0 {\n                    /// @src 60:1588:1604  \"new PranavCoin()\"\n                    let _1 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(64)\n                    /// @src 60:1588:1604  \"new PranavCoin()\"\n                    let _2 := datasize(\"PranavCoin_56415\")\n                    let _3 := add(_1, _2)\n                    let _4 := 0xffffffffffffffff\n                    if or(gt(_3, _4), lt(_3, _1)) { panic_error_0x41() }\n                    datacopy(_1, dataoffset(\"PranavCoin_56415\"), _2)\n                    let expr_address := create(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0, /** @src 60:1588:1604  \"new PranavCoin()\" */ _1, sub(_3, _1))\n                    if iszero(expr_address) { revert_forward() }\n                    /// @src 60:1580:1604  \"token = new PranavCoin()\"\n                    update_storage_value_offsett_contract_PranavCoin_to_contract_PranavCoin_8981(expr_address)\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    let _5 := sload(/** @src 60:1642:1646  \"ROOT\" */ 0x25)\n                    /// @src 60:1648:1670  \"IERC20(address(token))\"\n                    let expr_address_1 := cleanup_address(/** @src 60:1655:1669  \"address(token)\" */ cleanup_address(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:1580:1604  \"token = new PranavCoin()\" */ 0x24))))\n                    /// @src 60:1624:1671  \"new MerkleAirdrop(ROOT, IERC20(address(token)))\"\n                    let _6 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(64)\n                    /// @src 60:1624:1671  \"new MerkleAirdrop(ROOT, IERC20(address(token)))\"\n                    let _7 := datasize(\"MerkleAirdrop_56377\")\n                    let _8 := add(_6, _7)\n                    if or(gt(_8, /** @src 60:1588:1604  \"new PranavCoin()\" */ _4), /** @src 60:1624:1671  \"new MerkleAirdrop(ROOT, IERC20(address(token)))\" */ lt(_8, _6)) { panic_error_0x41() }\n                    datacopy(_6, dataoffset(\"MerkleAirdrop_56377\"), _7)\n                    let expr_address_2 := create(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0, /** @src 60:1624:1671  \"new MerkleAirdrop(ROOT, IERC20(address(token)))\" */ _6, sub(abi_encode_bytes32_contract_IERC20(_8, _5, expr_address_1), _6))\n                    if iszero(expr_address_2) { revert_forward() }\n                    /// @src 60:1614:1671  \"airdrop = new MerkleAirdrop(ROOT, IERC20(address(token)))\"\n                    update_storage_value_offsett_contract_PranavCoin_to_contract_PranavCoin_8982(expr_address_2)\n                    /// @src 60:1681:1691  \"token.mint\"\n                    let expr_address_3 := cleanup_address(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:1580:1604  \"token = new PranavCoin()\" */ 0x24)))\n                    /// @src 60:1692:1708  \"address(airdrop)\"\n                    let expr := cleanup_address(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:1614:1671  \"airdrop = new MerkleAirdrop(ROOT, IERC20(address(token)))\" */ 0x23)))\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    let _9 := sload(/** @src 60:1710:1722  \"AmountToMint\" */ 0x27)\n                    /// @src 60:1681:1723  \"token.mint(address(airdrop), AmountToMint)\"\n                    if iszero(extcodesize(expr_address_3))\n                    {\n                        /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                        revert(0, 0)\n                    }\n                    /// @src 60:1681:1723  \"token.mint(address(airdrop), AmountToMint)\"\n                    let _10 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(64)\n                    /// @src 60:1681:1723  \"token.mint(address(airdrop), AmountToMint)\"\n                    mstore(_10, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(224, 0x40c10f19))\n                    /// @src 60:1681:1723  \"token.mint(address(airdrop), AmountToMint)\"\n                    let _11 := call(gas(), expr_address_3, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0, /** @src 60:1681:1723  \"token.mint(address(airdrop), AmountToMint)\" */ _10, sub(abi_encode_address_uint256(add(_10, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 4), /** @src 60:1681:1723  \"token.mint(address(airdrop), AmountToMint)\" */ expr, _9), _10), _10, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0)\n                    /// @src 60:1681:1723  \"token.mint(address(airdrop), AmountToMint)\"\n                    if iszero(_11) { revert_forward() }\n                    if _11\n                    {\n                        finalize_allocation_8983(_10)\n                        abi_decode(_10, _10)\n                    }\n                }\n                default /// @src 60:1390:1734  \"if (!isZkSyncChain()) {...\"\n                {\n                    /// @src 60:1457:1482  \"new DeployMerkleAirdrop()\"\n                    let _12 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(64)\n                    /// @src 60:1457:1482  \"new DeployMerkleAirdrop()\"\n                    let _13 := datasize(\"DeployMerkleAirdrop_55440\")\n                    let _14 := add(_12, _13)\n                    if or(gt(_14, 0xffffffffffffffff), lt(_14, _12)) { panic_error_0x41() }\n                    datacopy(_12, dataoffset(\"DeployMerkleAirdrop_55440\"), _13)\n                    let expr_address_4 := create(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0, /** @src 60:1457:1482  \"new DeployMerkleAirdrop()\" */ _12, sub(_14, _12))\n                    if iszero(expr_address_4) { revert_forward() }\n                    /// @src 60:1515:1545  \"deployer.deployMerkleAirdrop()\"\n                    let _15 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(64)\n                    /// @src 60:1515:1545  \"deployer.deployMerkleAirdrop()\"\n                    mstore(_15, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(227, 15437239))\n                    /// @src 60:1515:1545  \"deployer.deployMerkleAirdrop()\"\n                    let _16 := call(gas(), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ and(/** @src 60:1515:1543  \"deployer.deployMerkleAirdrop\" */ expr_address_4, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0, /** @src 60:1515:1545  \"deployer.deployMerkleAirdrop()\" */ _15, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 4, /** @src 60:1515:1545  \"deployer.deployMerkleAirdrop()\" */ _15, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 64)\n                    /// @src 60:1515:1545  \"deployer.deployMerkleAirdrop()\"\n                    if iszero(_16) { revert_forward() }\n                    let expr_component_address := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0\n                    let expr_component_address_1 := 0\n                    /// @src 60:1515:1545  \"deployer.deployMerkleAirdrop()\"\n                    if _16\n                    {\n                        let _17 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 64\n                        /// @src 60:1515:1545  \"deployer.deployMerkleAirdrop()\"\n                        if gt(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 64, /** @src 60:1515:1545  \"deployer.deployMerkleAirdrop()\" */ returndatasize()) { _17 := returndatasize() }\n                        finalize_allocation(_15, _17)\n                        let expr_component_address_2, expr_component_address_3 := abi_decode_contract_MerkleAirdropt_contract_PranavCoin_fromMemory(_15, add(_15, _17))\n                        expr_component_address := expr_component_address_2\n                        expr_component_address_1 := expr_component_address_3\n                    }\n                    /// @src 60:1496:1545  \"(airdrop, token) = deployer.deployMerkleAirdrop()\"\n                    update_storage_value_offsett_contract_PranavCoin_to_contract_PranavCoin_8981(expr_component_address_1)\n                    update_storage_value_offsett_contract_PranavCoin_to_contract_PranavCoin_8982(expr_component_address)\n                }\n                /// @src 60:1765:1787  \"makeAddrAndKey(\\\"user\\\")\"\n                let expr_component, expr_component_1 := fun_makeAddrAndKey(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ copy_literal_to_memory_cb61ad33d3763aed2bc16c0f57ff251ac638d3d03ab7550adfd3e166c2e7adb6())\n                /// @src 60:1743:1787  \"(user, userPrivKey) = makeAddrAndKey(\\\"user\\\")\"\n                update_storage_value_offsett_uint256_to_uint256(expr_component_1)\n                update_storage_value_offsett_contract_PranavCoin_to_contract_PranavCoin_8987(expr_component)\n                /// @src 60:1803:1878  \"vm.addr(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\"\n                let _18 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(64)\n                /// @src 60:1803:1878  \"vm.addr(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\"\n                mstore(_18, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(224, 0xffa18649))\n                /// @src 60:1803:1878  \"vm.addr(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\"\n                let _19 := staticcall(gas(), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 60:1803:1878  \"vm.addr(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\" */ _18, sub(abi_encode_rational_by(add(_18, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 4)), /** @src 60:1803:1878  \"vm.addr(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\" */ _18), _18, 32)\n                if iszero(_19) { revert_forward() }\n                let expr_1 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0\n                /// @src 60:1803:1878  \"vm.addr(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\"\n                if _19\n                {\n                    let _20 := 32\n                    if gt(32, returndatasize()) { _20 := returndatasize() }\n                    finalize_allocation(_18, _20)\n                    expr_1 := abi_decode_address_fromMemory(_18, add(_18, _20))\n                }\n                /// @src 60:1797:1878  \"bob = vm.addr(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\"\n                update_storage_value_offsett_contract_PranavCoin_to_contract_PranavCoin(expr_1)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                return(0, 0)\n            }\n            function external_fun_testUsersCanClaim()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 60:1960:1975  \"token.balanceOf\"\n                let expr_address := cleanup_address(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:1960:1965  \"token\" */ 0x24)))\n                /// @src 60:1976:1980  \"user\"\n                let _1 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:1976:1980  \"user\" */ 0x2e))\n                /// @src 60:1960:1981  \"token.balanceOf(user)\"\n                let _2 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(64)\n                let _3 := shl(224, 0x70a08231)\n                /// @src 60:1960:1981  \"token.balanceOf(user)\"\n                mstore(_2, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _3)\n                /// @src 60:1960:1981  \"token.balanceOf(user)\"\n                let _4 := 32\n                let _5 := staticcall(gas(), expr_address, _2, sub(abi_encode_address(add(_2, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 4), /** @src 60:1960:1981  \"token.balanceOf(user)\" */ _1), _2), _2, _4)\n                if iszero(_5) { revert_forward() }\n                let expr := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0\n                /// @src 60:1960:1981  \"token.balanceOf(user)\"\n                if _5\n                {\n                    let _6 := _4\n                    if gt(_4, returndatasize()) { _6 := returndatasize() }\n                    finalize_allocation(_2, _6)\n                    expr := abi_decode_uint256_fromMemory(_2, add(_2, _6))\n                }\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _7 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 60:1992:2006  \"vm.prank(user)\"\n                if iszero(extcodesize(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _7))\n                /// @src 60:1992:2006  \"vm.prank(user)\"\n                {\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    revert(0, 0)\n                }\n                /// @src 60:1992:2006  \"vm.prank(user)\"\n                let _8 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(64)\n                /// @src 60:1992:2006  \"vm.prank(user)\"\n                mstore(_8, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(224, 0xca669fa7))\n                /// @src 60:1992:2006  \"vm.prank(user)\"\n                let _9 := call(gas(), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _7, 0, /** @src 60:1992:2006  \"vm.prank(user)\" */ _8, sub(abi_encode_address(add(_8, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 4), /** @src 60:1992:2006  \"vm.prank(user)\" */ _1), _8), _8, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0)\n                /// @src 60:1992:2006  \"vm.prank(user)\"\n                if iszero(_9) { revert_forward() }\n                if _9\n                {\n                    finalize_allocation_8983(_8)\n                    abi_decode(_8, _8)\n                }\n                /// @src 60:2119:2136  \"airdrop.claimSelf\"\n                let expr_address_1 := cleanup_address(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:2119:2126  \"airdrop\" */ 0x23)))\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _10 := sload(/** @src 60:2144:2157  \"AmountToClaim\" */ 0x26)\n                /// @src 60:2119:2158  \"airdrop.claimSelf(PROOF, AmountToClaim)\"\n                if iszero(extcodesize(expr_address_1))\n                {\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    revert(0, 0)\n                }\n                /// @src 60:2119:2158  \"airdrop.claimSelf(PROOF, AmountToClaim)\"\n                let _11 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(64)\n                /// @src 60:2119:2158  \"airdrop.claimSelf(PROOF, AmountToClaim)\"\n                mstore(_11, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(224, 0x32b61db9))\n                /// @src 60:2119:2158  \"airdrop.claimSelf(PROOF, AmountToClaim)\"\n                let _12 := call(gas(), expr_address_1, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0, /** @src 60:2119:2158  \"airdrop.claimSelf(PROOF, AmountToClaim)\" */ _11, sub(abi_encode_array_bytes32_dyn_storage_uint256(add(_11, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 4), /** @src 60:2119:2158  \"airdrop.claimSelf(PROOF, AmountToClaim)\" */ _10), _11), _11, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0)\n                /// @src 60:2119:2158  \"airdrop.claimSelf(PROOF, AmountToClaim)\"\n                if iszero(_12) { revert_forward() }\n                if _12\n                {\n                    finalize_allocation_8983(_11)\n                    abi_decode(_11, _11)\n                }\n                /// @src 60:2295:2310  \"token.balanceOf\"\n                let expr_address_2 := cleanup_address(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:1960:1965  \"token\" */ 0x24)))\n                /// @src 60:2311:2315  \"user\"\n                let _13 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:1976:1980  \"user\" */ 0x2e))\n                /// @src 60:2295:2316  \"token.balanceOf(user)\"\n                let _14 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(64)\n                /// @src 60:2295:2316  \"token.balanceOf(user)\"\n                mstore(_14, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _3)\n                /// @src 60:2295:2316  \"token.balanceOf(user)\"\n                let _15 := staticcall(gas(), expr_address_2, _14, sub(abi_encode_address(add(_14, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 4), /** @src 60:2295:2316  \"token.balanceOf(user)\" */ _13), _14), _14, /** @src 60:1960:1981  \"token.balanceOf(user)\" */ _4)\n                /// @src 60:2295:2316  \"token.balanceOf(user)\"\n                if iszero(_15) { revert_forward() }\n                let expr_1 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0\n                /// @src 60:2295:2316  \"token.balanceOf(user)\"\n                if _15\n                {\n                    let _16 := /** @src 60:1960:1981  \"token.balanceOf(user)\" */ _4\n                    /// @src 60:2295:2316  \"token.balanceOf(user)\"\n                    if gt(/** @src 60:1960:1981  \"token.balanceOf(user)\" */ _4, /** @src 60:2295:2316  \"token.balanceOf(user)\" */ returndatasize()) { _16 := returndatasize() }\n                    finalize_allocation(_14, _16)\n                    expr_1 := abi_decode_uint256_fromMemory(_14, add(_14, _16))\n                }\n                /// @src 60:2326:2359  \"assert(endBalance > startBalance)\"\n                assert_helper(/** @src 60:2333:2358  \"endBalance > startBalance\" */ gt(expr_1, expr))\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                return(0, 0)\n            }\n            function array_storeLengthForEncoding_array_address_dyn(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1))\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            function abi_encode_array_address_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, 32)\n                mstore(headStart, 32)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let srcPtr := add(value0, 32)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)))\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                tail := pos\n            }\n            function external_fun_excludeSenders()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 7:3018:3034  \"_excludedSenders\" */ 0x16)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                mstore(0, /** @src 7:3018:3034  \"_excludedSenders\" */ 0x16)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let srcPtr := 97789825912453899259273410636466998099043528421815129078110847000656284369545\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)))\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_string_to_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_array_struct_FuzzInterface_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                let _2 := 64\n                pos := add(headStart, 64)\n                let _3 := 5\n                let tail_2 := add(add(headStart, shl(5, length)), 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    let _4 := mload(srcPtr)\n                    let tail_3 := add(tail_2, _2)\n                    mstore(tail_2, and(mload(_4), sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)))\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    let memberValue0 := mload(add(_4, _1))\n                    mstore(add(tail_2, _1), _2)\n                    let pos_1 := tail_3\n                    let length_1 := mload(memberValue0)\n                    mstore(tail_3, length_1)\n                    let _5 := 96\n                    pos_1 := add(tail_2, _5)\n                    let tail_4 := add(add(tail_2, shl(_3, length_1)), _5)\n                    let srcPtr_1 := add(memberValue0, _1)\n                    let i_1 := 0\n                    for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n                    {\n                        mstore(pos_1, add(sub(tail_4, tail_2), not(95)))\n                        tail_4 := abi_encode_string_to_string(mload(srcPtr_1), tail_4)\n                        srcPtr_1 := add(srcPtr_1, _1)\n                        pos_1 := add(pos_1, _1)\n                    }\n                    tail_2 := tail_4\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetInterfaces()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 7:3948:3967  \"_targetedInterfaces\" */ 0x1e)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let _2 := 64\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _3 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 7:3948:3967  \"_targetedInterfaces\" */ 0x1e)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let spos := 36516136433507714556481507284757523525550975291680945358964353894568634540880\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation_8993(memPtr_1)\n                    mstore(memPtr_1, and(sload(spos), sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)))\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    mstore(add(memPtr_1, _3), copy_array_from_storage_to_memory_array_string__dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_struct_FuzzInterface_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_targetSenders()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 7:3794:3810  \"_targetedSenders\" */ 0x18)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                mstore(0, /** @src 7:3794:3810  \"_targetedSenders\" */ 0x18)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let srcPtr := 80167465652159884487584418398737133515478493586045375474096367959472086682926\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)))\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function external_fun_targetContracts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 7:3501:3519  \"_targetedContracts\" */ 0x17)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                mstore(0, /** @src 7:3501:3519  \"_targetedContracts\" */ 0x17)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let srcPtr := 89622809563556123081897041840816014639138942293158154584485133346364573191189\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)))\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function external_fun_isOnZkSyncChainId()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := fun_isOnZkSyncChainId()\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function external_fun_ROOT()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 60:629:717  \"bytes32 public ROOT = 0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4\" */ 37)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function abi_encode_bytes4(value, pos)\n            {\n                mstore(pos, and(value, shl(224, 0xffffffff)))\n            }\n            function abi_encode_array_bytes4_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                let srcPtr := add(value, 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), shl(224, 0xffffffff)))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            function abi_encode_array_struct_FuzzArtifactSelector_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                let _2 := 64\n                pos := add(headStart, 64)\n                let tail_2 := add(add(headStart, shl(5, length)), 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    let _3 := mload(srcPtr)\n                    let memberValue0 := mload(_3)\n                    mstore(tail_2, _2)\n                    let tail_3 := abi_encode_string_to_string(memberValue0, add(tail_2, _2))\n                    let memberValue0_1 := mload(add(_3, _1))\n                    mstore(add(tail_2, _1), sub(tail_3, tail_2))\n                    tail_2 := abi_encode_array_bytes4_dyn(memberValue0_1, tail_3)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetArtifactSelectors()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 7:3346:3372  \"_targetedArtifactSelectors\" */ 0x1b)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let _2 := 64\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _3 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 7:3346:3372  \"_targetedArtifactSelectors\" */ 0x1b)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let spos := 26616959624788145501257665028759500958019551560565664426117466910078421933505\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation_8993(memPtr_1)\n                    mstore(memPtr_1, copy_array_from_storage_to_memory_string(spos))\n                    mstore(add(memPtr_1, _3), copy_array_from_storage_to_memory_array_bytes4_dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_struct_FuzzArtifactSelector_dyn(memPos, memPtr), memPos))\n            }\n            function abi_encode_array_string_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, 32)\n                mstore(headStart, 32)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let tail_2 := add(add(headStart, shl(5, length)), 64)\n                let srcPtr := add(value0, 32)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    tail_2 := abi_encode_string_to_string(mload(srcPtr), tail_2)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetArtifacts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 7:3162:3180  \"_targetedArtifacts\" */ 0x1a)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _2 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 7:3162:3180  \"_targetedArtifacts\" */ 0x1a)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let spos := 2481041784956016742021570618494952475758789857281704946240779902470294861374\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, copy_array_from_storage_to_memory_string(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 1)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_string_dyn(memPos, memPtr), memPos))\n            }\n            function abi_encode_array_struct_FuzzSelector_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                let _2 := 64\n                pos := add(headStart, 64)\n                let tail_2 := add(add(headStart, shl(5, length)), 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    let _3 := mload(srcPtr)\n                    mstore(tail_2, and(mload(_3), sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)))\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    let memberValue0 := mload(add(_3, _1))\n                    mstore(add(tail_2, _1), _2)\n                    tail_2 := abi_encode_array_bytes4_dyn(memberValue0, add(tail_2, _2))\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetSelectors()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 7:3653:3671  \"_targetedSelectors\" */ 0x1d)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let _2 := 64\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _3 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 7:3653:3671  \"_targetedSelectors\" */ 0x1d)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let spos := 49422300655976383518971161772042036479724517635858811238160587340303074464591\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation_8993(memPtr_1)\n                    mstore(memPtr_1, and(sload(spos), sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)))\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    mstore(add(memPtr_1, _3), copy_array_from_storage_to_memory_array_bytes4_dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_excludeSelectors()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 7:2876:2894  \"_excludedSelectors\" */ 0x1c)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let _2 := 64\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _3 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 7:2876:2894  \"_excludedSelectors\" */ 0x1c)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let spos := 6454973039698199198119942482240540643982028891330163610098731264865829167633\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation_8993(memPtr_1)\n                    mstore(memPtr_1, and(sload(spos), sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)))\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    mstore(add(memPtr_1, _3), copy_array_from_storage_to_memory_array_bytes4_dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_testUserCanClaimWithPermit()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 60:2450:2465  \"token.balanceOf\"\n                let expr_address := cleanup_address(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:2450:2455  \"token\" */ 0x24)))\n                /// @src 60:2466:2469  \"bob\"\n                let _1 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:2466:2469  \"bob\" */ 0x2f))\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _2 := 64\n                /// @src 60:2450:2470  \"token.balanceOf(bob)\"\n                let _3 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(_2)\n                let _4 := shl(224, 0x70a08231)\n                /// @src 60:2450:2470  \"token.balanceOf(bob)\"\n                mstore(_3, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _4)\n                /// @src 60:2450:2470  \"token.balanceOf(bob)\"\n                let _5 := 32\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _6 := 4\n                /// @src 60:2450:2470  \"token.balanceOf(bob)\"\n                let _7 := staticcall(gas(), expr_address, _3, sub(abi_encode_address(add(_3, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _6), /** @src 60:2450:2470  \"token.balanceOf(bob)\" */ _1), _3), _3, _5)\n                if iszero(_7) { revert_forward() }\n                let expr := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0\n                /// @src 60:2450:2470  \"token.balanceOf(bob)\"\n                if _7\n                {\n                    let _8 := _5\n                    if gt(_5, returndatasize()) { _8 := returndatasize() }\n                    finalize_allocation(_3, _8)\n                    expr := abi_decode_uint256_fromMemory(_3, add(_3, _8))\n                }\n                /// @src 60:2590:2609  \"airdrop._getMessage\"\n                let expr_address_1 := cleanup_address(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:2590:2597  \"airdrop\" */ 0x23)))\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _9 := sload(/** @src 60:2615:2628  \"AmountToClaim\" */ 0x26)\n                /// @src 60:2590:2629  \"airdrop._getMessage(bob, AmountToClaim)\"\n                let _10 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(_2)\n                /// @src 60:2590:2629  \"airdrop._getMessage(bob, AmountToClaim)\"\n                mstore(_10, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(226, 0x2364f661))\n                /// @src 60:2590:2629  \"airdrop._getMessage(bob, AmountToClaim)\"\n                let _11 := staticcall(gas(), expr_address_1, _10, sub(abi_encode_address_uint256(add(_10, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _6), /** @src 60:2590:2629  \"airdrop._getMessage(bob, AmountToClaim)\" */ _1, _9), _10), _10, /** @src 60:2450:2470  \"token.balanceOf(bob)\" */ _5)\n                /// @src 60:2590:2629  \"airdrop._getMessage(bob, AmountToClaim)\"\n                if iszero(_11) { revert_forward() }\n                let expr_1 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0\n                /// @src 60:2590:2629  \"airdrop._getMessage(bob, AmountToClaim)\"\n                if _11\n                {\n                    let _12 := /** @src 60:2450:2470  \"token.balanceOf(bob)\" */ _5\n                    /// @src 60:2590:2629  \"airdrop._getMessage(bob, AmountToClaim)\"\n                    if gt(/** @src 60:2450:2470  \"token.balanceOf(bob)\" */ _5, /** @src 60:2590:2629  \"airdrop._getMessage(bob, AmountToClaim)\" */ returndatasize()) { _12 := returndatasize() }\n                    finalize_allocation(_10, _12)\n                    expr_1 := abi_decode_uint256_fromMemory(_10, add(_10, _12))\n                }\n                /// @src 60:2515:2630  \"vm.sign(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80,airdrop._getMessage(bob, AmountToClaim))\"\n                let _13 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(_2)\n                /// @src 60:2515:2630  \"vm.sign(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80,airdrop._getMessage(bob, AmountToClaim))\"\n                mstore(_13, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(226, 0x38d07aa9))\n                /// @src 60:2515:2630  \"vm.sign(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80,airdrop._getMessage(bob, AmountToClaim))\"\n                let _14 := sub(abi_encode_rational_by_bytes32(add(_13, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _6), /** @src 60:2515:2630  \"vm.sign(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80,airdrop._getMessage(bob, AmountToClaim))\" */ expr_1), _13)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _15 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 60:2515:2630  \"vm.sign(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80,airdrop._getMessage(bob, AmountToClaim))\"\n                let _16 := staticcall(gas(), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _15, /** @src 60:2515:2630  \"vm.sign(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80,airdrop._getMessage(bob, AmountToClaim))\" */ _13, _14, _13, 96)\n                if iszero(_16) { revert_forward() }\n                let expr_component := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0\n                let expr_component_1 := 0\n                let expr_component_2 := 0\n                /// @src 60:2515:2630  \"vm.sign(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80,airdrop._getMessage(bob, AmountToClaim))\"\n                if _16\n                {\n                    let _17 := 96\n                    if gt(96, returndatasize()) { _17 := returndatasize() }\n                    finalize_allocation(_13, _17)\n                    let expr_component_3, expr_component_4, expr_component_5 := abi_decode_uint8t_bytes32t_bytes32_fromMemory(_13, add(_13, _17))\n                    expr_component := expr_component_3\n                    expr_component_1 := expr_component_4\n                    expr_component_2 := expr_component_5\n                }\n                /// @src 60:2650:2654  \"user\"\n                let _18 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:2650:2654  \"user\" */ 0x2e))\n                /// @src 60:2641:2655  \"vm.prank(user)\"\n                if iszero(extcodesize(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _15))\n                /// @src 60:2641:2655  \"vm.prank(user)\"\n                {\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    revert(0, 0)\n                }\n                /// @src 60:2641:2655  \"vm.prank(user)\"\n                let _19 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(_2)\n                /// @src 60:2641:2655  \"vm.prank(user)\"\n                mstore(_19, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(224, 0xca669fa7))\n                /// @src 60:2641:2655  \"vm.prank(user)\"\n                let _20 := call(gas(), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _15, 0, /** @src 60:2641:2655  \"vm.prank(user)\" */ _19, sub(abi_encode_address(add(_19, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _6), /** @src 60:2641:2655  \"vm.prank(user)\" */ _18), _19), _19, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0)\n                /// @src 60:2641:2655  \"vm.prank(user)\"\n                if iszero(_20) { revert_forward() }\n                if _20\n                {\n                    finalize_allocation_8983(_19)\n                    abi_decode(_19, _19)\n                }\n                /// @src 60:2665:2688  \"airdrop.claim_By_Permit\"\n                let expr_address_2 := cleanup_address(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:2590:2597  \"airdrop\" */ 0x23)))\n                /// @src 60:2702:2705  \"bob\"\n                let _21 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:2466:2469  \"bob\" */ 0x2f))\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _22 := sload(/** @src 60:2615:2628  \"AmountToClaim\" */ 0x26)\n                /// @src 60:2665:2730  \"airdrop.claim_By_Permit(PROOFPERMIT, bob, AmountToClaim, v, r, s)\"\n                if iszero(extcodesize(expr_address_2))\n                {\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    revert(0, 0)\n                }\n                /// @src 60:2665:2730  \"airdrop.claim_By_Permit(PROOFPERMIT, bob, AmountToClaim, v, r, s)\"\n                let _23 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(_2)\n                /// @src 60:2665:2730  \"airdrop.claim_By_Permit(PROOFPERMIT, bob, AmountToClaim, v, r, s)\"\n                mstore(_23, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(226, 0x06caa991))\n                /// @src 60:2665:2730  \"airdrop.claim_By_Permit(PROOFPERMIT, bob, AmountToClaim, v, r, s)\"\n                let _24 := call(gas(), expr_address_2, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0, /** @src 60:2665:2730  \"airdrop.claim_By_Permit(PROOFPERMIT, bob, AmountToClaim, v, r, s)\" */ _23, sub(abi_encode_array_bytes32_dyn_storage_address_uint256_uint8_bytes32_bytes32(add(_23, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _6), /** @src 60:2665:2730  \"airdrop.claim_By_Permit(PROOFPERMIT, bob, AmountToClaim, v, r, s)\" */ _21, _22, expr_component, expr_component_1, expr_component_2), _23), _23, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0)\n                /// @src 60:2665:2730  \"airdrop.claim_By_Permit(PROOFPERMIT, bob, AmountToClaim, v, r, s)\"\n                if iszero(_24) { revert_forward() }\n                if _24\n                {\n                    finalize_allocation_8983(_23)\n                    abi_decode(_23, _23)\n                }\n                /// @src 60:2762:2777  \"token.balanceOf\"\n                let expr_address_3 := cleanup_address(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:2450:2455  \"token\" */ 0x24)))\n                /// @src 60:2778:2781  \"bob\"\n                let _25 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 60:2466:2469  \"bob\" */ 0x2f))\n                /// @src 60:2762:2782  \"token.balanceOf(bob)\"\n                let _26 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(_2)\n                /// @src 60:2762:2782  \"token.balanceOf(bob)\"\n                mstore(_26, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _4)\n                /// @src 60:2762:2782  \"token.balanceOf(bob)\"\n                let _27 := staticcall(gas(), expr_address_3, _26, sub(abi_encode_address(add(_26, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _6), /** @src 60:2762:2782  \"token.balanceOf(bob)\" */ _25), _26), _26, /** @src 60:2450:2470  \"token.balanceOf(bob)\" */ _5)\n                /// @src 60:2762:2782  \"token.balanceOf(bob)\"\n                if iszero(_27) { revert_forward() }\n                let expr_2 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0\n                /// @src 60:2762:2782  \"token.balanceOf(bob)\"\n                if _27\n                {\n                    let _28 := /** @src 60:2450:2470  \"token.balanceOf(bob)\" */ _5\n                    /// @src 60:2762:2782  \"token.balanceOf(bob)\"\n                    if gt(/** @src 60:2450:2470  \"token.balanceOf(bob)\" */ _5, /** @src 60:2762:2782  \"token.balanceOf(bob)\" */ returndatasize()) { _28 := returndatasize() }\n                    finalize_allocation(_26, _28)\n                    expr_2 := abi_decode_uint256_fromMemory(_26, add(_26, _28))\n                }\n                /// @src 60:2792:2825  \"assert(endBalance > startBalance)\"\n                assert_helper(/** @src 60:2799:2824  \"endBalance > startBalance\" */ gt(expr_2, expr))\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                return(0, 0)\n            }\n            function external_fun_excludeArtifacts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 7:2575:2593  \"_excludedArtifacts\" */ 0x19)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _2 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 7:2575:2593  \"_excludedArtifacts\" */ 0x19)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let spos := 67072331549493647622825787457569556318728415786901242217649037894484240406165\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, copy_array_from_storage_to_memory_string(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 1)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_string_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_failed()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := fun_failed()\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function external_fun_isOnZkSyncPrecompiles()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := fun_isOnZkSyncPrecompiles()\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function external_fun_excludeContracts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 7:2723:2741  \"_excludedContracts\" */ 0x15)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                mstore(0, /** @src 7:2723:2741  \"_excludedContracts\" */ 0x15)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let srcPtr := 38878206584692966203415385907871375197469080758325516314230789535345649042549\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)))\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function external_fun_IS_TEST()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(/** @src 14:1016:1042  \"bool public IS_TEST = true\" */ 31), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value)))\n                return(memPos, 32)\n            }\n            /// @ast-id 47099 @src 25:1732:1909  \"function isZkSyncChain() public returns (bool isZkSync) {...\"\n            function fun_isZkSyncChain() -> var_isZkSync\n            {\n                /// @src 25:1798:1863  \"if (isOnZkSyncChainId()) {...\"\n                if /** @src 25:1802:1821  \"isOnZkSyncChainId()\" */ fun_isOnZkSyncChainId()\n                /// @src 25:1798:1863  \"if (isOnZkSyncChainId()) {...\"\n                {\n                    /// @src 25:1837:1852  \"return isZkSync\"\n                    var_isZkSync := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0\n                    /// @src 25:1837:1852  \"return isZkSync\"\n                    leave\n                }\n                /// @src 25:1872:1902  \"return isOnZkSyncPrecompiles()\"\n                var_isZkSync := /** @src 25:1879:1902  \"isOnZkSyncPrecompiles()\" */ fun_isOnZkSyncPrecompiles()\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function revert_forward()\n            {\n                let pos := mload(64)\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function update_storage_value_offsett_contract_PranavCoin_to_contract_PranavCoin_8981(value)\n            {\n                sstore(/** @src 60:1580:1604  \"token = new PranavCoin()\" */ 0x24, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ or(and(sload(/** @src 60:1580:1604  \"token = new PranavCoin()\" */ 0x24), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1))))\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            function update_storage_value_offsett_contract_PranavCoin_to_contract_PranavCoin_8982(value)\n            {\n                sstore(/** @src 60:1614:1671  \"airdrop = new MerkleAirdrop(ROOT, IERC20(address(token)))\" */ 0x23, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ or(and(sload(/** @src 60:1614:1671  \"airdrop = new MerkleAirdrop(ROOT, IERC20(address(token)))\" */ 0x23), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1))))\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            function update_storage_value_offsett_contract_PranavCoin_to_contract_PranavCoin_8987(value)\n            {\n                sstore(/** @src 60:1743:1787  \"(user, userPrivKey) = makeAddrAndKey(\\\"user\\\")\" */ 0x2e, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ or(and(sload(/** @src 60:1743:1787  \"(user, userPrivKey) = makeAddrAndKey(\\\"user\\\")\" */ 0x2e), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1))))\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            function update_storage_value_offsett_contract_PranavCoin_to_contract_PranavCoin(value)\n            {\n                sstore(/** @src 60:1797:1878  \"bob = vm.addr(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\" */ 0x2f, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ or(and(sload(/** @src 60:1797:1878  \"bob = vm.addr(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\" */ 0x2f), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1))))\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            function abi_encode_bytes32_contract_IERC20(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), and(value1, sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)))\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            function finalize_allocation_8983(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff) { panic_error_0x41() }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_8993(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)))\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                mstore(add(headStart, 32), value1)\n            }\n            function validator_revert_contract_MerkleAirdrop(value)\n            {\n                if iszero(eq(value, and(value, sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1))))\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                { revert(0, 0) }\n            }\n            function abi_decode_contract_MerkleAirdropt_contract_PranavCoin_fromMemory(headStart, dataEnd) -> value0, value1\n            {\n                if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_contract_MerkleAirdrop(value)\n                value0 := value\n                let value_1 := mload(add(headStart, 32))\n                validator_revert_contract_MerkleAirdrop(value_1)\n                value1 := value_1\n            }\n            function copy_literal_to_memory_cb61ad33d3763aed2bc16c0f57ff251ac638d3d03ab7550adfd3e166c2e7adb6() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_8993(memPtr_1)\n                mstore(memPtr_1, 4)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 0x20), \"user\")\n            }\n            function update_storage_value_offsett_uint256_to_uint256(value)\n            {\n                sstore(/** @src 60:1743:1787  \"(user, userPrivKey) = makeAddrAndKey(\\\"user\\\")\" */ 0x30, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ value)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let value := mload(headStart)\n                validator_revert_contract_MerkleAirdrop(value)\n                value0 := value\n            }\n            function abi_encode_rational_by(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                mstore(headStart, /** @src 60:1811:1877  \"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\" */ 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                value0 := mload(headStart)\n            }\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)))\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            function array_dataslot_array_bytes32_dyn_storage(ptr) -> data\n            {\n                mstore(0, ptr)\n                data := keccak256(0, 0x20)\n            }\n            function abi_encode_array_bytes32_dyn_storage_uint256(headStart, value1) -> tail\n            {\n                let tail_1 := add(headStart, 64)\n                mstore(headStart, 64)\n                let pos := tail_1\n                let length := sload(/** @src 60:2137:2142  \"PROOF\" */ 0x2a)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                mstore(tail_1, length)\n                pos := add(headStart, 96)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 60:2137:2142  \"PROOF\" */ 0x2a)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let srcPtr := 86304851309914298838325653292133865142491349004854749820968132734518352496082\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, sload(srcPtr))\n                    pos := add(pos, 0x20)\n                    srcPtr := add(srcPtr, 1)\n                }\n                tail := pos\n                mstore(add(headStart, 0x20), value1)\n            }\n            function assert_helper(condition)\n            {\n                if iszero(condition)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x01)\n                    revert(0, 0x24)\n                }\n            }\n            function array_allocation_size_array_struct_FuzzInterface_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(shl(5, length), 0x20)\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let slotValue := sload(slot)\n                let length := /** @src -1:-1:-1 */ 0\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _1 := 1\n                length := shr(1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_array_address_dyn(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, shl(5, iszero(iszero(length))))\n                }\n                case 1 {\n                    let dataPos := array_dataslot_array_bytes32_dyn_storage(slot)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_array_string__dyn(slot) -> memPtr\n            {\n                let length := sload(slot)\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                let mpos := memPtr_1\n                let _2 := 0x20\n                mpos := add(memPtr_1, 0x20)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ slot)\n                let spos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, copy_array_from_storage_to_memory_string(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 1)\n                }\n            }\n            /// @ast-id 46987 @src 25:291:623  \"function isOnZkSyncChainId() public view returns (bool) {...\"\n            function fun_isOnZkSyncChainId() -> var\n            {\n                /// @src 25:480:558  \"block.chainid == zkSyncMainnetChainId || block.chainid == zkSyncSepoliaChainId\"\n                let expr := /** @src 25:480:517  \"block.chainid == zkSyncMainnetChainId\" */ eq(/** @src 25:480:493  \"block.chainid\" */ chainid(), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ sload(/** @src 25:497:517  \"zkSyncMainnetChainId\" */ 0x20))\n                /// @src 25:480:558  \"block.chainid == zkSyncMainnetChainId || block.chainid == zkSyncSepoliaChainId\"\n                if iszero(expr)\n                {\n                    expr := /** @src 25:521:558  \"block.chainid == zkSyncSepoliaChainId\" */ eq(/** @src 25:480:493  \"block.chainid\" */ chainid(), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ sload(/** @src 25:538:558  \"zkSyncSepoliaChainId\" */ 0x21))\n                }\n                /// @src 25:480:616  \"block.chainid == zkSyncMainnetChainId || block.chainid == zkSyncSepoliaChainId...\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 25:574:616  \"block.chainid == zkSyncInMemoryNodeChainId\" */ eq(/** @src 25:480:493  \"block.chainid\" */ chainid(), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ sload(/** @src 25:591:616  \"zkSyncInMemoryNodeChainId\" */ 0x22))\n                }\n                /// @src 25:473:616  \"return block.chainid == zkSyncMainnetChainId || block.chainid == zkSyncSepoliaChainId...\"\n                var := expr_1\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            function copy_array_from_storage_to_memory_array_bytes4_dyn(slot) -> memPtr\n            {\n                let _1 := 64\n                memPtr := mload(64)\n                let pos := memPtr\n                let length := sload(slot)\n                pos := array_storeLengthForEncoding_array_address_dyn(memPtr, length)\n                let srcPtr := array_dataslot_array_bytes32_dyn_storage(slot)\n                let itemCounter := /** @src -1:-1:-1 */ 0\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                for { }\n                lt(add(itemCounter, 7), length)\n                {\n                    itemCounter := add(itemCounter, 8)\n                }\n                {\n                    let data := sload(srcPtr)\n                    let _2 := 224\n                    abi_encode_bytes4(shl(_2, data), pos)\n                    let _3 := 0x20\n                    let _4 := shl(224, 0xffffffff)\n                    let _5 := 192\n                    abi_encode_bytes4(and(shl(_5, data), _4), add(pos, _3))\n                    let _6 := 160\n                    abi_encode_bytes4(and(shl(_6, data), _4), add(pos, _1))\n                    let _7 := 96\n                    let _8 := 128\n                    abi_encode_bytes4(and(shl(_8, data), _4), add(pos, _7))\n                    abi_encode_bytes4(and(shl(_7, data), _4), add(pos, _8))\n                    abi_encode_bytes4(and(shl(_1, data), _4), add(pos, _6))\n                    abi_encode_bytes4(and(shl(_3, data), _4), add(pos, _5))\n                    abi_encode_bytes4(and(data, _4), add(pos, _2))\n                    pos := add(pos, 256)\n                    srcPtr := add(srcPtr, 1)\n                }\n                let data_1 := sload(srcPtr)\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(shl(224, data_1), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(and(shl(192, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(and(shl(160, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(and(shl(128, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(and(shl(96, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(and(shl(64, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(and(shl(0x20, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(and(data_1, shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                }\n                finalize_allocation(memPtr, sub(pos, memPtr))\n            }\n            function abi_decode_uint8t_bytes32t_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n            {\n                if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, 0xff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                value0 := value\n                value1 := mload(add(headStart, 32))\n                value2 := mload(add(headStart, 64))\n            }\n            function abi_encode_rational_by_bytes32(headStart, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, /** @src 60:2523:2589  \"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\" */ 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                mstore(add(headStart, 32), value1)\n            }\n            function abi_encode_array_bytes32_dyn_storage_address_uint256_uint8_bytes32_bytes32(headStart, value1, value2, value3, value4, value5) -> tail\n            {\n                let tail_1 := add(headStart, 192)\n                mstore(headStart, 192)\n                let pos := tail_1\n                let length := sload(/** @src 60:2689:2700  \"PROOFPERMIT\" */ 0x2d)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                mstore(tail_1, length)\n                pos := add(headStart, 224)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 60:2689:2700  \"PROOFPERMIT\" */ 0x2d)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let srcPtr := 33550280150062231128225087615149342456621128802140773398544284085856898931718\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, sload(srcPtr))\n                    pos := add(pos, 0x20)\n                    srcPtr := add(srcPtr, 1)\n                }\n                tail := pos\n                mstore(add(headStart, 0x20), and(value1, sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)))\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), and(value3, 0xff))\n                mstore(add(headStart, 128), value4)\n                mstore(add(headStart, 160), value5)\n            }\n            /// @ast-id 8410 @src 3:1243:1447  \"function failed() public view returns (bool) {...\"\n            function fun_failed() -> var_\n            {\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let value := and(sload(/** @src 3:1302:1309  \"_failed\" */ 0x08), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0xff)\n                /// @src 3:1298:1441  \"if (_failed) {...\"\n                switch /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ value\n                case /** @src 3:1298:1441  \"if (_failed) {...\" */ 0 {\n                    /// @src 3:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    let _1 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(64)\n                    /// @src 3:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    mstore(_1, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(228, 0x0667f9d7))\n                    let _2 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    mstore(/** @src 3:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ add(_1, 4), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _2)\n                    mstore(/** @src 3:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 3:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 3:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), shl(210, 0x19985a5b1959))\n                    /// @src 3:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    let _3 := staticcall(gas(), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _2, /** @src 3:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 3:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68, /** @src 3:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, 32)\n                    if iszero(_3) { revert_forward() }\n                    let expr := /** @src -1:-1:-1 */ 0\n                    /// @src 3:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    if _3\n                    {\n                        let _4 := 32\n                        if gt(32, returndatasize()) { _4 := returndatasize() }\n                        finalize_allocation(_1, _4)\n                        expr := abi_decode_uint256_fromMemory(_1, add(_1, _4))\n                    }\n                    /// @src 3:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                    var_ := /** @src 3:1377:1430  \"vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\" */ iszero(iszero(expr))\n                    /// @src 3:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                    leave\n                }\n                default /// @src 3:1298:1441  \"if (_failed) {...\"\n                {\n                    /// @src 3:1325:1339  \"return _failed\"\n                    var_ := value\n                    leave\n                }\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            function memory_array_index_access_address(baseRef, index) -> addr\n            {\n                if iszero(lt(index, 0x04))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(0x04, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(baseRef, shl(5, index))\n            }\n            function read_from_memoryt_address(ptr) -> returnValue\n            {\n                returnValue := and(mload(ptr), sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1))\n            }\n            /// @ast-id 47084 @src 25:629:1726  \"function isOnZkSyncPrecompiles() public returns (bool isZkSync) {...\"\n            function fun_isOnZkSyncPrecompiles() -> var_isZkSync\n            {\n                /// @src 25:678:691  \"bool isZkSync\"\n                var_isZkSync := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0\n                let memPtr := mload(64)\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                mstore(memPtr, 3)\n                let _1 := 4\n                mstore(/** @src 25:1313:1350  \"[ripemd, identity, modexp, ecPairing]\" */ add(memPtr, 32), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 4)\n                mstore(/** @src 25:1313:1350  \"[ripemd, identity, modexp, ecPairing]\" */ add(memPtr, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 64), 5)\n                mstore(/** @src 25:1313:1350  \"[ripemd, identity, modexp, ecPairing]\" */ add(memPtr, 96), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 8)\n                /// @src 25:1366:1379  \"uint256 i = 0\"\n                let var_i := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0\n                /// @src 25:1361:1695  \"for (uint256 i = 0; i < targets.length; i++) {...\"\n                for { }\n                /** @src 25:1381:1399  \"i < targets.length\" */ lt(var_i, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _1)\n                /// @src 25:1366:1379  \"uint256 i = 0\"\n                {\n                    /// @src 25:1401:1404  \"i++\"\n                    var_i := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ add(/** @src 25:1401:1404  \"i++\" */ var_i, /** @src 25:1084:1085  \"1\" */ 0x01)\n                }\n                /// @src 25:1401:1404  \"i++\"\n                {\n                    /// @src 25:1084:1085  \"1\"\n                    let _2 := 0x01\n                    /// @src 25:1590:1685  \"if (!success) {...\"\n                    if /** @src 25:1594:1602  \"!success\" */ cleanup_bool(iszero(/** @src 25:1487:1577  \"assembly {...\" */ call(gas(), /** @src 25:1463:1473  \"targets[i]\" */ read_from_memoryt_address(memory_array_index_access_address(memPtr, var_i)), /** @src 25:1084:1085  \"1\" */ _2, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ 0, 0, 0, 0)))\n                    /// @src 25:1590:1685  \"if (!success) {...\"\n                    {\n                        /// @src 25:1655:1670  \"return isZkSync\"\n                        var_isZkSync := /** @src 25:1084:1085  \"1\" */ _2\n                        /// @src 25:1655:1670  \"return isZkSync\"\n                        leave\n                    }\n                }\n                /// @src 25:1704:1719  \"return isZkSync\"\n                var_isZkSync := var_isZkSync\n            }\n            /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n                end := add(pos, length)\n            }\n            /// @src 5:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                mstore(headStart, value0)\n            }\n            /// @src 5:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            function abi_encode_address_string(headStart, value0, value1) -> tail\n            {\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                mstore(headStart, and(value0, sub(shl(160, /** @src 60:1588:1604  \"new PranavCoin()\" */ 1), 1)))\n                /// @src 5:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(add(headStart, 32), 64)\n                tail := abi_encode_string_to_string(value1, add(headStart, 64))\n            }\n            /// @ast-id 13492 @src 5:20158:20400  \"function makeAddrAndKey(string memory name) internal virtual returns (address addr, uint256 privateKey) {...\"\n            function fun_makeAddrAndKey(var_name_mpos) -> var_addr, var_privateKey\n            {\n                /// @src 5:20303:20325  \"abi.encodePacked(name)\"\n                let expr_mpos := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(64)\n                /// @src 5:20303:20325  \"abi.encodePacked(name)\"\n                let _1 := add(expr_mpos, 0x20)\n                let _2 := sub(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ abi_encode_string(/** @src 5:20303:20325  \"abi.encodePacked(name)\" */ var_name_mpos, _1), expr_mpos)\n                mstore(expr_mpos, add(_2, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ not(31)))\n                /// @src 5:20303:20325  \"abi.encodePacked(name)\"\n                finalize_allocation(expr_mpos, _2)\n                /// @src 5:20272:20327  \"privateKey = uint256(keccak256(abi.encodePacked(name)))\"\n                var_privateKey := /** @src 5:20293:20326  \"keccak256(abi.encodePacked(name))\" */ keccak256(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _1, mload(/** @src 5:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos))\n                /// @src 5:20344:20363  \"vm.addr(privateKey)\"\n                let _3 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(64)\n                /// @src 5:20344:20363  \"vm.addr(privateKey)\"\n                mstore(_3, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(224, 0xffa18649))\n                /// @src 5:20344:20363  \"vm.addr(privateKey)\"\n                let _4 := sub(abi_encode_uint256(add(_3, 4), var_privateKey), _3)\n                /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                let _5 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 5:20344:20363  \"vm.addr(privateKey)\"\n                let _6 := staticcall(gas(), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _5, /** @src 5:20344:20363  \"vm.addr(privateKey)\" */ _3, _4, _3, /** @src 5:20303:20325  \"abi.encodePacked(name)\" */ 0x20)\n                /// @src 5:20344:20363  \"vm.addr(privateKey)\"\n                if iszero(_6) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 5:20344:20363  \"vm.addr(privateKey)\"\n                if _6\n                {\n                    let _7 := /** @src 5:20303:20325  \"abi.encodePacked(name)\" */ 0x20\n                    /// @src 5:20344:20363  \"vm.addr(privateKey)\"\n                    if gt(/** @src 5:20303:20325  \"abi.encodePacked(name)\" */ 0x20, /** @src 5:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _7 := returndatasize() }\n                    finalize_allocation(_3, _7)\n                    expr := abi_decode_address_fromMemory(_3, add(_3, _7))\n                }\n                /// @src 5:20337:20363  \"addr = vm.addr(privateKey)\"\n                var_addr := expr\n                /// @src 5:20373:20393  \"vm.label(addr, name)\"\n                if iszero(extcodesize(/** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _5))\n                /// @src 5:20373:20393  \"vm.label(addr, name)\"\n                {\n                    /// @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:20373:20393  \"vm.label(addr, name)\"\n                let _8 := /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ mload(64)\n                /// @src 5:20373:20393  \"vm.label(addr, name)\"\n                mstore(_8, /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ shl(227, 0x18caf8e3))\n                /// @src 5:20373:20393  \"vm.label(addr, name)\"\n                let _9 := call(gas(), /** @src 60:503:2834  \"contract MerkleAirdropTest is Test,ZkSyncChainChecker {...\" */ _5, /** @src -1:-1:-1 */ 0, /** @src 5:20373:20393  \"vm.label(addr, name)\" */ _8, sub(abi_encode_address_string(add(_8, /** @src 5:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 5:20373:20393  \"vm.label(addr, name)\" */ expr, var_name_mpos), _8), _8, /** @src -1:-1:-1 */ 0)\n                /// @src 5:20373:20393  \"vm.label(addr, name)\"\n                if iszero(_9) { revert_forward() }\n                if _9\n                {\n                    finalize_allocation_8983(_8)\n                    abi_decode(_8, _8)\n                }\n            }\n        }\n        /// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/Script.sol\", 4:\"lib/forge-std/src/StdChains.sol\", 5:\"lib/forge-std/src/StdCheats.sol\", 13:\"lib/forge-std/src/StdUtils.sol\", 55:\"script/DeployMerkleAirdrop.s.sol\"\n        object \"DeployMerkleAirdrop_55440\" {\n            code {\n                {\n                    /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                    let _1 := memoryguard(0x80)\n                    mstore(64, _1)\n                    if callvalue() { revert(0, 0) }\n                    sstore(/** @src 4:3166:3170  \"true\" */ 0x0c, /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ or(and(sload(/** @src 4:3166:3170  \"true\" */ 0x0c), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ not(16711935)), 65537))\n                    sstore(/** @src 55:460:473  \"25 * 1e18 * 4\" */ 0x0d, 0x056bc75e2d63100000)\n                    /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                    let _2 := datasize(\"DeployMerkleAirdrop_55440_deployed\")\n                    codecopy(_1, dataoffset(\"DeployMerkleAirdrop_55440_deployed\"), _2)\n                    return(_1, _2)\n                }\n            }\n            /// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/Script.sol\", 55:\"script/DeployMerkleAirdrop.s.sol\"\n            object \"DeployMerkleAirdrop_55440_deployed\" {\n                code {\n                    {\n                        /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                        mstore(64, memoryguard(0x80))\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x075c6db8 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let ret, ret_1 := fun_deployMerkleAirdrop()\n                                let memPos := mload(64)\n                                return(memPos, sub(abi_encode_contract_MerkleAirdrop_contract_PranavCoin(memPos, ret, ret_1), memPos))\n                            }\n                            case 0xae82de5f {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_1 := mload(64)\n                                mstore(memPos_1, /** @src 55:365:431  \"0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4\" */ 0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4)\n                                /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                                return(memPos_1, 32)\n                            }\n                            case 0xc0406226 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 55:558:579  \"deployMerkleAirdrop()\"\n                                let expr_component_address, expr_component_address_1 := fun_deployMerkleAirdrop()\n                                /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                                let memPos_2 := mload(64)\n                                return(memPos_2, sub(abi_encode_contract_MerkleAirdrop_contract_PranavCoin(memPos_2, expr_component_address, expr_component_address_1), memPos_2))\n                            }\n                            case 0xf8ccbf47 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value := and(shr(16, sload(/** @src 2:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ 0xff)\n                                let memPos_3 := mload(64)\n                                mstore(memPos_3, iszero(iszero(value)))\n                                return(memPos_3, 32)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_contract_MerkleAirdrop_contract_PranavCoin(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(value0, _1))\n                        mstore(add(headStart, 32), and(value1, _1))\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    function finalize_allocation(memPtr)\n                    {\n                        if gt(memPtr, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, memPtr)\n                    }\n                    /// @ast-id 55439 @src 55:592:949  \"function deployMerkleAirdrop() public returns (MerkleAirdrop, PranavCoin) {...\"\n                    function fun_deployMerkleAirdrop() -> var_address, var_55389_address\n                    {\n                        /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                        let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 55:676:695  \"vm.startBroadcast()\"\n                        if iszero(extcodesize(/** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _1))\n                        /// @src 55:676:695  \"vm.startBroadcast()\"\n                        {\n                            /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                            revert(0, 0)\n                        }\n                        let _2 := 64\n                        /// @src 55:676:695  \"vm.startBroadcast()\"\n                        let _3 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                        /// @src 55:676:695  \"vm.startBroadcast()\"\n                        mstore(_3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x7fb5297f))\n                        /// @src 55:676:695  \"vm.startBroadcast()\"\n                        let _4 := 0\n                        let _5 := call(gas(), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _1, /** @src 55:676:695  \"vm.startBroadcast()\" */ 0, _3, 4, _3, 0)\n                        if iszero(_5)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos, /** @src 55:676:695  \"vm.startBroadcast()\" */ 0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 55:676:695  \"vm.startBroadcast()\"\n                        if _5\n                        {\n                            finalize_allocation(_3)\n                            /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                            _4 := /** @src 55:676:695  \"vm.startBroadcast()\" */ 0\n                        }\n                        /// @src 55:724:740  \"new PranavCoin()\"\n                        let _6 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                        /// @src 55:724:740  \"new PranavCoin()\"\n                        let _7 := datasize(\"PranavCoin_56415\")\n                        let _8 := add(_6, _7)\n                        let _9 := 0xffffffffffffffff\n                        if or(gt(_8, _9), lt(_8, _6))\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            mstore(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 55:676:695  \"vm.startBroadcast()\" */ 4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x41)\n                            revert(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x24)\n                        }\n                        /// @src 55:724:740  \"new PranavCoin()\"\n                        datacopy(_6, dataoffset(\"PranavCoin_56415\"), _7)\n                        let expr_55402_address := create(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 55:724:740  \"new PranavCoin()\" */ _6, sub(_8, _6))\n                        if iszero(expr_55402_address)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_1 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_1, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                        let _10 := sub(shl(160, 1), 1)\n                        let _11 := and(/** @src 55:813:827  \"address(token)\" */ expr_55402_address, /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _10)\n                        /// @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                        let _12 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                        /// @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                        let _13 := datasize(\"MerkleAirdrop_56377\")\n                        let _14 := add(_12, _13)\n                        if or(gt(_14, /** @src 55:724:740  \"new PranavCoin()\" */ _9), /** @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\" */ lt(_14, _12))\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            mstore(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 55:676:695  \"vm.startBroadcast()\" */ 4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x41)\n                            revert(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x24)\n                        }\n                        /// @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                        datacopy(_12, dataoffset(\"MerkleAirdrop_56377\"), _13)\n                        /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                        mstore(_14, /** @src 55:365:431  \"0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4\" */ 0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4)\n                        /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_14, 32), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _11)\n                        /// @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                        let expr_address := create(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\" */ _12, add(sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _14, /** @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\" */ _12), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _2))\n                        /// @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                        if iszero(expr_address)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_2 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_2, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        let _15 := sload(/** @src 55:868:880  \"amountToMint\" */ 0x0d)\n                        /// @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\"\n                        if iszero(extcodesize(_11))\n                        {\n                            /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                            revert(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, _4)\n                        }\n                        /// @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\"\n                        let _16 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                        /// @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\"\n                        mstore(_16, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x40c10f19))\n                        mstore(/** @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\" */ add(_16, /** @src 55:676:695  \"vm.startBroadcast()\" */ 4), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ and(/** @src 55:850:866  \"address(airdrop)\" */ expr_address, /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _10))\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\" */ _16, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _15)\n                        /// @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\"\n                        let _17 := call(gas(), _11, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\" */ _16, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 68, /** @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\" */ _16, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4)\n                        /// @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\"\n                        if iszero(_17)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_3 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_3, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\"\n                        if _17\n                        {\n                            finalize_allocation(_16)\n                            /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                            if _4\n                            {\n                                revert(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, _4)\n                            }\n                        }\n                        /// @src 55:891:909  \"vm.stopBroadcast()\"\n                        if iszero(extcodesize(/** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _1))\n                        /// @src 55:891:909  \"vm.stopBroadcast()\"\n                        {\n                            /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                            revert(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, _4)\n                        }\n                        /// @src 55:891:909  \"vm.stopBroadcast()\"\n                        let _18 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                        /// @src 55:891:909  \"vm.stopBroadcast()\"\n                        mstore(_18, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(225, 0x3b756e9b))\n                        /// @src 55:891:909  \"vm.stopBroadcast()\"\n                        let _19 := call(gas(), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _1, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 55:891:909  \"vm.stopBroadcast()\" */ _18, /** @src 55:676:695  \"vm.startBroadcast()\" */ 4, /** @src 55:891:909  \"vm.stopBroadcast()\" */ _18, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4)\n                        /// @src 55:891:909  \"vm.stopBroadcast()\"\n                        if iszero(_19)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_4 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_4, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 55:891:909  \"vm.stopBroadcast()\"\n                        if _19\n                        {\n                            finalize_allocation(_18)\n                            /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                            if _4\n                            {\n                                revert(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, _4)\n                            }\n                        }\n                        /// @src 55:919:942  \"return (airdrop, token)\"\n                        var_address := expr_address\n                        var_55389_address := expr_55402_address\n                    }\n                }\n                /// @use-src 33:\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\", 43:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 44:\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 47:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 58:\"src/Merkle-Airdrop.sol\"\n                object \"MerkleAirdrop_56377\" {\n                    code {\n                        {\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let _1 := memoryguard(0x01a0)\n                            if callvalue() { revert(0, 0) }\n                            let programSize := datasize(\"MerkleAirdrop_56377\")\n                            let argSize := sub(codesize(), programSize)\n                            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                            let _2 := sub(shl(64, 1), 1)\n                            if or(gt(newFreePtr, _2), lt(newFreePtr, _1))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            let _3 := 64\n                            mstore(_3, newFreePtr)\n                            codecopy(_1, programSize, argSize)\n                            if slt(sub(add(_1, argSize), _1), _3)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let value := mload(_1)\n                            let value_1 := mload(add(_1, 32))\n                            if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1))))\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let memPtr := mload(_3)\n                            finalize_allocation(memPtr)\n                            mstore(memPtr, 13)\n                            let _4 := add(memPtr, 32)\n                            mstore(_4, \"MerkleAirdrop\")\n                            let memPtr_1 := mload(_3)\n                            finalize_allocation(memPtr_1)\n                            mstore(memPtr_1, 1)\n                            let _5 := add(memPtr_1, 32)\n                            mstore(_5, \"1\")\n                            /// @src 47:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\"\n                            let _6 := fun_toShortStringWithFallback(memPtr)\n                            /// @src 47:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\"\n                            let _7 := 288\n                            mstore(_7, /** @src 47:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\" */ _6)\n                            /// @src 47:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\"\n                            let _8 := fun_toShortStringWithFallback_2443(memPtr_1)\n                            /// @src 47:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\"\n                            let _9 := 320\n                            mstore(_9, /** @src 47:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\" */ _8)\n                            /// @src 47:3542:3564  \"keccak256(bytes(name))\"\n                            let _10 := keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _4, mload(/** @src 47:3542:3564  \"keccak256(bytes(name))\" */ memPtr))\n                            /// @src 47:3528:3564  \"_hashedName = keccak256(bytes(name))\"\n                            mstore(224, /** @src 47:3542:3564  \"keccak256(bytes(name))\" */ _10)\n                            /// @src 47:3591:3616  \"keccak256(bytes(version))\"\n                            let _11 := keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _5, mload(/** @src 47:3591:3616  \"keccak256(bytes(version))\" */ memPtr_1))\n                            /// @src 47:3574:3616  \"_hashedVersion = keccak256(bytes(version))\"\n                            let _12 := 256\n                            mstore(_12, /** @src 47:3591:3616  \"keccak256(bytes(version))\" */ _11)\n                            /// @src 47:3627:3657  \"_cachedChainId = block.chainid\"\n                            mstore(160, /** @src 47:3644:3657  \"block.chainid\" */ chainid())\n                            /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let expr_mpos := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_3)\n                            /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let _13 := add(expr_mpos, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 32)\n                            /// @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                            mstore(_13, 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                            mstore(add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3), /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _10)\n                            mstore(add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), _11)\n                            mstore(add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 47:3644:3657  \"block.chainid\" */ chainid())\n                            /// @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                            mstore(add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:3627:3657  \"_cachedChainId = block.chainid\" */ 160), /** @src 47:4278:4282  \"this\" */ address())\n                            /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            mstore(expr_mpos, /** @src 47:3627:3657  \"_cachedChainId = block.chainid\" */ 160)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let newFreePtr_1 := add(expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, expr_mpos))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(_3, newFreePtr_1)\n                            /// @src 47:3667:3715  \"_cachedDomainSeparator = _buildDomainSeparator()\"\n                            mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128, /** @src 47:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _13, mload(/** @src 47:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos)))\n                            /// @src 47:3725:3752  \"_cachedThis = address(this)\"\n                            mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192, /** @src 47:4278:4282  \"this\" */ address())\n                            /// @src 58:1932:1957  \"i_merkleRoot = merkleRoot\"\n                            let _14 := 352\n                            mstore(_14, value)\n                            /// @src 58:1967:1982  \"i_token = token\"\n                            let _15 := 384\n                            mstore(_15, value_1)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let _16 := datasize(\"MerkleAirdrop_56377_deployed\")\n                            codecopy(newFreePtr_1, dataoffset(\"MerkleAirdrop_56377_deployed\"), _16)\n                            setimmutable(newFreePtr_1, \"50993\", mload(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            setimmutable(newFreePtr_1, \"50995\", mload(/** @src 47:3627:3657  \"_cachedChainId = block.chainid\" */ 160))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            setimmutable(newFreePtr_1, \"50997\", mload(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            setimmutable(newFreePtr_1, \"50999\", mload(/** @src 47:3528:3564  \"_hashedName = keccak256(bytes(name))\" */ 224))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            setimmutable(newFreePtr_1, \"51001\", mload(/** @src 47:3574:3616  \"_hashedVersion = keccak256(bytes(version))\" */ _12))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            setimmutable(newFreePtr_1, \"51004\", mload(/** @src 47:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\" */ _7))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            setimmutable(newFreePtr_1, \"51007\", mload(/** @src 47:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\" */ _9))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            setimmutable(newFreePtr_1, \"56097\", mload(/** @src 58:1932:1957  \"i_merkleRoot = merkleRoot\" */ _14))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            setimmutable(newFreePtr_1, \"56100\", mload(/** @src 58:1967:1982  \"i_token = token\" */ _15))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            return(newFreePtr_1, _16)\n                        }\n                        function finalize_allocation(memPtr)\n                        {\n                            let newFreePtr := add(memPtr, 64)\n                            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                        }\n                        /// @ast-id 49926 @src 43:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                        function fun_toShortStringWithFallback(var_value_mpos) -> var\n                        {\n                            /// @src 43:3037:3056  \"bytes(value).length\"\n                            let expr := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 43:3037:3049  \"bytes(value)\" */ var_value_mpos)\n                            /// @src 43:3059:3061  \"32\"\n                            let _1 := 0x20\n                            /// @src 43:3033:3248  \"if (bytes(value).length < 32) {...\"\n                            switch /** @src 43:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 43:3059:3061  \"32\" */ _1)\n                            case /** @src 43:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                if gt(expr, sub(shl(64, 1), 1))\n                                {\n                                    mstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0x24)\n                                }\n                                let _2 := sload(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let length := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let _3 := 1\n                                length := shr(_3, _2)\n                                let outOfPlaceEncoding := and(_2, _3)\n                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                if eq(outOfPlaceEncoding, lt(length, /** @src 43:3059:3061  \"32\" */ _1))\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                {\n                                    mstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x22)\n                                    revert(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0x24)\n                                }\n                                if gt(length, 31)\n                                {\n                                    mstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, 0x00)\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    let data := keccak256(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 43:3059:3061  \"32\" */ _1)\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    let _4 := add(data, shr(5, add(length, 31)))\n                                    let start := add(data, shr(5, add(expr, 31)))\n                                    for { } lt(start, _4) { start := add(start, _3) }\n                                    {\n                                        sstore(start, /** @src 47:3432:3445  \"_nameFallback\" */ 0x00)\n                                    }\n                                }\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let srcOffset := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                srcOffset := /** @src 43:3059:3061  \"32\" */ _1\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                switch gt(expr, 31)\n                                case 1 {\n                                    let loopEnd := and(expr, not(31))\n                                    mstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, 0x00)\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    let dstPtr := keccak256(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 43:3059:3061  \"32\" */ _1)\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    let i := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    for { }\n                                    lt(i, loopEnd)\n                                    {\n                                        i := add(i, /** @src 43:3059:3061  \"32\" */ _1)\n                                    }\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    {\n                                        sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                        dstPtr := add(dstPtr, _3)\n                                        srcOffset := add(srcOffset, /** @src 43:3059:3061  \"32\" */ _1)\n                                    }\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    if lt(loopEnd, expr)\n                                    {\n                                        let lastValue := mload(add(var_value_mpos, srcOffset))\n                                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                                    }\n                                    sstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(shl(_3, expr), _3))\n                                }\n                                default {\n                                    let value := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    if expr\n                                    {\n                                        value := mload(add(var_value_mpos, srcOffset))\n                                    }\n                                    sstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(_3, expr)))\n                                }\n                                /// @src 43:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                                var := /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                                /// @src 43:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                                leave\n                            }\n                            default /// @src 43:3033:3248  \"if (bytes(value).length < 32) {...\"\n                            {\n                                /// @src 43:1836:1908  \"if (bstr.length > 31) {...\"\n                                if /** @src 43:1840:1856  \"bstr.length > 31\" */ gt(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 43:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 43:1854:1856  \"31\" */ 0x1f)\n                                /// @src 43:1836:1908  \"if (bstr.length > 31) {...\"\n                                {\n                                    /// @src 43:1879:1897  \"StringTooLong(str)\"\n                                    let _5 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                                    /// @src 43:1879:1897  \"StringTooLong(str)\"\n                                    mstore(_5, shl(224, 0x305a27a9))\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    mstore(/** @src 43:1879:1897  \"StringTooLong(str)\" */ add(_5, 4), /** @src 43:3059:3061  \"32\" */ _1)\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    let length_1 := mload(var_value_mpos)\n                                    mstore(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 36), length_1)\n                                    let i_1 := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    for { }\n                                    lt(i_1, length_1)\n                                    {\n                                        i_1 := add(i_1, /** @src 43:3059:3061  \"32\" */ _1)\n                                    }\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    {\n                                        mstore(add(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 43:3059:3061  \"32\" */ _1)))\n                                    }\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    mstore(add(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_1), 68), /** @src 47:3432:3445  \"_nameFallback\" */ 0x00)\n                                    /// @src 43:1879:1897  \"StringTooLong(str)\"\n                                    revert(_5, add(sub(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(add(length_1, /** @src 43:1854:1856  \"31\" */ 0x1f), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ not(31))), /** @src 43:1879:1897  \"StringTooLong(str)\" */ _5), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 68))\n                                }\n                                /// @src 43:1957:1970  \"bytes32(bstr)\"\n                                let value_1 := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let length_2 := mload(var_value_mpos)\n                                value_1 := /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(var_value_mpos, /** @src 43:3059:3061  \"32\" */ _1))\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                if lt(length_2, /** @src 43:3059:3061  \"32\" */ _1)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                {\n                                    value_1 := and(value_1, shl(shl(3, sub(/** @src 43:3059:3061  \"32\" */ _1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_2)), not(0)))\n                                }\n                                /// @src 43:3077:3104  \"return toShortString(value)\"\n                                var := /** @src 43:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_2)\n                                /// @src 43:3077:3104  \"return toShortString(value)\"\n                                leave\n                            }\n                        }\n                        /// @ast-id 49926 @src 43:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                        function fun_toShortStringWithFallback_2443(var_value_mpos) -> var\n                        {\n                            /// @src 43:3037:3056  \"bytes(value).length\"\n                            let expr := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 43:3037:3049  \"bytes(value)\" */ var_value_mpos)\n                            /// @src 43:3059:3061  \"32\"\n                            let _1 := 0x20\n                            /// @src 43:3033:3248  \"if (bytes(value).length < 32) {...\"\n                            switch /** @src 43:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 43:3059:3061  \"32\" */ _1)\n                            case /** @src 43:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                if gt(expr, sub(shl(64, 1), 1))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                let _2 := 1\n                                let _3 := sload(_2)\n                                let length := /** @src -1:-1:-1 */ 0\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                length := shr(_2, _3)\n                                let outOfPlaceEncoding := and(_3, _2)\n                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                if eq(outOfPlaceEncoding, lt(length, /** @src 43:3059:3061  \"32\" */ _1))\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                {\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x22)\n                                    revert(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0x24)\n                                }\n                                if gt(length, 31)\n                                {\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _2)\n                                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 43:3059:3061  \"32\" */ _1)\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    let _4 := add(data, shr(5, add(length, 31)))\n                                    let start := add(data, shr(5, add(expr, 31)))\n                                    for { } lt(start, _4) { start := add(start, _2) }\n                                    {\n                                        sstore(start, /** @src -1:-1:-1 */ 0)\n                                    }\n                                }\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let srcOffset := /** @src -1:-1:-1 */ 0\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                srcOffset := /** @src 43:3059:3061  \"32\" */ _1\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                switch gt(expr, 31)\n                                case 1 {\n                                    let loopEnd := and(expr, not(31))\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _2)\n                                    let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 43:3059:3061  \"32\" */ _1)\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    let i := /** @src -1:-1:-1 */ 0\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    for { }\n                                    lt(i, loopEnd)\n                                    {\n                                        i := add(i, /** @src 43:3059:3061  \"32\" */ _1)\n                                    }\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    {\n                                        sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                        dstPtr := add(dstPtr, _2)\n                                        srcOffset := add(srcOffset, /** @src 43:3059:3061  \"32\" */ _1)\n                                    }\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    if lt(loopEnd, expr)\n                                    {\n                                        let lastValue := mload(add(var_value_mpos, srcOffset))\n                                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                                    }\n                                    sstore(_2, add(shl(_2, expr), _2))\n                                }\n                                default {\n                                    let value := /** @src -1:-1:-1 */ 0\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    if expr\n                                    {\n                                        value := mload(add(var_value_mpos, srcOffset))\n                                    }\n                                    sstore(_2, or(and(value, not(shr(shl(3, expr), not(0)))), shl(_2, expr)))\n                                }\n                                /// @src 43:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                                var := /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                                /// @src 43:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                                leave\n                            }\n                            default /// @src 43:3033:3248  \"if (bytes(value).length < 32) {...\"\n                            {\n                                /// @src 43:1836:1908  \"if (bstr.length > 31) {...\"\n                                if /** @src 43:1840:1856  \"bstr.length > 31\" */ gt(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 43:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 43:1854:1856  \"31\" */ 0x1f)\n                                /// @src 43:1836:1908  \"if (bstr.length > 31) {...\"\n                                {\n                                    /// @src 43:1879:1897  \"StringTooLong(str)\"\n                                    let _5 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                                    /// @src 43:1879:1897  \"StringTooLong(str)\"\n                                    mstore(_5, shl(224, 0x305a27a9))\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    mstore(/** @src 43:1879:1897  \"StringTooLong(str)\" */ add(_5, 4), /** @src 43:3059:3061  \"32\" */ _1)\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    let length_1 := mload(var_value_mpos)\n                                    mstore(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 36), length_1)\n                                    let i_1 := /** @src -1:-1:-1 */ 0\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    for { }\n                                    lt(i_1, length_1)\n                                    {\n                                        i_1 := add(i_1, /** @src 43:3059:3061  \"32\" */ _1)\n                                    }\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    {\n                                        mstore(add(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 43:3059:3061  \"32\" */ _1)))\n                                    }\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    mstore(add(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_1), 68), /** @src -1:-1:-1 */ 0)\n                                    /// @src 43:1879:1897  \"StringTooLong(str)\"\n                                    revert(_5, add(sub(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(add(length_1, /** @src 43:1854:1856  \"31\" */ 0x1f), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ not(31))), /** @src 43:1879:1897  \"StringTooLong(str)\" */ _5), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 68))\n                                }\n                                /// @src 43:1957:1970  \"bytes32(bstr)\"\n                                let value_1 := /** @src -1:-1:-1 */ 0\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let length_2 := mload(var_value_mpos)\n                                value_1 := /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(var_value_mpos, /** @src 43:3059:3061  \"32\" */ _1))\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                if lt(length_2, /** @src 43:3059:3061  \"32\" */ _1)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                {\n                                    value_1 := and(value_1, shl(shl(3, sub(/** @src 43:3059:3061  \"32\" */ _1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_2)), not(0)))\n                                }\n                                /// @src 43:3077:3104  \"return toShortString(value)\"\n                                var := /** @src 43:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_2)\n                                /// @src 43:3077:3104  \"return toShortString(value)\"\n                                leave\n                            }\n                        }\n                    }\n                    /// @use-src 38:\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 43:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 46:\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 47:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 48:\"lib/openzeppelin-contracts/contracts/utils/cryptography/Hashes.sol\", 49:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\", 50:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 58:\"src/Merkle-Airdrop.sol\"\n                    object \"MerkleAirdrop_56377_deployed\" {\n                        code {\n                            {\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let _1 := memoryguard(0x80)\n                                let _2 := 64\n                                mstore(_2, _1)\n                                let _3 := 4\n                                if iszero(lt(calldatasize(), _3))\n                                {\n                                    switch shr(224, calldataload(0))\n                                    case 0x1b2aa644 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 192) { revert(0, 0) }\n                                        let offset := calldataload(_3)\n                                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                                        let value0, value1 := abi_decode_array_bytes32_dyn_calldata(add(_3, offset), calldatasize())\n                                        let value := calldataload(36)\n                                        let _4 := sub(shl(160, 1), 1)\n                                        let _5 := and(value, _4)\n                                        if iszero(eq(value, _5)) { revert(0, 0) }\n                                        let value_1 := calldataload(68)\n                                        let value_2 := calldataload(100)\n                                        if iszero(eq(value_2, and(value_2, 0xff))) { revert(0, 0) }\n                                        mstore(0, _5)\n                                        mstore(32, /** @src 58:3287:3296  \"s_claimed\" */ 0x02)\n                                        /// @src 58:3283:3370  \"if (s_claimed[account]) {...\"\n                                        if /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(sload(keccak256(0, _2)), 0xff)\n                                        /// @src 58:3283:3370  \"if (s_claimed[account]) {...\"\n                                        {\n                                            /// @src 58:3328:3359  \"MerkleAirdrop__AlreadyClaimed()\"\n                                            mstore(_1, shl(224, 0x1ac2170b))\n                                            revert(_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3)\n                                        }\n                                        /// @src 58:4279:4313  \"ECDSA.tryRecover(message, v, r, s)\"\n                                        let expr_component, expr_component_1, expr_component_2 := fun_tryRecover(/** @src 58:3443:3471  \"_getMessage(account, amount)\" */ fun_getMessage(value, value_1), /** @src 58:4279:4313  \"ECDSA.tryRecover(message, v, r, s)\" */ value_2, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ calldataload(132), calldataload(164))\n                                        /// @src 58:3411:3548  \"if (!_isValidSignature(account, _getMessage(account, amount), v, r, s)) {...\"\n                                        if /** @src 58:3415:3481  \"!_isValidSignature(account, _getMessage(account, amount), v, r, s)\" */ iszero(/** @src 58:4330:4347  \"signer == account\" */ eq(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 58:4330:4347  \"signer == account\" */ expr_component, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _4), _5))\n                                        /// @src 58:3411:3548  \"if (!_isValidSignature(account, _getMessage(account, amount), v, r, s)) {...\"\n                                        {\n                                            /// @src 58:3504:3537  \"MerkleAirdrop__InvalidSignature()\"\n                                            let _6 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                            /// @src 58:3504:3537  \"MerkleAirdrop__InvalidSignature()\"\n                                            mstore(_6, shl(224, 0xab8b8565))\n                                            revert(_6, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3)\n                                        }\n                                        /// @src 58:3606:3633  \"abi.encode(account, amount)\"\n                                        let expr_mpos := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                        /// @src 58:3606:3633  \"abi.encode(account, amount)\"\n                                        let _7 := add(expr_mpos, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 32)\n                                        /// @src 58:3606:3633  \"abi.encode(account, amount)\"\n                                        let _8 := sub(abi_encode_address_uint256(_7, value, value_1), expr_mpos)\n                                        mstore(expr_mpos, add(_8, not(31)))\n                                        finalize_allocation(expr_mpos, _8)\n                                        /// @src 58:3596:3634  \"keccak256(abi.encode(account, amount))\"\n                                        let _9 := keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _7, mload(/** @src 58:3596:3634  \"keccak256(abi.encode(account, amount))\" */ expr_mpos))\n                                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                        let outPtr := mload(_2)\n                                        let _10 := add(outPtr, 32)\n                                        mstore(_10, _9)\n                                        mstore(outPtr, 32)\n                                        finalize_allocation_9021(outPtr)\n                                        /// @src 58:3646:3776  \"if (!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)) {...\"\n                                        if /** @src 58:3650:3702  \"!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ iszero(/** @src 58:3651:3702  \"MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ fun_verify(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ abi_decode_available_length_array_bytes32_dyn(/** @src 58:3651:3702  \"MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ value0, value1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ calldatasize()), /** @src 58:3683:3695  \"i_merkleRoot\" */ loadimmutable(\"56097\"), /** @src 58:3573:3636  \"keccak256(bytes.concat(keccak256(abi.encode(account, amount))))\" */ keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _10, mload(/** @src 58:3573:3636  \"keccak256(bytes.concat(keccak256(abi.encode(account, amount))))\" */ outPtr))))\n                                        /// @src 58:3646:3776  \"if (!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)) {...\"\n                                        {\n                                            /// @src 58:3725:3765  \"MerkleAirdrop__ClaimFailedInvalidProof()\"\n                                            let _11 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                            /// @src 58:3725:3765  \"MerkleAirdrop__ClaimFailedInvalidProof()\"\n                                            mstore(_11, shl(225, 0x751c01c5))\n                                            revert(_11, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3)\n                                        }\n                                        mstore(0, _5)\n                                        mstore(32, /** @src 58:3287:3296  \"s_claimed\" */ 0x02)\n                                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                        let dataSlot := keccak256(0, _2)\n                                        sstore(dataSlot, or(and(sload(dataSlot), not(255)), 1))\n                                        /// @src 58:3826:3855  \"AirdropClaim(account, amount)\"\n                                        log3(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0, 0, /** @src 58:3826:3855  \"AirdropClaim(account, amount)\" */ 0x0109d8fbd8363b83a5fa0c0f8dfbed54c793803139c404e89bf3697f66bdc505, _5, value_1)\n                                        /// @src 58:3906:3912  \"amount\"\n                                        fun_safeTransfer(/** @src 58:3888:3895  \"i_token\" */ loadimmutable(\"56100\"), /** @src 58:3906:3912  \"amount\" */ value, value_1)\n                                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                        return(0, 0)\n                                    }\n                                    case 0x1b93f66d {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                        mstore(32, /** @src 58:4845:4854  \"s_claimed\" */ 0x02)\n                                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                        let value_3 := and(sload(keccak256(0, _2)), 0xff)\n                                        let memPos := mload(_2)\n                                        mstore(memPos, iszero(iszero(value_3)))\n                                        return(memPos, 32)\n                                    }\n                                    case 0x21df0da7 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let memPos_1 := mload(_2)\n                                        mstore(memPos_1, and(/** @src 58:5052:5059  \"i_token\" */ loadimmutable(\"56100\"), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ sub(shl(160, 1), 1)))\n                                        return(memPos_1, 32)\n                                    }\n                                    case 0x32b61db9 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                        let offset_1 := calldataload(_3)\n                                        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                                        let value0_1, value1_1 := abi_decode_array_bytes32_dyn_calldata(add(_3, offset_1), calldatasize())\n                                        let value_4 := calldataload(36)\n                                        mstore(0, /** @src 58:2339:2349  \"msg.sender\" */ caller())\n                                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                        mstore(32, /** @src 58:2329:2338  \"s_claimed\" */ 0x02)\n                                        /// @src 58:2325:2415  \"if (s_claimed[msg.sender]) {...\"\n                                        if /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(sload(keccak256(0, _2)), 0xff)\n                                        /// @src 58:2325:2415  \"if (s_claimed[msg.sender]) {...\"\n                                        {\n                                            /// @src 58:2373:2404  \"MerkleAirdrop__AlreadyClaimed()\"\n                                            let _12 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                            /// @src 58:2373:2404  \"MerkleAirdrop__AlreadyClaimed()\"\n                                            mstore(_12, /** @src 58:3328:3359  \"MerkleAirdrop__AlreadyClaimed()\" */ shl(224, 0x1ac2170b))\n                                            /// @src 58:2373:2404  \"MerkleAirdrop__AlreadyClaimed()\"\n                                            revert(_12, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3)\n                                        }\n                                        /// @src 58:2757:2787  \"abi.encode(msg.sender, amount)\"\n                                        let expr_mpos_1 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                        /// @src 58:2757:2787  \"abi.encode(msg.sender, amount)\"\n                                        let _13 := add(expr_mpos_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 32)\n                                        /// @src 58:2757:2787  \"abi.encode(msg.sender, amount)\"\n                                        let _14 := sub(abi_encode_address_uint256(_13, /** @src 58:2339:2349  \"msg.sender\" */ caller(), /** @src 58:2757:2787  \"abi.encode(msg.sender, amount)\" */ value_4), expr_mpos_1)\n                                        mstore(expr_mpos_1, add(_14, /** @src 58:3606:3633  \"abi.encode(account, amount)\" */ not(31)))\n                                        /// @src 58:2757:2787  \"abi.encode(msg.sender, amount)\"\n                                        finalize_allocation(expr_mpos_1, _14)\n                                        /// @src 58:2747:2788  \"keccak256(abi.encode(msg.sender, amount))\"\n                                        let _15 := keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _13, mload(/** @src 58:2747:2788  \"keccak256(abi.encode(msg.sender, amount))\" */ expr_mpos_1))\n                                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                        let outPtr_1 := mload(_2)\n                                        let _16 := add(outPtr_1, 32)\n                                        mstore(_16, _15)\n                                        mstore(outPtr_1, 32)\n                                        finalize_allocation_9021(outPtr_1)\n                                        /// @src 58:2800:2930  \"if (!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)) {...\"\n                                        if /** @src 58:2804:2856  \"!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ iszero(/** @src 58:2805:2856  \"MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ fun_verify(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ abi_decode_available_length_array_bytes32_dyn(/** @src 58:2805:2856  \"MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ value0_1, value1_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ calldatasize()), /** @src 58:2837:2849  \"i_merkleRoot\" */ loadimmutable(\"56097\"), /** @src 58:2724:2790  \"keccak256(bytes.concat(keccak256(abi.encode(msg.sender, amount))))\" */ keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _16, mload(/** @src 58:2724:2790  \"keccak256(bytes.concat(keccak256(abi.encode(msg.sender, amount))))\" */ outPtr_1))))\n                                        /// @src 58:2800:2930  \"if (!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)) {...\"\n                                        {\n                                            /// @src 58:2879:2919  \"MerkleAirdrop__ClaimFailedInvalidProof()\"\n                                            let _17 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                            /// @src 58:2879:2919  \"MerkleAirdrop__ClaimFailedInvalidProof()\"\n                                            mstore(_17, /** @src 58:3725:3765  \"MerkleAirdrop__ClaimFailedInvalidProof()\" */ shl(225, 0x751c01c5))\n                                            /// @src 58:2879:2919  \"MerkleAirdrop__ClaimFailedInvalidProof()\"\n                                            revert(_17, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3)\n                                        }\n                                        mstore(0, /** @src 58:2339:2349  \"msg.sender\" */ caller())\n                                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                        mstore(32, /** @src 58:2329:2338  \"s_claimed\" */ 0x02)\n                                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                        let dataSlot_1 := keccak256(0, _2)\n                                        sstore(dataSlot_1, or(and(sload(dataSlot_1), not(255)), 1))\n                                        /// @src 58:2983:3015  \"AirdropClaim(msg.sender, amount)\"\n                                        log3(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0, 0, /** @src 58:2983:3015  \"AirdropClaim(msg.sender, amount)\" */ 0x0109d8fbd8363b83a5fa0c0f8dfbed54c793803139c404e89bf3697f66bdc505, /** @src 58:2339:2349  \"msg.sender\" */ caller(), /** @src 58:2983:3015  \"AirdropClaim(msg.sender, amount)\" */ value_4)\n                                        /// @src 58:3069:3075  \"amount\"\n                                        fun_safeTransfer(/** @src 58:3048:3055  \"i_token\" */ loadimmutable(\"56100\"), /** @src 58:2339:2349  \"msg.sender\" */ caller(), /** @src 58:3069:3075  \"amount\" */ value_4)\n                                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                        return(0, 0)\n                                    }\n                                    case 0x49590657 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let memPos_2 := mload(_2)\n                                        mstore(memPos_2, /** @src 58:4950:4962  \"i_merkleRoot\" */ loadimmutable(\"56097\"))\n                                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                        return(memPos_2, 32)\n                                    }\n                                    case 0x74b3c7ec {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                        mstore(32, /** @src 58:1610:1651  \"mapping(address => bool) public s_claimed\" */ 2)\n                                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                        let value_5 := and(sload(keccak256(0, _2)), 0xff)\n                                        let memPos_3 := mload(_2)\n                                        mstore(memPos_3, iszero(iszero(value_5)))\n                                        return(memPos_3, 32)\n                                    }\n                                    case 0x84b0196e {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        /// @src 47:6092:6140  \"return _name.toStringWithFallback(_nameFallback)\"\n                                        let var_mpos := /** @src 47:6099:6140  \"_name.toStringWithFallback(_nameFallback)\" */ fun_toStringWithFallback(/** @src 47:6099:6104  \"_name\" */ loadimmutable(\"51004\"))\n                                        /// @src 47:6547:6601  \"return _version.toStringWithFallback(_versionFallback)\"\n                                        let var_mpos_1 := /** @src 47:6554:6601  \"_version.toStringWithFallback(_versionFallback)\" */ fun_toStringWithFallback_5521(/** @src 47:6554:6562  \"_version\" */ loadimmutable(\"51007\"))\n                                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                        let memPtr := mload(_2)\n                                        let _18 := 0x20\n                                        let newFreePtr := add(memPtr, 0x20)\n                                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(_2, newFreePtr)\n                                        mstore(memPtr, 0)\n                                        let memPos_4 := mload(_2)\n                                        mstore(memPos_4, shl(248, 15))\n                                        mstore(add(memPos_4, 0x20), 224)\n                                        let tail := abi_encode_string(var_mpos, add(memPos_4, 224))\n                                        mstore(add(memPos_4, _2), sub(tail, memPos_4))\n                                        let tail_1 := abi_encode_string(var_mpos_1, tail)\n                                        mstore(add(memPos_4, 96), /** @src 47:5590:5603  \"block.chainid\" */ chainid())\n                                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                        mstore(add(memPos_4, 128), /** @src 47:5625:5629  \"this\" */ address())\n                                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                        mstore(add(memPos_4, 160), 0)\n                                        mstore(add(memPos_4, 192), sub(tail_1, memPos_4))\n                                        let pos := tail_1\n                                        let length := mload(memPtr)\n                                        mstore(tail_1, length)\n                                        pos := add(tail_1, 0x20)\n                                        let srcPtr := newFreePtr\n                                        let i := 0\n                                        for { }\n                                        lt(i, length)\n                                        {\n                                            i := add(i, /** @src 47:6584:6600  \"_versionFallback\" */ 0x01)\n                                        }\n                                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                        {\n                                            mstore(pos, mload(srcPtr))\n                                            pos := add(pos, _18)\n                                            srcPtr := add(srcPtr, _18)\n                                        }\n                                        return(memPos_4, sub(pos, memPos_4))\n                                    }\n                                    case 0x8d93d984 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                        let value0_2 := abi_decode_address()\n                                        let ret := fun_getMessage(value0_2, calldataload(36))\n                                        let memPos_5 := mload(_2)\n                                        mstore(memPos_5, ret)\n                                        return(memPos_5, 32)\n                                    }\n                                }\n                                revert(0, 0)\n                            }\n                            function abi_decode_array_bytes32_dyn_calldata(offset, end) -> arrayPos, length\n                            {\n                                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                                length := calldataload(offset)\n                                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                arrayPos := add(offset, 0x20)\n                                if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n                            }\n                            function abi_decode_address() -> value\n                            {\n                                value := calldataload(4)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            }\n                            function abi_encode_string(value, pos) -> end\n                            {\n                                let length := mload(value)\n                                mstore(pos, length)\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                for { } lt(i, length) { i := add(i, 0x20) }\n                                {\n                                    let _1 := 0x20\n                                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                                }\n                                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                end := add(add(pos, and(add(length, 31), /** @src 58:3606:3633  \"abi.encode(account, amount)\" */ not(31))), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0x20)\n                            }\n                            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n                            {\n                                tail := add(headStart, 64)\n                                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                                mstore(add(headStart, 32), value1)\n                            }\n                            function finalize_allocation_9021(memPtr)\n                            {\n                                let newFreePtr := add(memPtr, 64)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function finalize_allocation(memPtr, size)\n                            {\n                                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 58:3606:3633  \"abi.encode(account, amount)\" */ not(31)))\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function abi_decode_available_length_array_bytes32_dyn(offset, length, end) -> array\n                            {\n                                if gt(length, 0xffffffffffffffff)\n                                {\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0x24)\n                                }\n                                let _1 := shl(5, length)\n                                let _2 := 0x20\n                                let memPtr := mload(64)\n                                finalize_allocation(memPtr, add(_1, 0x20))\n                                array := memPtr\n                                let dst := memPtr\n                                mstore(memPtr, length)\n                                dst := add(memPtr, 0x20)\n                                let srcEnd := add(offset, _1)\n                                if gt(srcEnd, end)\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let src := offset\n                                for { } lt(src, srcEnd) { src := add(src, _2) }\n                                {\n                                    mstore(dst, calldataload(src))\n                                    dst := add(dst, _2)\n                                }\n                            }\n                            /// @ast-id 56345 @src 58:4361:4598  \"function _getMessage(address account, uint256 amount) public view returns (bytes32) {...\"\n                            function fun_getMessage(var_account, var_amount) -> var\n                            {\n                                /// @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\"\n                                let _1 := 64\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let memPtr := mload(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let newFreePtr := add(memPtr, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let _2 := 0xffffffffffffffff\n                                if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ newFreePtr)\n                                let _3 := sub(shl(160, 1), 1)\n                                /// @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\"\n                                mstore(memPtr, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ var_account, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3))\n                                /// @src 58:4531:4579  \"AirDropClaim({account: account, amount: amount})\"\n                                let _4 := add(memPtr, 32)\n                                /// @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\"\n                                mstore(_4, var_amount)\n                                /// @src 58:4502:4580  \"abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount}))\"\n                                let expr_56340_mpos := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1)\n                                /// @src 58:4502:4580  \"abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount}))\"\n                                let _5 := add(expr_56340_mpos, /** @src 58:4531:4579  \"AirDropClaim({account: account, amount: amount})\" */ 32)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                mstore(_5, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ 0xc0f4a2a1381428431909845939ce5eb5fbc52b85bd7e391f00f18deaafd74b06)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                mstore(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ add(/** @src 58:4502:4580  \"abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount}))\" */ expr_56340_mpos, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ mload(memPtr), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3))\n                                mstore(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ add(/** @src 58:4502:4580  \"abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount}))\" */ expr_56340_mpos, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ 96), mload(_4))\n                                /// @src 58:4502:4580  \"abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount}))\"\n                                mstore(expr_56340_mpos, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ 96)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let newFreePtr_1 := add(expr_56340_mpos, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ 128)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, expr_56340_mpos))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ newFreePtr_1)\n                                /// @src 58:4492:4581  \"keccak256(abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount})))\"\n                                let _6 := keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _5, mload(/** @src 58:4492:4581  \"keccak256(abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount})))\" */ expr_56340_mpos))\n                                /// @src 47:5053:5073  \"_domainSeparatorV4()\"\n                                let _7 := fun_domainSeparatorV4()\n                                /// @src 50:3515:3748  \"assembly {...\"\n                                let usr$ptr := mload(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1)\n                                /// @src 50:3515:3748  \"assembly {...\"\n                                mstore(usr$ptr, \"\\x19\\x01\")\n                                mstore(add(usr$ptr, 0x02), _7)\n                                mstore(add(usr$ptr, 0x22), _6)\n                                /// @src 58:4455:4591  \"return _hashTypedDataV4(...\"\n                                var := /** @src 50:3515:3748  \"assembly {...\" */ keccak256(usr$ptr, 0x42)\n                            }\n                            /// @ast-id 51268 @src 49:1303:1457  \"function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {...\"\n                            function fun_verify(var_proof_mpos, var_root, var_leaf) -> var\n                            {\n                                /// @src 49:2107:2134  \"bytes32 computedHash = leaf\"\n                                let var_computedHash := var_leaf\n                                /// @src 49:2149:2162  \"uint256 i = 0\"\n                                let var_i := /** @src -1:-1:-1 */ 0\n                                /// @src 49:2144:2278  \"for (uint256 i = 0; i < proof.length; i++) {...\"\n                                for { }\n                                /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 1\n                                /// @src 49:2149:2162  \"uint256 i = 0\"\n                                {\n                                    /// @src 49:2182:2185  \"i++\"\n                                    var_i := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(/** @src 49:2182:2185  \"i++\" */ var_i, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 1)\n                                }\n                                /// @src 49:2182:2185  \"i++\"\n                                {\n                                    /// @src 49:2164:2180  \"i < proof.length\"\n                                    if iszero(lt(var_i, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 49:2168:2180  \"proof.length\" */ var_proof_mpos)))\n                                    /// @src 49:2164:2180  \"i < proof.length\"\n                                    { break }\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    let _1 := 32\n                                    let _2 := mload(add(add(var_proof_mpos, shl(5, var_i)), _1))\n                                    /// @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\"\n                                    let expr := /** @src -1:-1:-1 */ 0\n                                    /// @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\"\n                                    switch /** @src 48:494:499  \"a < b\" */ lt(var_computedHash, _2)\n                                    case /** @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\" */ 0 {\n                                        /// @src 48:823:942  \"assembly {...\"\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 48:823:942  \"assembly {...\" */ _2)\n                                        mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _1, /** @src 48:823:942  \"assembly {...\" */ var_computedHash)\n                                        /// @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\"\n                                        expr := /** @src 48:823:942  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 48:823:942  \"assembly {...\" */ 0x40)\n                                    }\n                                    default /// @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\"\n                                    {\n                                        /// @src 48:823:942  \"assembly {...\"\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 48:823:942  \"assembly {...\" */ var_computedHash)\n                                        mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _1, /** @src 48:823:942  \"assembly {...\" */ _2)\n                                        /// @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\"\n                                        expr := /** @src 48:823:942  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 48:823:942  \"assembly {...\" */ 0x40)\n                                    }\n                                    /// @src 49:2201:2267  \"computedHash = Hashes.commutativeKeccak256(computedHash, proof[i])\"\n                                    var_computedHash := expr\n                                }\n                                /// @src 49:1410:1450  \"return processProof(proof, leaf) == root\"\n                                var := /** @src 49:1417:1450  \"processProof(proof, leaf) == root\" */ eq(var_computedHash, var_root)\n                            }\n                            /// @ast-id 49041 @src 38:1271:1431  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n                            function fun_safeTransfer(var_token_address, var_to, var_value)\n                            {\n                                /// @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let expr_49037_mpos := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                                /// @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let _1 := add(expr_49037_mpos, 0x20)\n                                mstore(_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0xa9059cbb))\n                                /// @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let _2 := sub(abi_encode_address_uint256(add(expr_49037_mpos, 36), var_to, var_value), expr_49037_mpos)\n                                mstore(expr_49037_mpos, add(_2, /** @src 58:3606:3633  \"abi.encode(account, amount)\" */ not(31)))\n                                /// @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\"\n                                finalize_allocation(expr_49037_mpos, _2)\n                                /// @src 38:6687:7108  \"assembly (\\\"memory-safe\\\") {...\"\n                                if iszero(call(gas(), var_token_address, /** @src -1:-1:-1 */ 0, /** @src 38:6687:7108  \"assembly (\\\"memory-safe\\\") {...\" */ _1, mload(expr_49037_mpos), /** @src -1:-1:-1 */ 0, /** @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20))\n                                /// @src 38:6687:7108  \"assembly (\\\"memory-safe\\\") {...\"\n                                {\n                                    let usr$ptr := mload(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 64)\n                                    /// @src 38:6687:7108  \"assembly (\\\"memory-safe\\\") {...\"\n                                    returndatacopy(usr$ptr, /** @src -1:-1:-1 */ 0, /** @src 38:6687:7108  \"assembly (\\\"memory-safe\\\") {...\" */ returndatasize())\n                                    revert(usr$ptr, returndatasize())\n                                }\n                                let var_returnSize := returndatasize()\n                                let var_returnValue := mload(/** @src -1:-1:-1 */ 0)\n                                /// @src 38:7122:7190  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                                let expr := /** @src -1:-1:-1 */ 0\n                                /// @src 38:7122:7190  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                                switch /** @src 38:7122:7137  \"returnSize == 0\" */ iszero(var_returnSize)\n                                case /** @src 38:7122:7190  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\" */ 0 {\n                                    expr := /** @src 38:7174:7190  \"returnValue != 1\" */ iszero(eq(var_returnValue, /** @src 38:7189:7190  \"1\" */ 0x01))\n                                }\n                                default /// @src 38:7122:7190  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                                {\n                                    expr := /** @src 38:7140:7171  \"address(token).code.length == 0\" */ iszero(/** @src 38:7140:7166  \"address(token).code.length\" */ extcodesize(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 38:7140:7154  \"address(token)\" */ var_token_address, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ sub(shl(160, 1), 1))))\n                                }\n                                /// @src 38:7118:7264  \"if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {...\"\n                                if expr\n                                {\n                                    /// @src 38:7213:7253  \"SafeERC20FailedOperation(address(token))\"\n                                    let _3 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                                    /// @src 38:7213:7253  \"SafeERC20FailedOperation(address(token))\"\n                                    mstore(_3, shl(224, 0x5274afe7))\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    mstore(/** @src 38:7213:7253  \"SafeERC20FailedOperation(address(token))\" */ add(_3, 4), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 38:7238:7252  \"address(token)\" */ var_token_address, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ sub(shl(160, 1), 1)))\n                                    /// @src 38:7213:7253  \"SafeERC20FailedOperation(address(token))\"\n                                    revert(_3, /** @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                                }\n                            }\n                            /// @ast-id 50886 @src 46:5140:6670  \"function tryRecover(...\"\n                            function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n                            {\n                                /// @src 46:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                                if /** @src 46:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 46:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                                /// @src 46:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                                {\n                                    /// @src 46:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                                    var := /** @src 46:6297:6298  \"0\" */ 0x00\n                                    /// @src 46:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                                    var_1 := /** @src 46:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                                    /// @src 46:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                                    var_2 := var_s\n                                    leave\n                                }\n                                /// @src 46:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                let _1 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                                mstore(_1, var_hash)\n                                mstore(add(_1, 32), and(var_v, 0xff))\n                                mstore(add(_1, 64), var_r)\n                                mstore(add(_1, 96), var_s)\n                                /// @src 46:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                mstore(/** @src -1:-1:-1 */ 0, 0)\n                                /// @src 46:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                if iszero(staticcall(gas(), 1, _1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 128, /** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 32))\n                                /// @src 46:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                {\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    let pos := mload(64)\n                                    returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 46:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                let _2 := mload(/** @src -1:-1:-1 */ 0)\n                                /// @src 46:6491:6604  \"if (signer == address(0)) {...\"\n                                if /** @src 46:6495:6515  \"signer == address(0)\" */ iszero(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 46:6495:6515  \"signer == address(0)\" */ _2, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ sub(shl(160, 1), 1)))\n                                /// @src 46:6491:6604  \"if (signer == address(0)) {...\"\n                                {\n                                    /// @src 46:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    var := /** @src -1:-1:-1 */ 0\n                                    /// @src 46:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    var_1 := /** @src 46:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                                    /// @src 46:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    var_2 := /** @src -1:-1:-1 */ 0\n                                    /// @src 46:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    leave\n                                }\n                                /// @src 46:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                                var := _2\n                                var_1 := /** @src -1:-1:-1 */ 0\n                                /// @src 46:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                                var_2 := /** @src -1:-1:-1 */ 0\n                            }\n                            /// @ast-id 49953 @src 43:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                            function fun_toStringWithFallback(var_value) -> var__mpos\n                            {\n                                /// @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                                switch /** @src 43:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                                case /** @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                                    /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let memPtr := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                                    /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let ret := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0\n                                    /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let slotValue := sload(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0)\n                                    /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let length := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0\n                                    /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let _1 := 1\n                                    length := shr(1, slotValue)\n                                    let outOfPlaceEncoding := and(slotValue, 1)\n                                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                    let _2 := 32\n                                    if eq(outOfPlaceEncoding, lt(length, _2))\n                                    {\n                                        mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0, shl(224, 0x4e487b71))\n                                        /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        mstore(4, 0x22)\n                                        revert(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0x24)\n                                    }\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    mstore(memPtr, length)\n                                    /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    switch outOfPlaceEncoding\n                                    case 0 {\n                                        mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ _2), and(slotValue, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ not(255)))\n                                        /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        ret := add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), _2)\n                                    }\n                                    case 1 {\n                                        mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0, 0)\n                                        /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                                        let i := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0\n                                        /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        for { } lt(i, length) { i := add(i, _2) }\n                                        {\n                                            mstore(add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2), sload(dataPos))\n                                            dataPos := add(dataPos, _1)\n                                        }\n                                        ret := add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2)\n                                    }\n                                    finalize_allocation(memPtr, sub(ret, memPtr))\n                                    /// @src 43:3623:3635  \"return store\"\n                                    var__mpos := memPtr\n                                    leave\n                                }\n                                default /// @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                                {\n                                    /// @src 43:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                                    let expr := and(var_value, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                                    /// @src 43:2702:2771  \"if (result > 31) {...\"\n                                    if /** @src 43:2706:2717  \"result > 31\" */ gt(expr, /** @src 43:2715:2717  \"31\" */ 0x1f)\n                                    /// @src 43:2702:2771  \"if (result > 31) {...\"\n                                    {\n                                        /// @src 43:2740:2760  \"InvalidShortString()\"\n                                        let _3 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                                        /// @src 43:2740:2760  \"InvalidShortString()\"\n                                        mstore(_3, shl(226, 0x2cd44ac3))\n                                        revert(_3, 4)\n                                    }\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    let memPtr_1 := mload(64)\n                                    finalize_allocation_9021(memPtr_1)\n                                    /// @src 43:2367:2457  \"assembly {...\"\n                                    mstore(memPtr_1, expr)\n                                    mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(memPtr_1, /** @src 43:2311:2313  \"32\" */ 0x20), /** @src 43:2367:2457  \"assembly {...\" */ var_value)\n                                    /// @src 43:3570:3592  \"return toString(value)\"\n                                    var__mpos := memPtr_1\n                                    leave\n                                }\n                            }\n                            /// @ast-id 49953 @src 43:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                            function fun_toStringWithFallback_5521(var_value) -> var_mpos\n                            {\n                                /// @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                                switch /** @src 43:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                                case /** @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                                    /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let memPtr := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                                    /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let ret := /** @src -1:-1:-1 */ 0\n                                    /// @src 47:6584:6600  \"_versionFallback\"\n                                    let _1 := 0x01\n                                    /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let slotValue := sload(/** @src 47:6584:6600  \"_versionFallback\" */ 0x01)\n                                    /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let length := /** @src -1:-1:-1 */ 0\n                                    /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    length := shr(/** @src 47:6584:6600  \"_versionFallback\" */ 0x01, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ slotValue)\n                                    let outOfPlaceEncoding := and(slotValue, /** @src 47:6584:6600  \"_versionFallback\" */ 0x01)\n                                    /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                    let _2 := 32\n                                    if eq(outOfPlaceEncoding, lt(length, _2))\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0x4e487b71))\n                                        /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        mstore(4, 0x22)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0x24)\n                                    }\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    mstore(memPtr, length)\n                                    /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    switch outOfPlaceEncoding\n                                    case 0 {\n                                        mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ _2), and(slotValue, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ not(255)))\n                                        /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        ret := add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), _2)\n                                    }\n                                    case 1 {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 47:6584:6600  \"_versionFallback\" */ 0x01)\n                                        /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        let dataPos := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                                        let i := /** @src -1:-1:-1 */ 0\n                                        /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        for { } lt(i, length) { i := add(i, _2) }\n                                        {\n                                            mstore(add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2), sload(dataPos))\n                                            dataPos := add(dataPos, /** @src 47:6584:6600  \"_versionFallback\" */ _1)\n                                        }\n                                        /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        ret := add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2)\n                                    }\n                                    finalize_allocation(memPtr, sub(ret, memPtr))\n                                    /// @src 43:3623:3635  \"return store\"\n                                    var_mpos := memPtr\n                                    leave\n                                }\n                                default /// @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                                {\n                                    /// @src 43:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                                    let expr := and(var_value, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                                    /// @src 43:2702:2771  \"if (result > 31) {...\"\n                                    if /** @src 43:2706:2717  \"result > 31\" */ gt(expr, /** @src 43:2715:2717  \"31\" */ 0x1f)\n                                    /// @src 43:2702:2771  \"if (result > 31) {...\"\n                                    {\n                                        /// @src 43:2740:2760  \"InvalidShortString()\"\n                                        let _3 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                                        /// @src 43:2740:2760  \"InvalidShortString()\"\n                                        mstore(_3, shl(226, 0x2cd44ac3))\n                                        revert(_3, 4)\n                                    }\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    let memPtr_1 := mload(64)\n                                    finalize_allocation_9021(memPtr_1)\n                                    /// @src 43:2367:2457  \"assembly {...\"\n                                    mstore(memPtr_1, expr)\n                                    mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(memPtr_1, /** @src 43:2311:2313  \"32\" */ 0x20), /** @src 43:2367:2457  \"assembly {...\" */ var_value)\n                                    /// @src 43:3570:3592  \"return toString(value)\"\n                                    var_mpos := memPtr_1\n                                    leave\n                                }\n                            }\n                            /// @ast-id 51095 @src 47:3845:4107  \"function _domainSeparatorV4() internal view returns (bytes32) {...\"\n                            function fun_domainSeparatorV4() -> var\n                            {\n                                /// @src 47:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                                let expr := /** @src 47:3921:3949  \"address(this) == _cachedThis\" */ eq(/** @src 47:3929:3933  \"this\" */ address(), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 47:3938:3949  \"_cachedThis\" */ loadimmutable(\"50997\"), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ sub(shl(160, 1), 1)))\n                                /// @src 47:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                                if expr\n                                {\n                                    expr := /** @src 47:3953:3984  \"block.chainid == _cachedChainId\" */ eq(/** @src 47:3953:3966  \"block.chainid\" */ chainid(), /** @src 47:3970:3984  \"_cachedChainId\" */ loadimmutable(\"50995\"))\n                                }\n                                /// @src 47:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                                switch expr\n                                case 0 {\n                                    /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                                    let expr_mpos := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                                    /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                                    let _1 := add(expr_mpos, 0x20)\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    mstore(_1, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 64), /** @src 47:4226:4237  \"_hashedName\" */ loadimmutable(\"50999\"))\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 47:4239:4253  \"_hashedVersion\" */ loadimmutable(\"51001\"))\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 47:4255:4268  \"block.chainid\" */ chainid())\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 47:3929:3933  \"this\" */ address())\n                                    /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                                    mstore(expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    let newFreePtr := add(expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    mstore(64, newFreePtr)\n                                    /// @src 47:4060:4090  \"return _buildDomainSeparator()\"\n                                    var := /** @src 47:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _1, mload(/** @src 47:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos))\n                                    /// @src 47:4060:4090  \"return _buildDomainSeparator()\"\n                                    leave\n                                }\n                                default /// @src 47:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                                {\n                                    /// @src 47:4000:4029  \"return _cachedDomainSeparator\"\n                                    var := /** @src 47:4007:4029  \"_cachedDomainSeparator\" */ loadimmutable(\"50993\")\n                                    /// @src 47:4000:4029  \"return _cachedDomainSeparator\"\n                                    leave\n                                }\n                            }\n                        }\n                        data \".metadata\" hex\"a164736f6c6343000818000a\"\n                    }\n                }\n                /// @use-src 29:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 34:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 35:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 36:\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 37:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 40:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 59:\"src/PranavCoin.sol\"\n                object \"PranavCoin_56415\" {\n                    code {\n                        {\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            let _1 := memoryguard(0x80)\n                            if callvalue() { revert(0, 0) }\n                            let _2 := 64\n                            let newFreePtr := add(_1, _2)\n                            let _3 := sub(shl(64, 1), 1)\n                            if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                            }\n                            mstore(_2, newFreePtr)\n                            mstore(_1, 10)\n                            let _4 := 32\n                            mstore(add(_1, _4), \"PranavCoin\")\n                            let memPtr := mload(_2)\n                            let newFreePtr_1 := add(memPtr, _2)\n                            if or(gt(newFreePtr_1, _3), lt(newFreePtr_1, memPtr))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                            }\n                            mstore(_2, newFreePtr_1)\n                            let _5 := 3\n                            mstore(memPtr, _5)\n                            mstore(add(memPtr, _4), \"PRC\")\n                            let newLen := mload(_1)\n                            if gt(newLen, _3)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                            }\n                            let _6 := sload(_5)\n                            let length := /** @src -1:-1:-1 */ 0\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            let _7 := 1\n                            length := shr(_7, _6)\n                            let outOfPlaceEncoding := and(_6, _7)\n                            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                            if eq(outOfPlaceEncoding, lt(length, _4))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x22)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                            }\n                            let _8 := 31\n                            if gt(length, _8)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _5)\n                                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                                let deleteStart := add(data, shr(5, add(newLen, _8)))\n                                if lt(newLen, _4) { deleteStart := data }\n                                let _9 := add(data, shr(5, add(length, _8)))\n                                let start := deleteStart\n                                for { } lt(start, _9) { start := add(start, _7) }\n                                {\n                                    sstore(start, /** @src -1:-1:-1 */ 0)\n                                }\n                            }\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            let srcOffset := /** @src -1:-1:-1 */ 0\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            srcOffset := _4\n                            switch gt(newLen, _8)\n                            case 1 {\n                                let loopEnd := and(newLen, not(31))\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _5)\n                                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                for { } lt(i, loopEnd) { i := add(i, _4) }\n                                {\n                                    sstore(dstPtr, mload(add(_1, srcOffset)))\n                                    dstPtr := add(dstPtr, _7)\n                                    srcOffset := add(srcOffset, _4)\n                                }\n                                if lt(loopEnd, newLen)\n                                {\n                                    let lastValue := mload(add(_1, srcOffset))\n                                    sstore(dstPtr, and(lastValue, not(shr(and(shl(_5, newLen), 248), not(0)))))\n                                }\n                                sstore(_5, add(shl(_7, newLen), _7))\n                            }\n                            default {\n                                let value := /** @src -1:-1:-1 */ 0\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                if newLen\n                                {\n                                    value := mload(add(_1, srcOffset))\n                                }\n                                sstore(_5, or(and(value, not(shr(shl(_5, newLen), not(0)))), shl(_7, newLen)))\n                            }\n                            let newLen_1 := mload(memPtr)\n                            if gt(newLen_1, _3)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                                mstore(/** @src 35:1690:1707  \"_symbol = symbol_\" */ 0x04, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                            }\n                            /// @src 35:1690:1707  \"_symbol = symbol_\"\n                            let _10 := 0x04\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            let _11 := sload(/** @src 35:1690:1707  \"_symbol = symbol_\" */ _10)\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            let length_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            length_1 := shr(_7, _11)\n                            let outOfPlaceEncoding_1 := and(_11, _7)\n                            if iszero(outOfPlaceEncoding_1)\n                            {\n                                length_1 := and(length_1, 0x7f)\n                            }\n                            if eq(outOfPlaceEncoding_1, lt(length_1, _4))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                                mstore(/** @src 35:1690:1707  \"_symbol = symbol_\" */ _10, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x22)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                            }\n                            if gt(length_1, _8)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 35:1690:1707  \"_symbol = symbol_\" */ _10)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _8)))\n                                if lt(newLen_1, _4) { deleteStart_1 := data_1 }\n                                let _12 := add(data_1, shr(5, add(length_1, _8)))\n                                let start_1 := deleteStart_1\n                                for { } lt(start_1, _12) { start_1 := add(start_1, _7) }\n                                {\n                                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                                }\n                            }\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            srcOffset_1 := _4\n                            switch gt(newLen_1, _8)\n                            case 1 {\n                                let loopEnd_1 := and(newLen_1, not(31))\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 35:1690:1707  \"_symbol = symbol_\" */ _10)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                                let i_1 := /** @src -1:-1:-1 */ 0\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _4) }\n                                {\n                                    sstore(dstPtr_1, mload(add(memPtr, srcOffset_1)))\n                                    dstPtr_1 := add(dstPtr_1, _7)\n                                    srcOffset_1 := add(srcOffset_1, _4)\n                                }\n                                if lt(loopEnd_1, newLen_1)\n                                {\n                                    let lastValue_1 := mload(add(memPtr, srcOffset_1))\n                                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(_5, newLen_1), 248), not(0)))))\n                                }\n                                sstore(/** @src 35:1690:1707  \"_symbol = symbol_\" */ _10, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ add(shl(_7, newLen_1), _7))\n                            }\n                            default {\n                                let value_1 := /** @src -1:-1:-1 */ 0\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                if newLen_1\n                                {\n                                    value_1 := mload(add(memPtr, srcOffset_1))\n                                }\n                                sstore(/** @src 35:1690:1707  \"_symbol = symbol_\" */ _10, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ or(and(value_1, not(shr(shl(_5, newLen_1), not(0)))), shl(_7, newLen_1)))\n                            }\n                            /// @src 29:1269:1364  \"if (initialOwner == address(0)) {...\"\n                            if /** @src 29:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 59:288:298  \"msg.sender\" */ caller())\n                            /// @src 29:1269:1364  \"if (initialOwner == address(0)) {...\"\n                            {\n                                /// @src 29:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                                let _13 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                /// @src 29:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                                mstore(_13, shl(224, 0x1e4fbdf7))\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                mstore(/** @src 29:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(_13, /** @src 35:1690:1707  \"_symbol = symbol_\" */ _10), /** @src -1:-1:-1 */ 0)\n                                /// @src 29:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                                revert(_13, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                            }\n                            let _14 := sload(/** @src 29:3004:3010  \"_owner\" */ 0x05)\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            sstore(/** @src 29:3004:3010  \"_owner\" */ 0x05, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ or(and(_14, not(sub(shl(160, 1), 1))), /** @src 59:288:298  \"msg.sender\" */ caller()))\n                            /// @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                            let _15 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                            /// @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ and(_14, sub(shl(160, 1), 1)), /** @src 59:288:298  \"msg.sender\" */ caller())\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            let _16 := datasize(\"PranavCoin_56415_deployed\")\n                            codecopy(_15, dataoffset(\"PranavCoin_56415_deployed\"), _16)\n                            return(_15, _16)\n                        }\n                    }\n                    /// @use-src 29:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 35:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 40:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 59:\"src/PranavCoin.sol\"\n                    object \"PranavCoin_56415_deployed\" {\n                        code {\n                            {\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let _1 := memoryguard(0x80)\n                                let _2 := 64\n                                mstore(_2, _1)\n                                let _3 := 4\n                                if iszero(lt(calldatasize(), _3))\n                                {\n                                    switch shr(224, calldataload(0))\n                                    case 0x06fdde03 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let ret := 0\n                                        let slotValue := sload(/** @src 35:1856:1861  \"_name\" */ 0x03)\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        let length := 0\n                                        let _4 := 1\n                                        length := shr(1, slotValue)\n                                        let outOfPlaceEncoding := and(slotValue, 1)\n                                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                        let _5 := 32\n                                        if eq(outOfPlaceEncoding, lt(length, _5))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x22)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(_1, length)\n                                        switch outOfPlaceEncoding\n                                        case 0 {\n                                            mstore(add(_1, _5), and(slotValue, not(255)))\n                                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _5)\n                                        }\n                                        case 1 {\n                                            mstore(0, /** @src 35:1856:1861  \"_name\" */ 0x03)\n                                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                                            let i := 0\n                                            for { } lt(i, length) { i := add(i, _5) }\n                                            {\n                                                mstore(add(add(_1, i), _5), sload(dataPos))\n                                                dataPos := add(dataPos, _4)\n                                            }\n                                            ret := add(add(_1, i), _5)\n                                        }\n                                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(_2, newFreePtr)\n                                        return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                                    }\n                                    case 0x095ea7b3 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                        let value0 := abi_decode_address()\n                                        let _6 := calldataload(36)\n                                        /// @src 35:9809:9898  \"if (owner == address(0)) {...\"\n                                        if /** @src 35:9813:9832  \"owner == address(0)\" */ iszero(/** @src 40:735:745  \"msg.sender\" */ caller())\n                                        /// @src 35:9809:9898  \"if (owner == address(0)) {...\"\n                                        {\n                                            /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                            let _7 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                            /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                            mstore(_7, shl(224, 0xe602df05))\n                                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                            mstore(/** @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\" */ add(_7, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                            /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                            revert(_7, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                        }\n                                        let _8 := and(/** @src 35:9911:9932  \"spender == address(0)\" */ value0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                        /// @src 35:9907:9997  \"if (spender == address(0)) {...\"\n                                        if /** @src 35:9911:9932  \"spender == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _8)\n                                        /// @src 35:9907:9997  \"if (spender == address(0)) {...\"\n                                        {\n                                            /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                            let _9 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                            /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                            mstore(_9, shl(225, 0x4a1406b1))\n                                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                            mstore(/** @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\" */ add(_9, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                            /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                            revert(_9, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                        }\n                                        mstore(0, /** @src 40:735:745  \"msg.sender\" */ caller())\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        mstore(0x20, /** @src 35:8842:8846  \"true\" */ 0x01)\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        let _10 := keccak256(0, _2)\n                                        mstore(0, _8)\n                                        mstore(0x20, _10)\n                                        sstore(keccak256(0, _2), _6)\n                                        /// @src 35:10085:10116  \"Approval(owner, spender, value)\"\n                                        let _11 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                        mstore(_11, _6)\n                                        /// @src 35:10085:10116  \"Approval(owner, spender, value)\"\n                                        log3(_11, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x20, /** @src 35:10085:10116  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 40:735:745  \"msg.sender\" */ caller(), /** @src 35:10085:10116  \"Approval(owner, spender, value)\" */ _8)\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        let memPos := mload(_2)\n                                        mstore(memPos, /** @src 35:8842:8846  \"true\" */ 0x01)\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        return(memPos, 0x20)\n                                    }\n                                    case 0x18160ddd {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let _12 := sload(/** @src 35:2927:2939  \"_totalSupply\" */ 0x02)\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        let memPos_1 := mload(_2)\n                                        mstore(memPos_1, _12)\n                                        return(memPos_1, 32)\n                                    }\n                                    case 0x23b872dd {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                                        let value0_1 := abi_decode_address()\n                                        let value1 := abi_decode_address_4059()\n                                        let value := calldataload(68)\n                                        let _13 := and(value0_1, sub(shl(160, 1), 1))\n                                        mstore(0, _13)\n                                        mstore(32, 1)\n                                        let _14 := keccak256(0, _2)\n                                        mstore(0, /** @src 40:735:745  \"msg.sender\" */ caller())\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        mstore(32, _14)\n                                        let _15 := sload(keccak256(0, _2))\n                                        /// @src 35:10576:10886  \"if (currentAllowance != type(uint256).max) {...\"\n                                        if /** @src 35:10580:10617  \"currentAllowance != type(uint256).max\" */ iszero(eq(_15, /** @src 35:10600:10617  \"type(uint256).max\" */ not(0)))\n                                        /// @src 35:10576:10886  \"if (currentAllowance != type(uint256).max) {...\"\n                                        {\n                                            /// @src 35:10633:10763  \"if (currentAllowance < value) {...\"\n                                            if /** @src 35:10637:10661  \"currentAllowance < value\" */ lt(_15, value)\n                                            /// @src 35:10633:10763  \"if (currentAllowance < value) {...\"\n                                            {\n                                                /// @src 35:10688:10748  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                                let _16 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                                /// @src 35:10688:10748  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                                mstore(_16, shl(225, 0x7dc7a0d9))\n                                                revert(_16, sub(abi_encode_address_uint256_uint256(add(_16, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), /** @src 40:735:745  \"msg.sender\" */ caller(), /** @src 35:10688:10748  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _15, value), _16))\n                                            }\n                                            /// @src 35:9809:9898  \"if (owner == address(0)) {...\"\n                                            if /** @src 35:9813:9832  \"owner == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _13)\n                                            /// @src 35:9809:9898  \"if (owner == address(0)) {...\"\n                                            {\n                                                /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                                let _17 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                                /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                                mstore(_17, shl(224, 0xe602df05))\n                                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                                mstore(/** @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\" */ add(_17, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                                /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                                revert(_17, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                            }\n                                            /// @src 35:9907:9997  \"if (spender == address(0)) {...\"\n                                            if /** @src 35:9911:9932  \"spender == address(0)\" */ iszero(/** @src 40:735:745  \"msg.sender\" */ caller())\n                                            /// @src 35:9907:9997  \"if (spender == address(0)) {...\"\n                                            {\n                                                /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                                let _18 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                                /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                                mstore(_18, shl(225, 0x4a1406b1))\n                                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                                mstore(/** @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\" */ add(_18, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                                /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                                revert(_18, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                            }\n                                            mstore(0, _13)\n                                            mstore(32, 1)\n                                            let _19 := keccak256(0, _2)\n                                            mstore(0, /** @src 40:735:745  \"msg.sender\" */ caller())\n                                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                            mstore(32, _19)\n                                            sstore(keccak256(0, _2), sub(/** @src 35:10829:10853  \"currentAllowance - value\" */ _15, value))\n                                        }\n                                        /// @src 35:4986:4991  \"value\"\n                                        fun_transfer(value0_1, value1, value)\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        let memPos_2 := mload(_2)\n                                        mstore(memPos_2, 1)\n                                        return(memPos_2, 32)\n                                    }\n                                    case 0x313ce567 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let memPos_3 := mload(_2)\n                                        mstore(memPos_3, /** @src 35:2780:2782  \"18\" */ 0x12)\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        return(memPos_3, 32)\n                                    }\n                                    case 0x40c10f19 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                        let value0_2 := abi_decode_address()\n                                        let value_1 := calldataload(36)\n                                        /// @src 29:1500:1562  \"modifier onlyOwner() {...\"\n                                        fun_checkOwner()\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        let _20 := and(/** @src 35:7528:7549  \"account == address(0)\" */ value0_2, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                        /// @src 35:7524:7615  \"if (account == address(0)) {...\"\n                                        if /** @src 35:7528:7549  \"account == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _20)\n                                        /// @src 35:7524:7615  \"if (account == address(0)) {...\"\n                                        {\n                                            /// @src 35:7572:7604  \"ERC20InvalidReceiver(address(0))\"\n                                            let _21 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                            /// @src 35:7572:7604  \"ERC20InvalidReceiver(address(0))\"\n                                            mstore(_21, shl(224, 0xec442f05))\n                                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                            mstore(/** @src 35:7572:7604  \"ERC20InvalidReceiver(address(0))\" */ add(_21, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                            /// @src 35:7572:7604  \"ERC20InvalidReceiver(address(0))\"\n                                            revert(_21, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                        }\n                                        let _22 := sload(/** @src 35:6233:6254  \"_totalSupply += value\" */ 0x02)\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        let sum := add(_22, value_1)\n                                        if gt(_22, sum)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x11)\n                                            revert(0, 36)\n                                        }\n                                        sstore(/** @src 35:6233:6254  \"_totalSupply += value\" */ 0x02, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ sum)\n                                        mstore(0, _20)\n                                        mstore(0x20, 0)\n                                        let dataSlot := keccak256(0, _2)\n                                        sstore(dataSlot, add(sload(/** @src 35:7021:7043  \"_balances[to] += value\" */ dataSlot), /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ value_1))\n                                        /// @src 35:7083:7108  \"Transfer(from, to, value)\"\n                                        let _23 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                        mstore(_23, value_1)\n                                        /// @src 35:7083:7108  \"Transfer(from, to, value)\"\n                                        log3(_23, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x20, /** @src 35:7083:7108  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0, /** @src 35:7083:7108  \"Transfer(from, to, value)\" */ _20)\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0x70a08231 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                        mstore(32, 0)\n                                        let _24 := sload(keccak256(0, _2))\n                                        let memPos_4 := mload(_2)\n                                        mstore(memPos_4, _24)\n                                        return(memPos_4, 32)\n                                    }\n                                    case 0x715018a6 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        /// @src 29:1500:1562  \"modifier onlyOwner() {...\"\n                                        fun_checkOwner()\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        let _25 := sload(/** @src 29:3004:3010  \"_owner\" */ 0x05)\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        sstore(/** @src 29:3004:3010  \"_owner\" */ 0x05, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ and(_25, shl(160, 0xffffffffffffffffffffffff)))\n                                        /// @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                        log3(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0, 0, /** @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ and(_25, sub(shl(160, 1), 1)), 0)\n                                        return(0, 0)\n                                    }\n                                    case 0x8da5cb5b {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let value_2 := and(sload(/** @src 29:1710:1716  \"_owner\" */ 0x05), /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                        let memPos_5 := mload(_2)\n                                        mstore(memPos_5, value_2)\n                                        return(memPos_5, 32)\n                                    }\n                                    case 0x95d89b41 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        let memPtr := mload(_2)\n                                        let ret_1 := 0\n                                        let slotValue_1 := sload(_3)\n                                        let length_1 := 0\n                                        let _26 := 1\n                                        length_1 := shr(1, slotValue_1)\n                                        let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                                        if iszero(outOfPlaceEncoding_1)\n                                        {\n                                            length_1 := and(length_1, 0x7f)\n                                        }\n                                        let _27 := 32\n                                        if eq(outOfPlaceEncoding_1, lt(length_1, _27))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x22)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(memPtr, length_1)\n                                        switch outOfPlaceEncoding_1\n                                        case 0 {\n                                            mstore(add(memPtr, _27), and(slotValue_1, not(255)))\n                                            ret_1 := add(add(memPtr, shl(5, iszero(iszero(length_1)))), _27)\n                                        }\n                                        case 1 {\n                                            mstore(0, _3)\n                                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                                            let i_1 := 0\n                                            for { } lt(i_1, length_1) { i_1 := add(i_1, _27) }\n                                            {\n                                                mstore(add(add(memPtr, i_1), _27), sload(dataPos_1))\n                                                dataPos_1 := add(dataPos_1, _26)\n                                            }\n                                            ret_1 := add(add(memPtr, i_1), _27)\n                                        }\n                                        let newFreePtr_1 := add(memPtr, and(add(sub(ret_1, memPtr), 31), not(31)))\n                                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(_2, newFreePtr_1)\n                                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr), newFreePtr_1))\n                                    }\n                                    case 0xa9059cbb {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                        let value0_3 := abi_decode_address()\n                                        /// @src 35:3459:3464  \"value\"\n                                        fun_transfer(/** @src 40:735:745  \"msg.sender\" */ caller(), /** @src 35:3459:3464  \"value\" */ value0_3, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ calldataload(36))\n                                        let memPos_6 := mload(_2)\n                                        mstore(memPos_6, 1)\n                                        return(memPos_6, 32)\n                                    }\n                                    case 0xdd62ed3e {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                        let value0_4 := abi_decode_address()\n                                        let value1_1 := abi_decode_address_4059()\n                                        let _28 := sub(shl(160, 1), 1)\n                                        mstore(0, and(value0_4, _28))\n                                        mstore(32, /** @src 35:3657:3668  \"_allowances\" */ 0x01)\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        let _29 := keccak256(0, _2)\n                                        mstore(0, and(value1_1, _28))\n                                        mstore(32, _29)\n                                        let _30 := sload(keccak256(0, _2))\n                                        let memPos_7 := mload(_2)\n                                        mstore(memPos_7, _30)\n                                        return(memPos_7, 32)\n                                    }\n                                    case 0xf2fde38b {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        let value0_5 := abi_decode_address()\n                                        /// @src 29:1500:1562  \"modifier onlyOwner() {...\"\n                                        fun_checkOwner()\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        let _31 := sub(shl(160, 1), 1)\n                                        let _32 := and(/** @src 29:2627:2649  \"newOwner == address(0)\" */ value0_5, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _31)\n                                        /// @src 29:2623:2714  \"if (newOwner == address(0)) {...\"\n                                        if /** @src 29:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _32)\n                                        /// @src 29:2623:2714  \"if (newOwner == address(0)) {...\"\n                                        {\n                                            /// @src 29:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                            let _33 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                            /// @src 29:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                            mstore(_33, shl(224, 0x1e4fbdf7))\n                                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                            mstore(/** @src 29:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_33, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                            /// @src 29:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                            revert(_33, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                        }\n                                        let _34 := sload(/** @src 29:3004:3010  \"_owner\" */ 0x05)\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        sstore(/** @src 29:3004:3010  \"_owner\" */ 0x05, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ or(and(_34, shl(160, 0xffffffffffffffffffffffff)), _32))\n                                        /// @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                        log3(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0, 0, /** @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ and(_34, _31), /** @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _32)\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        return(0, 0)\n                                    }\n                                }\n                                revert(0, 0)\n                            }\n                            function abi_encode_string(headStart, value0) -> tail\n                            {\n                                let _1 := 32\n                                mstore(headStart, 32)\n                                let length := mload(value0)\n                                mstore(add(headStart, 32), length)\n                                let i := 0\n                                for { } lt(i, length) { i := add(i, _1) }\n                                {\n                                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                                }\n                                mstore(add(add(headStart, length), 64), 0)\n                                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n                            }\n                            function abi_decode_address() -> value\n                            {\n                                value := calldataload(4)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            }\n                            function abi_decode_address_4059() -> value\n                            {\n                                value := calldataload(36)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            }\n                            function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n                            {\n                                tail := add(headStart, 96)\n                                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                                mstore(add(headStart, 32), value1)\n                                mstore(add(headStart, 64), value2)\n                            }\n                            /// @ast-id 48620 @src 35:5393:5693  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                            function fun_transfer(var_from, var_to, var_value)\n                            {\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let _1 := sub(shl(160, 1), 1)\n                                let _2 := and(/** @src 35:5476:5494  \"from == address(0)\" */ var_from, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _1)\n                                /// @src 35:5472:5558  \"if (from == address(0)) {...\"\n                                if /** @src 35:5476:5494  \"from == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _2)\n                                /// @src 35:5472:5558  \"if (from == address(0)) {...\"\n                                {\n                                    /// @src 35:5517:5547  \"ERC20InvalidSender(address(0))\"\n                                    let _3 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(64)\n                                    /// @src 35:5517:5547  \"ERC20InvalidSender(address(0))\"\n                                    mstore(_3, shl(225, 0x4b637e8f))\n                                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                    mstore(/** @src 35:5517:5547  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 35:5492:5493  \"0\" */ 0x00)\n                                    /// @src 35:5517:5547  \"ERC20InvalidSender(address(0))\"\n                                    revert(_3, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                }\n                                let _4 := and(/** @src 35:5571:5587  \"to == address(0)\" */ var_to, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _1)\n                                /// @src 35:5567:5653  \"if (to == address(0)) {...\"\n                                if /** @src 35:5571:5587  \"to == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                                /// @src 35:5567:5653  \"if (to == address(0)) {...\"\n                                {\n                                    /// @src 35:5610:5642  \"ERC20InvalidReceiver(address(0))\"\n                                    let _5 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(64)\n                                    /// @src 35:5610:5642  \"ERC20InvalidReceiver(address(0))\"\n                                    mstore(_5, /** @src 35:7572:7604  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                    mstore(/** @src 35:5610:5642  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 35:5492:5493  \"0\" */ 0x00)\n                                    /// @src 35:5610:5642  \"ERC20InvalidReceiver(address(0))\"\n                                    revert(_5, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                }\n                                mstore(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _2)\n                                mstore(0x20, /** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let _6 := sload(keccak256(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x40))\n                                /// @src 35:6336:6451  \"if (fromBalance < value) {...\"\n                                if /** @src 35:6340:6359  \"fromBalance < value\" */ lt(_6, var_value)\n                                /// @src 35:6336:6451  \"if (fromBalance < value) {...\"\n                                {\n                                    /// @src 35:6386:6436  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    let _7 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(0x40)\n                                    /// @src 35:6386:6436  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    mstore(_7, shl(226, 0x391434e3))\n                                    revert(_7, sub(abi_encode_address_uint256_uint256(add(_7, 4), var_from, _6, var_value), _7))\n                                }\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                mstore(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _2)\n                                mstore(0x20, /** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                sstore(keccak256(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x40), sub(/** @src 35:6589:6608  \"fromBalance - value\" */ _6, var_value))\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                mstore(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                                let dataSlot := keccak256(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x40)\n                                sstore(dataSlot, add(sload(/** @src 35:7021:7043  \"_balances[to] += value\" */ dataSlot), /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ var_value))\n                                /// @src 35:7083:7108  \"Transfer(from, to, value)\"\n                                let _8 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(0x40)\n                                mstore(_8, var_value)\n                                /// @src 35:7083:7108  \"Transfer(from, to, value)\"\n                                log3(_8, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x20, /** @src 35:7083:7108  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n                            }\n                            /// @ast-id 48060 @src 29:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                            function fun_checkOwner()\n                            {\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let value := and(sload(/** @src 29:1710:1716  \"_owner\" */ 0x05), /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 29:1851:1952  \"if (owner() != _msgSender()) {...\"\n                                if /** @src 29:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ value, /** @src 40:735:745  \"msg.sender\" */ caller()))\n                                /// @src 29:1851:1952  \"if (owner() != _msgSender()) {...\"\n                                {\n                                    /// @src 29:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                                    let _1 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(64)\n                                    /// @src 29:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                                    mstore(_1, shl(224, 0x118cdaa7))\n                                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                    mstore(/** @src 29:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 40:735:745  \"msg.sender\" */ caller())\n                                    /// @src 29:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                                    revert(_1, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                }\n                            }\n                        }\n                        data \".metadata\" hex\"a164736f6c6343000818000a\"\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000818000a\"\n            }\n        }\n        /// @use-src 33:\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\", 43:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 44:\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 47:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 58:\"src/Merkle-Airdrop.sol\"\n        object \"MerkleAirdrop_56377\" {\n            code {\n                {\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    let _1 := memoryguard(0x01a0)\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"MerkleAirdrop_56377\")\n                    let argSize := sub(codesize(), programSize)\n                    let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                    let _2 := sub(shl(64, 1), 1)\n                    if or(gt(newFreePtr, _2), lt(newFreePtr, _1))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    let _3 := 64\n                    mstore(_3, newFreePtr)\n                    codecopy(_1, programSize, argSize)\n                    if slt(sub(add(_1, argSize), _1), _3)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    let value := mload(_1)\n                    let value_1 := mload(add(_1, 32))\n                    if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1))))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    let memPtr := mload(_3)\n                    finalize_allocation(memPtr)\n                    mstore(memPtr, 13)\n                    let _4 := add(memPtr, 32)\n                    mstore(_4, \"MerkleAirdrop\")\n                    let memPtr_1 := mload(_3)\n                    finalize_allocation(memPtr_1)\n                    mstore(memPtr_1, 1)\n                    let _5 := add(memPtr_1, 32)\n                    mstore(_5, \"1\")\n                    /// @src 47:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\"\n                    let _6 := fun_toShortStringWithFallback(memPtr)\n                    /// @src 47:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\"\n                    let _7 := 288\n                    mstore(_7, /** @src 47:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\" */ _6)\n                    /// @src 47:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\"\n                    let _8 := fun_toShortStringWithFallback_2443(memPtr_1)\n                    /// @src 47:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\"\n                    let _9 := 320\n                    mstore(_9, /** @src 47:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\" */ _8)\n                    /// @src 47:3542:3564  \"keccak256(bytes(name))\"\n                    let _10 := keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _4, mload(/** @src 47:3542:3564  \"keccak256(bytes(name))\" */ memPtr))\n                    /// @src 47:3528:3564  \"_hashedName = keccak256(bytes(name))\"\n                    mstore(224, /** @src 47:3542:3564  \"keccak256(bytes(name))\" */ _10)\n                    /// @src 47:3591:3616  \"keccak256(bytes(version))\"\n                    let _11 := keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _5, mload(/** @src 47:3591:3616  \"keccak256(bytes(version))\" */ memPtr_1))\n                    /// @src 47:3574:3616  \"_hashedVersion = keccak256(bytes(version))\"\n                    let _12 := 256\n                    mstore(_12, /** @src 47:3591:3616  \"keccak256(bytes(version))\" */ _11)\n                    /// @src 47:3627:3657  \"_cachedChainId = block.chainid\"\n                    mstore(160, /** @src 47:3644:3657  \"block.chainid\" */ chainid())\n                    /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let expr_mpos := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_3)\n                    /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let _13 := add(expr_mpos, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 32)\n                    /// @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                    mstore(_13, 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                    mstore(add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3), /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _10)\n                    mstore(add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), _11)\n                    mstore(add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 47:3644:3657  \"block.chainid\" */ chainid())\n                    /// @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                    mstore(add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:3627:3657  \"_cachedChainId = block.chainid\" */ 160), /** @src 47:4278:4282  \"this\" */ address())\n                    /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    mstore(expr_mpos, /** @src 47:3627:3657  \"_cachedChainId = block.chainid\" */ 160)\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    let newFreePtr_1 := add(expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, expr_mpos))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(_3, newFreePtr_1)\n                    /// @src 47:3667:3715  \"_cachedDomainSeparator = _buildDomainSeparator()\"\n                    mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128, /** @src 47:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _13, mload(/** @src 47:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos)))\n                    /// @src 47:3725:3752  \"_cachedThis = address(this)\"\n                    mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192, /** @src 47:4278:4282  \"this\" */ address())\n                    /// @src 58:1932:1957  \"i_merkleRoot = merkleRoot\"\n                    let _14 := 352\n                    mstore(_14, value)\n                    /// @src 58:1967:1982  \"i_token = token\"\n                    let _15 := 384\n                    mstore(_15, value_1)\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    let _16 := datasize(\"MerkleAirdrop_56377_deployed\")\n                    codecopy(newFreePtr_1, dataoffset(\"MerkleAirdrop_56377_deployed\"), _16)\n                    setimmutable(newFreePtr_1, \"50993\", mload(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"50995\", mload(/** @src 47:3627:3657  \"_cachedChainId = block.chainid\" */ 160))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"50997\", mload(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"50999\", mload(/** @src 47:3528:3564  \"_hashedName = keccak256(bytes(name))\" */ 224))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"51001\", mload(/** @src 47:3574:3616  \"_hashedVersion = keccak256(bytes(version))\" */ _12))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"51004\", mload(/** @src 47:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\" */ _7))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"51007\", mload(/** @src 47:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\" */ _9))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"56097\", mload(/** @src 58:1932:1957  \"i_merkleRoot = merkleRoot\" */ _14))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"56100\", mload(/** @src 58:1967:1982  \"i_token = token\" */ _15))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    return(newFreePtr_1, _16)\n                }\n                function finalize_allocation(memPtr)\n                {\n                    let newFreePtr := add(memPtr, 64)\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                /// @ast-id 49926 @src 43:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback(var_value_mpos) -> var\n                {\n                    /// @src 43:3037:3056  \"bytes(value).length\"\n                    let expr := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 43:3037:3049  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 43:3059:3061  \"32\"\n                    let _1 := 0x20\n                    /// @src 43:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 43:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 43:3059:3061  \"32\" */ _1)\n                    case /** @src 43:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0x24)\n                        }\n                        let _2 := sload(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let length := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let _3 := 1\n                        length := shr(_3, _2)\n                        let outOfPlaceEncoding := and(_2, _3)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 43:3059:3061  \"32\" */ _1))\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        {\n                            mstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, 0x00)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let data := keccak256(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 43:3059:3061  \"32\" */ _1)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let _4 := add(data, shr(5, add(length, 31)))\n                            let start := add(data, shr(5, add(expr, 31)))\n                            for { } lt(start, _4) { start := add(start, _3) }\n                            {\n                                sstore(start, /** @src 47:3432:3445  \"_nameFallback\" */ 0x00)\n                            }\n                        }\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let srcOffset := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        srcOffset := /** @src 43:3059:3061  \"32\" */ _1\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, 0x00)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let dstPtr := keccak256(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 43:3059:3061  \"32\" */ _1)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let i := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 43:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, _3)\n                                srcOffset := add(srcOffset, /** @src 43:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(shl(_3, expr), _3))\n                        }\n                        default {\n                            let value := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(_3, expr)))\n                        }\n                        /// @src 43:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var := /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 43:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 43:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 43:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 43:1840:1856  \"bstr.length > 31\" */ gt(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 43:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 43:1854:1856  \"31\" */ 0x1f)\n                        /// @src 43:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 43:1879:1897  \"StringTooLong(str)\"\n                            let _5 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                            /// @src 43:1879:1897  \"StringTooLong(str)\"\n                            mstore(_5, shl(224, 0x305a27a9))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(/** @src 43:1879:1897  \"StringTooLong(str)\" */ add(_5, 4), /** @src 43:3059:3061  \"32\" */ _1)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 36), length_1)\n                            let i_1 := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            for { }\n                            lt(i_1, length_1)\n                            {\n                                i_1 := add(i_1, /** @src 43:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            {\n                                mstore(add(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 43:3059:3061  \"32\" */ _1)))\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(add(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_1), 68), /** @src 47:3432:3445  \"_nameFallback\" */ 0x00)\n                            /// @src 43:1879:1897  \"StringTooLong(str)\"\n                            revert(_5, add(sub(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(add(length_1, /** @src 43:1854:1856  \"31\" */ 0x1f), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ not(31))), /** @src 43:1879:1897  \"StringTooLong(str)\" */ _5), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 68))\n                        }\n                        /// @src 43:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(var_value_mpos, /** @src 43:3059:3061  \"32\" */ _1))\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        if lt(length_2, /** @src 43:3059:3061  \"32\" */ _1)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 43:3059:3061  \"32\" */ _1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_2)), not(0)))\n                        }\n                        /// @src 43:3077:3104  \"return toShortString(value)\"\n                        var := /** @src 43:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_2)\n                        /// @src 43:3077:3104  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n                /// @ast-id 49926 @src 43:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback_2443(var_value_mpos) -> var\n                {\n                    /// @src 43:3037:3056  \"bytes(value).length\"\n                    let expr := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 43:3037:3049  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 43:3059:3061  \"32\"\n                    let _1 := 0x20\n                    /// @src 43:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 43:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 43:3059:3061  \"32\" */ _1)\n                    case /** @src 43:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _2 := 1\n                        let _3 := sload(_2)\n                        let length := /** @src -1:-1:-1 */ 0\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        length := shr(_2, _3)\n                        let outOfPlaceEncoding := and(_3, _2)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 43:3059:3061  \"32\" */ _1))\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _2)\n                            let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 43:3059:3061  \"32\" */ _1)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let _4 := add(data, shr(5, add(length, 31)))\n                            let start := add(data, shr(5, add(expr, 31)))\n                            for { } lt(start, _4) { start := add(start, _2) }\n                            {\n                                sstore(start, /** @src -1:-1:-1 */ 0)\n                            }\n                        }\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let srcOffset := /** @src -1:-1:-1 */ 0\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        srcOffset := /** @src 43:3059:3061  \"32\" */ _1\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _2)\n                            let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 43:3059:3061  \"32\" */ _1)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 43:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, _2)\n                                srcOffset := add(srcOffset, /** @src 43:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(_2, add(shl(_2, expr), _2))\n                        }\n                        default {\n                            let value := /** @src -1:-1:-1 */ 0\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(_2, or(and(value, not(shr(shl(3, expr), not(0)))), shl(_2, expr)))\n                        }\n                        /// @src 43:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var := /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 43:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 43:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 43:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 43:1840:1856  \"bstr.length > 31\" */ gt(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 43:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 43:1854:1856  \"31\" */ 0x1f)\n                        /// @src 43:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 43:1879:1897  \"StringTooLong(str)\"\n                            let _5 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                            /// @src 43:1879:1897  \"StringTooLong(str)\"\n                            mstore(_5, shl(224, 0x305a27a9))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(/** @src 43:1879:1897  \"StringTooLong(str)\" */ add(_5, 4), /** @src 43:3059:3061  \"32\" */ _1)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 36), length_1)\n                            let i_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            for { }\n                            lt(i_1, length_1)\n                            {\n                                i_1 := add(i_1, /** @src 43:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            {\n                                mstore(add(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 43:3059:3061  \"32\" */ _1)))\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(add(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_1), 68), /** @src -1:-1:-1 */ 0)\n                            /// @src 43:1879:1897  \"StringTooLong(str)\"\n                            revert(_5, add(sub(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(add(length_1, /** @src 43:1854:1856  \"31\" */ 0x1f), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ not(31))), /** @src 43:1879:1897  \"StringTooLong(str)\" */ _5), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 68))\n                        }\n                        /// @src 43:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(var_value_mpos, /** @src 43:3059:3061  \"32\" */ _1))\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        if lt(length_2, /** @src 43:3059:3061  \"32\" */ _1)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 43:3059:3061  \"32\" */ _1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_2)), not(0)))\n                        }\n                        /// @src 43:3077:3104  \"return toShortString(value)\"\n                        var := /** @src 43:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_2)\n                        /// @src 43:3077:3104  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n            }\n            /// @use-src 38:\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 43:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 46:\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 47:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 48:\"lib/openzeppelin-contracts/contracts/utils/cryptography/Hashes.sol\", 49:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\", 50:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 58:\"src/Merkle-Airdrop.sol\"\n            object \"MerkleAirdrop_56377_deployed\" {\n                code {\n                    {\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x1b2aa644 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 192) { revert(0, 0) }\n                                let offset := calldataload(_3)\n                                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                                let value0, value1 := abi_decode_array_bytes32_dyn_calldata(add(_3, offset), calldatasize())\n                                let value := calldataload(36)\n                                let _4 := sub(shl(160, 1), 1)\n                                let _5 := and(value, _4)\n                                if iszero(eq(value, _5)) { revert(0, 0) }\n                                let value_1 := calldataload(68)\n                                let value_2 := calldataload(100)\n                                if iszero(eq(value_2, and(value_2, 0xff))) { revert(0, 0) }\n                                mstore(0, _5)\n                                mstore(32, /** @src 58:3287:3296  \"s_claimed\" */ 0x02)\n                                /// @src 58:3283:3370  \"if (s_claimed[account]) {...\"\n                                if /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(sload(keccak256(0, _2)), 0xff)\n                                /// @src 58:3283:3370  \"if (s_claimed[account]) {...\"\n                                {\n                                    /// @src 58:3328:3359  \"MerkleAirdrop__AlreadyClaimed()\"\n                                    mstore(_1, shl(224, 0x1ac2170b))\n                                    revert(_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3)\n                                }\n                                /// @src 58:4279:4313  \"ECDSA.tryRecover(message, v, r, s)\"\n                                let expr_component, expr_component_1, expr_component_2 := fun_tryRecover(/** @src 58:3443:3471  \"_getMessage(account, amount)\" */ fun_getMessage(value, value_1), /** @src 58:4279:4313  \"ECDSA.tryRecover(message, v, r, s)\" */ value_2, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ calldataload(132), calldataload(164))\n                                /// @src 58:3411:3548  \"if (!_isValidSignature(account, _getMessage(account, amount), v, r, s)) {...\"\n                                if /** @src 58:3415:3481  \"!_isValidSignature(account, _getMessage(account, amount), v, r, s)\" */ iszero(/** @src 58:4330:4347  \"signer == account\" */ eq(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 58:4330:4347  \"signer == account\" */ expr_component, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _4), _5))\n                                /// @src 58:3411:3548  \"if (!_isValidSignature(account, _getMessage(account, amount), v, r, s)) {...\"\n                                {\n                                    /// @src 58:3504:3537  \"MerkleAirdrop__InvalidSignature()\"\n                                    let _6 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                    /// @src 58:3504:3537  \"MerkleAirdrop__InvalidSignature()\"\n                                    mstore(_6, shl(224, 0xab8b8565))\n                                    revert(_6, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3)\n                                }\n                                /// @src 58:3606:3633  \"abi.encode(account, amount)\"\n                                let expr_mpos := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                /// @src 58:3606:3633  \"abi.encode(account, amount)\"\n                                let _7 := add(expr_mpos, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 32)\n                                /// @src 58:3606:3633  \"abi.encode(account, amount)\"\n                                let _8 := sub(abi_encode_address_uint256(_7, value, value_1), expr_mpos)\n                                mstore(expr_mpos, add(_8, not(31)))\n                                finalize_allocation(expr_mpos, _8)\n                                /// @src 58:3596:3634  \"keccak256(abi.encode(account, amount))\"\n                                let _9 := keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _7, mload(/** @src 58:3596:3634  \"keccak256(abi.encode(account, amount))\" */ expr_mpos))\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let outPtr := mload(_2)\n                                let _10 := add(outPtr, 32)\n                                mstore(_10, _9)\n                                mstore(outPtr, 32)\n                                finalize_allocation_9021(outPtr)\n                                /// @src 58:3646:3776  \"if (!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)) {...\"\n                                if /** @src 58:3650:3702  \"!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ iszero(/** @src 58:3651:3702  \"MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ fun_verify(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ abi_decode_available_length_array_bytes32_dyn(/** @src 58:3651:3702  \"MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ value0, value1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ calldatasize()), /** @src 58:3683:3695  \"i_merkleRoot\" */ loadimmutable(\"56097\"), /** @src 58:3573:3636  \"keccak256(bytes.concat(keccak256(abi.encode(account, amount))))\" */ keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _10, mload(/** @src 58:3573:3636  \"keccak256(bytes.concat(keccak256(abi.encode(account, amount))))\" */ outPtr))))\n                                /// @src 58:3646:3776  \"if (!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)) {...\"\n                                {\n                                    /// @src 58:3725:3765  \"MerkleAirdrop__ClaimFailedInvalidProof()\"\n                                    let _11 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                    /// @src 58:3725:3765  \"MerkleAirdrop__ClaimFailedInvalidProof()\"\n                                    mstore(_11, shl(225, 0x751c01c5))\n                                    revert(_11, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3)\n                                }\n                                mstore(0, _5)\n                                mstore(32, /** @src 58:3287:3296  \"s_claimed\" */ 0x02)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let dataSlot := keccak256(0, _2)\n                                sstore(dataSlot, or(and(sload(dataSlot), not(255)), 1))\n                                /// @src 58:3826:3855  \"AirdropClaim(account, amount)\"\n                                log3(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0, 0, /** @src 58:3826:3855  \"AirdropClaim(account, amount)\" */ 0x0109d8fbd8363b83a5fa0c0f8dfbed54c793803139c404e89bf3697f66bdc505, _5, value_1)\n                                /// @src 58:3906:3912  \"amount\"\n                                fun_safeTransfer(/** @src 58:3888:3895  \"i_token\" */ loadimmutable(\"56100\"), /** @src 58:3906:3912  \"amount\" */ value, value_1)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                return(0, 0)\n                            }\n                            case 0x1b93f66d {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 58:4845:4854  \"s_claimed\" */ 0x02)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let value_3 := and(sload(keccak256(0, _2)), 0xff)\n                                let memPos := mload(_2)\n                                mstore(memPos, iszero(iszero(value_3)))\n                                return(memPos, 32)\n                            }\n                            case 0x21df0da7 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, and(/** @src 58:5052:5059  \"i_token\" */ loadimmutable(\"56100\"), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ sub(shl(160, 1), 1)))\n                                return(memPos_1, 32)\n                            }\n                            case 0x32b61db9 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                let offset_1 := calldataload(_3)\n                                if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                                let value0_1, value1_1 := abi_decode_array_bytes32_dyn_calldata(add(_3, offset_1), calldatasize())\n                                let value_4 := calldataload(36)\n                                mstore(0, /** @src 58:2339:2349  \"msg.sender\" */ caller())\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                mstore(32, /** @src 58:2329:2338  \"s_claimed\" */ 0x02)\n                                /// @src 58:2325:2415  \"if (s_claimed[msg.sender]) {...\"\n                                if /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(sload(keccak256(0, _2)), 0xff)\n                                /// @src 58:2325:2415  \"if (s_claimed[msg.sender]) {...\"\n                                {\n                                    /// @src 58:2373:2404  \"MerkleAirdrop__AlreadyClaimed()\"\n                                    let _12 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                    /// @src 58:2373:2404  \"MerkleAirdrop__AlreadyClaimed()\"\n                                    mstore(_12, /** @src 58:3328:3359  \"MerkleAirdrop__AlreadyClaimed()\" */ shl(224, 0x1ac2170b))\n                                    /// @src 58:2373:2404  \"MerkleAirdrop__AlreadyClaimed()\"\n                                    revert(_12, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3)\n                                }\n                                /// @src 58:2757:2787  \"abi.encode(msg.sender, amount)\"\n                                let expr_mpos_1 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                /// @src 58:2757:2787  \"abi.encode(msg.sender, amount)\"\n                                let _13 := add(expr_mpos_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 32)\n                                /// @src 58:2757:2787  \"abi.encode(msg.sender, amount)\"\n                                let _14 := sub(abi_encode_address_uint256(_13, /** @src 58:2339:2349  \"msg.sender\" */ caller(), /** @src 58:2757:2787  \"abi.encode(msg.sender, amount)\" */ value_4), expr_mpos_1)\n                                mstore(expr_mpos_1, add(_14, /** @src 58:3606:3633  \"abi.encode(account, amount)\" */ not(31)))\n                                /// @src 58:2757:2787  \"abi.encode(msg.sender, amount)\"\n                                finalize_allocation(expr_mpos_1, _14)\n                                /// @src 58:2747:2788  \"keccak256(abi.encode(msg.sender, amount))\"\n                                let _15 := keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _13, mload(/** @src 58:2747:2788  \"keccak256(abi.encode(msg.sender, amount))\" */ expr_mpos_1))\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let outPtr_1 := mload(_2)\n                                let _16 := add(outPtr_1, 32)\n                                mstore(_16, _15)\n                                mstore(outPtr_1, 32)\n                                finalize_allocation_9021(outPtr_1)\n                                /// @src 58:2800:2930  \"if (!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)) {...\"\n                                if /** @src 58:2804:2856  \"!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ iszero(/** @src 58:2805:2856  \"MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ fun_verify(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ abi_decode_available_length_array_bytes32_dyn(/** @src 58:2805:2856  \"MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ value0_1, value1_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ calldatasize()), /** @src 58:2837:2849  \"i_merkleRoot\" */ loadimmutable(\"56097\"), /** @src 58:2724:2790  \"keccak256(bytes.concat(keccak256(abi.encode(msg.sender, amount))))\" */ keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _16, mload(/** @src 58:2724:2790  \"keccak256(bytes.concat(keccak256(abi.encode(msg.sender, amount))))\" */ outPtr_1))))\n                                /// @src 58:2800:2930  \"if (!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)) {...\"\n                                {\n                                    /// @src 58:2879:2919  \"MerkleAirdrop__ClaimFailedInvalidProof()\"\n                                    let _17 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                    /// @src 58:2879:2919  \"MerkleAirdrop__ClaimFailedInvalidProof()\"\n                                    mstore(_17, /** @src 58:3725:3765  \"MerkleAirdrop__ClaimFailedInvalidProof()\" */ shl(225, 0x751c01c5))\n                                    /// @src 58:2879:2919  \"MerkleAirdrop__ClaimFailedInvalidProof()\"\n                                    revert(_17, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3)\n                                }\n                                mstore(0, /** @src 58:2339:2349  \"msg.sender\" */ caller())\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                mstore(32, /** @src 58:2329:2338  \"s_claimed\" */ 0x02)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let dataSlot_1 := keccak256(0, _2)\n                                sstore(dataSlot_1, or(and(sload(dataSlot_1), not(255)), 1))\n                                /// @src 58:2983:3015  \"AirdropClaim(msg.sender, amount)\"\n                                log3(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0, 0, /** @src 58:2983:3015  \"AirdropClaim(msg.sender, amount)\" */ 0x0109d8fbd8363b83a5fa0c0f8dfbed54c793803139c404e89bf3697f66bdc505, /** @src 58:2339:2349  \"msg.sender\" */ caller(), /** @src 58:2983:3015  \"AirdropClaim(msg.sender, amount)\" */ value_4)\n                                /// @src 58:3069:3075  \"amount\"\n                                fun_safeTransfer(/** @src 58:3048:3055  \"i_token\" */ loadimmutable(\"56100\"), /** @src 58:2339:2349  \"msg.sender\" */ caller(), /** @src 58:3069:3075  \"amount\" */ value_4)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                return(0, 0)\n                            }\n                            case 0x49590657 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, /** @src 58:4950:4962  \"i_merkleRoot\" */ loadimmutable(\"56097\"))\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                return(memPos_2, 32)\n                            }\n                            case 0x74b3c7ec {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 58:1610:1651  \"mapping(address => bool) public s_claimed\" */ 2)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let value_5 := and(sload(keccak256(0, _2)), 0xff)\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, iszero(iszero(value_5)))\n                                return(memPos_3, 32)\n                            }\n                            case 0x84b0196e {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 47:6092:6140  \"return _name.toStringWithFallback(_nameFallback)\"\n                                let var_mpos := /** @src 47:6099:6140  \"_name.toStringWithFallback(_nameFallback)\" */ fun_toStringWithFallback(/** @src 47:6099:6104  \"_name\" */ loadimmutable(\"51004\"))\n                                /// @src 47:6547:6601  \"return _version.toStringWithFallback(_versionFallback)\"\n                                let var_mpos_1 := /** @src 47:6554:6601  \"_version.toStringWithFallback(_versionFallback)\" */ fun_toStringWithFallback_5521(/** @src 47:6554:6562  \"_version\" */ loadimmutable(\"51007\"))\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let memPtr := mload(_2)\n                                let _18 := 0x20\n                                let newFreePtr := add(memPtr, 0x20)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(_2, newFreePtr)\n                                mstore(memPtr, 0)\n                                let memPos_4 := mload(_2)\n                                mstore(memPos_4, shl(248, 15))\n                                mstore(add(memPos_4, 0x20), 224)\n                                let tail := abi_encode_string(var_mpos, add(memPos_4, 224))\n                                mstore(add(memPos_4, _2), sub(tail, memPos_4))\n                                let tail_1 := abi_encode_string(var_mpos_1, tail)\n                                mstore(add(memPos_4, 96), /** @src 47:5590:5603  \"block.chainid\" */ chainid())\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                mstore(add(memPos_4, 128), /** @src 47:5625:5629  \"this\" */ address())\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                mstore(add(memPos_4, 160), 0)\n                                mstore(add(memPos_4, 192), sub(tail_1, memPos_4))\n                                let pos := tail_1\n                                let length := mload(memPtr)\n                                mstore(tail_1, length)\n                                pos := add(tail_1, 0x20)\n                                let srcPtr := newFreePtr\n                                let i := 0\n                                for { }\n                                lt(i, length)\n                                {\n                                    i := add(i, /** @src 47:6584:6600  \"_versionFallback\" */ 0x01)\n                                }\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                {\n                                    mstore(pos, mload(srcPtr))\n                                    pos := add(pos, _18)\n                                    srcPtr := add(srcPtr, _18)\n                                }\n                                return(memPos_4, sub(pos, memPos_4))\n                            }\n                            case 0x8d93d984 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                let value0_2 := abi_decode_address()\n                                let ret := fun_getMessage(value0_2, calldataload(36))\n                                let memPos_5 := mload(_2)\n                                mstore(memPos_5, ret)\n                                return(memPos_5, 32)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_decode_array_bytes32_dyn_calldata(offset, end) -> arrayPos, length\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        length := calldataload(offset)\n                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                        arrayPos := add(offset, 0x20)\n                        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_encode_string(value, pos) -> end\n                    {\n                        let length := mload(value)\n                        mstore(pos, length)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        for { } lt(i, length) { i := add(i, 0x20) }\n                        {\n                            let _1 := 0x20\n                            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                        }\n                        mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        end := add(add(pos, and(add(length, 31), /** @src 58:3606:3633  \"abi.encode(account, amount)\" */ not(31))), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0x20)\n                    }\n                    function abi_encode_address_uint256(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                    }\n                    function finalize_allocation_9021(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 64)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), /** @src 58:3606:3633  \"abi.encode(account, amount)\" */ not(31)))\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function abi_decode_available_length_array_bytes32_dyn(offset, length, end) -> array\n                    {\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0x24)\n                        }\n                        let _1 := shl(5, length)\n                        let _2 := 0x20\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, add(_1, 0x20))\n                        array := memPtr\n                        let dst := memPtr\n                        mstore(memPtr, length)\n                        dst := add(memPtr, 0x20)\n                        let srcEnd := add(offset, _1)\n                        if gt(srcEnd, end)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let src := offset\n                        for { } lt(src, srcEnd) { src := add(src, _2) }\n                        {\n                            mstore(dst, calldataload(src))\n                            dst := add(dst, _2)\n                        }\n                    }\n                    /// @ast-id 56345 @src 58:4361:4598  \"function _getMessage(address account, uint256 amount) public view returns (bytes32) {...\"\n                    function fun_getMessage(var_account, var_amount) -> var\n                    {\n                        /// @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\"\n                        let _1 := 64\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let memPtr := mload(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let newFreePtr := add(memPtr, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let _2 := 0xffffffffffffffff\n                        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ newFreePtr)\n                        let _3 := sub(shl(160, 1), 1)\n                        /// @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\"\n                        mstore(memPtr, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ var_account, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3))\n                        /// @src 58:4531:4579  \"AirDropClaim({account: account, amount: amount})\"\n                        let _4 := add(memPtr, 32)\n                        /// @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\"\n                        mstore(_4, var_amount)\n                        /// @src 58:4502:4580  \"abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount}))\"\n                        let expr_56340_mpos := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1)\n                        /// @src 58:4502:4580  \"abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount}))\"\n                        let _5 := add(expr_56340_mpos, /** @src 58:4531:4579  \"AirDropClaim({account: account, amount: amount})\" */ 32)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        mstore(_5, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ 0xc0f4a2a1381428431909845939ce5eb5fbc52b85bd7e391f00f18deaafd74b06)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        mstore(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ add(/** @src 58:4502:4580  \"abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount}))\" */ expr_56340_mpos, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ mload(memPtr), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3))\n                        mstore(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ add(/** @src 58:4502:4580  \"abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount}))\" */ expr_56340_mpos, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ 96), mload(_4))\n                        /// @src 58:4502:4580  \"abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount}))\"\n                        mstore(expr_56340_mpos, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ 96)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let newFreePtr_1 := add(expr_56340_mpos, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ 128)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, expr_56340_mpos))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ newFreePtr_1)\n                        /// @src 58:4492:4581  \"keccak256(abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount})))\"\n                        let _6 := keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _5, mload(/** @src 58:4492:4581  \"keccak256(abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount})))\" */ expr_56340_mpos))\n                        /// @src 47:5053:5073  \"_domainSeparatorV4()\"\n                        let _7 := fun_domainSeparatorV4()\n                        /// @src 50:3515:3748  \"assembly {...\"\n                        let usr$ptr := mload(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1)\n                        /// @src 50:3515:3748  \"assembly {...\"\n                        mstore(usr$ptr, \"\\x19\\x01\")\n                        mstore(add(usr$ptr, 0x02), _7)\n                        mstore(add(usr$ptr, 0x22), _6)\n                        /// @src 58:4455:4591  \"return _hashTypedDataV4(...\"\n                        var := /** @src 50:3515:3748  \"assembly {...\" */ keccak256(usr$ptr, 0x42)\n                    }\n                    /// @ast-id 51268 @src 49:1303:1457  \"function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {...\"\n                    function fun_verify(var_proof_mpos, var_root, var_leaf) -> var\n                    {\n                        /// @src 49:2107:2134  \"bytes32 computedHash = leaf\"\n                        let var_computedHash := var_leaf\n                        /// @src 49:2149:2162  \"uint256 i = 0\"\n                        let var_i := /** @src -1:-1:-1 */ 0\n                        /// @src 49:2144:2278  \"for (uint256 i = 0; i < proof.length; i++) {...\"\n                        for { }\n                        /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 1\n                        /// @src 49:2149:2162  \"uint256 i = 0\"\n                        {\n                            /// @src 49:2182:2185  \"i++\"\n                            var_i := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(/** @src 49:2182:2185  \"i++\" */ var_i, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 1)\n                        }\n                        /// @src 49:2182:2185  \"i++\"\n                        {\n                            /// @src 49:2164:2180  \"i < proof.length\"\n                            if iszero(lt(var_i, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 49:2168:2180  \"proof.length\" */ var_proof_mpos)))\n                            /// @src 49:2164:2180  \"i < proof.length\"\n                            { break }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let _1 := 32\n                            let _2 := mload(add(add(var_proof_mpos, shl(5, var_i)), _1))\n                            /// @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\"\n                            let expr := /** @src -1:-1:-1 */ 0\n                            /// @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\"\n                            switch /** @src 48:494:499  \"a < b\" */ lt(var_computedHash, _2)\n                            case /** @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\" */ 0 {\n                                /// @src 48:823:942  \"assembly {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 48:823:942  \"assembly {...\" */ _2)\n                                mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _1, /** @src 48:823:942  \"assembly {...\" */ var_computedHash)\n                                /// @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\"\n                                expr := /** @src 48:823:942  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 48:823:942  \"assembly {...\" */ 0x40)\n                            }\n                            default /// @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\"\n                            {\n                                /// @src 48:823:942  \"assembly {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 48:823:942  \"assembly {...\" */ var_computedHash)\n                                mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _1, /** @src 48:823:942  \"assembly {...\" */ _2)\n                                /// @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\"\n                                expr := /** @src 48:823:942  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 48:823:942  \"assembly {...\" */ 0x40)\n                            }\n                            /// @src 49:2201:2267  \"computedHash = Hashes.commutativeKeccak256(computedHash, proof[i])\"\n                            var_computedHash := expr\n                        }\n                        /// @src 49:1410:1450  \"return processProof(proof, leaf) == root\"\n                        var := /** @src 49:1417:1450  \"processProof(proof, leaf) == root\" */ eq(var_computedHash, var_root)\n                    }\n                    /// @ast-id 49041 @src 38:1271:1431  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n                    function fun_safeTransfer(var_token_address, var_to, var_value)\n                    {\n                        /// @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let expr_49037_mpos := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                        /// @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let _1 := add(expr_49037_mpos, 0x20)\n                        mstore(_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0xa9059cbb))\n                        /// @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let _2 := sub(abi_encode_address_uint256(add(expr_49037_mpos, 36), var_to, var_value), expr_49037_mpos)\n                        mstore(expr_49037_mpos, add(_2, /** @src 58:3606:3633  \"abi.encode(account, amount)\" */ not(31)))\n                        /// @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\"\n                        finalize_allocation(expr_49037_mpos, _2)\n                        /// @src 38:6687:7108  \"assembly (\\\"memory-safe\\\") {...\"\n                        if iszero(call(gas(), var_token_address, /** @src -1:-1:-1 */ 0, /** @src 38:6687:7108  \"assembly (\\\"memory-safe\\\") {...\" */ _1, mload(expr_49037_mpos), /** @src -1:-1:-1 */ 0, /** @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20))\n                        /// @src 38:6687:7108  \"assembly (\\\"memory-safe\\\") {...\"\n                        {\n                            let usr$ptr := mload(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 64)\n                            /// @src 38:6687:7108  \"assembly (\\\"memory-safe\\\") {...\"\n                            returndatacopy(usr$ptr, /** @src -1:-1:-1 */ 0, /** @src 38:6687:7108  \"assembly (\\\"memory-safe\\\") {...\" */ returndatasize())\n                            revert(usr$ptr, returndatasize())\n                        }\n                        let var_returnSize := returndatasize()\n                        let var_returnValue := mload(/** @src -1:-1:-1 */ 0)\n                        /// @src 38:7122:7190  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 38:7122:7190  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                        switch /** @src 38:7122:7137  \"returnSize == 0\" */ iszero(var_returnSize)\n                        case /** @src 38:7122:7190  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\" */ 0 {\n                            expr := /** @src 38:7174:7190  \"returnValue != 1\" */ iszero(eq(var_returnValue, /** @src 38:7189:7190  \"1\" */ 0x01))\n                        }\n                        default /// @src 38:7122:7190  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                        {\n                            expr := /** @src 38:7140:7171  \"address(token).code.length == 0\" */ iszero(/** @src 38:7140:7166  \"address(token).code.length\" */ extcodesize(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 38:7140:7154  \"address(token)\" */ var_token_address, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ sub(shl(160, 1), 1))))\n                        }\n                        /// @src 38:7118:7264  \"if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {...\"\n                        if expr\n                        {\n                            /// @src 38:7213:7253  \"SafeERC20FailedOperation(address(token))\"\n                            let _3 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                            /// @src 38:7213:7253  \"SafeERC20FailedOperation(address(token))\"\n                            mstore(_3, shl(224, 0x5274afe7))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(/** @src 38:7213:7253  \"SafeERC20FailedOperation(address(token))\" */ add(_3, 4), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 38:7238:7252  \"address(token)\" */ var_token_address, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ sub(shl(160, 1), 1)))\n                            /// @src 38:7213:7253  \"SafeERC20FailedOperation(address(token))\"\n                            revert(_3, /** @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                        }\n                    }\n                    /// @ast-id 50886 @src 46:5140:6670  \"function tryRecover(...\"\n                    function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n                    {\n                        /// @src 46:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        if /** @src 46:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 46:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                        /// @src 46:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        {\n                            /// @src 46:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var := /** @src 46:6297:6298  \"0\" */ 0x00\n                            /// @src 46:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_1 := /** @src 46:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                            /// @src 46:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_2 := var_s\n                            leave\n                        }\n                        /// @src 46:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _1 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                        mstore(_1, var_hash)\n                        mstore(add(_1, 32), and(var_v, 0xff))\n                        mstore(add(_1, 64), var_r)\n                        mstore(add(_1, 96), var_s)\n                        /// @src 46:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        mstore(/** @src -1:-1:-1 */ 0, 0)\n                        /// @src 46:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        if iszero(staticcall(gas(), 1, _1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 128, /** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 32))\n                        /// @src 46:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        {\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 46:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _2 := mload(/** @src -1:-1:-1 */ 0)\n                        /// @src 46:6491:6604  \"if (signer == address(0)) {...\"\n                        if /** @src 46:6495:6515  \"signer == address(0)\" */ iszero(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 46:6495:6515  \"signer == address(0)\" */ _2, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ sub(shl(160, 1), 1)))\n                        /// @src 46:6491:6604  \"if (signer == address(0)) {...\"\n                        {\n                            /// @src 46:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var := /** @src -1:-1:-1 */ 0\n                            /// @src 46:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_1 := /** @src 46:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                            /// @src 46:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_2 := /** @src -1:-1:-1 */ 0\n                            /// @src 46:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            leave\n                        }\n                        /// @src 46:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var := _2\n                        var_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 46:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var_2 := /** @src -1:-1:-1 */ 0\n                    }\n                    /// @ast-id 49953 @src 43:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback(var_value) -> var__mpos\n                    {\n                        /// @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 43:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let ret := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let slotValue := sload(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0)\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let length := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let _1 := 1\n                            length := shr(1, slotValue)\n                            let outOfPlaceEncoding := and(slotValue, 1)\n                            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                            let _2 := 32\n                            if eq(outOfPlaceEncoding, lt(length, _2))\n                            {\n                                mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0, shl(224, 0x4e487b71))\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                mstore(4, 0x22)\n                                revert(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0x24)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(memPtr, length)\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            switch outOfPlaceEncoding\n                            case 0 {\n                                mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ _2), and(slotValue, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ not(255)))\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                ret := add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), _2)\n                            }\n                            case 1 {\n                                mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0, 0)\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                                let i := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                for { } lt(i, length) { i := add(i, _2) }\n                                {\n                                    mstore(add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2), sload(dataPos))\n                                    dataPos := add(dataPos, _1)\n                                }\n                                ret := add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2)\n                            }\n                            finalize_allocation(memPtr, sub(ret, memPtr))\n                            /// @src 43:3623:3635  \"return store\"\n                            var__mpos := memPtr\n                            leave\n                        }\n                        default /// @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 43:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 43:2702:2771  \"if (result > 31) {...\"\n                            if /** @src 43:2706:2717  \"result > 31\" */ gt(expr, /** @src 43:2715:2717  \"31\" */ 0x1f)\n                            /// @src 43:2702:2771  \"if (result > 31) {...\"\n                            {\n                                /// @src 43:2740:2760  \"InvalidShortString()\"\n                                let _3 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                                /// @src 43:2740:2760  \"InvalidShortString()\"\n                                mstore(_3, shl(226, 0x2cd44ac3))\n                                revert(_3, 4)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let memPtr_1 := mload(64)\n                            finalize_allocation_9021(memPtr_1)\n                            /// @src 43:2367:2457  \"assembly {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(memPtr_1, /** @src 43:2311:2313  \"32\" */ 0x20), /** @src 43:2367:2457  \"assembly {...\" */ var_value)\n                            /// @src 43:3570:3592  \"return toString(value)\"\n                            var__mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @ast-id 49953 @src 43:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback_5521(var_value) -> var_mpos\n                    {\n                        /// @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 43:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let ret := /** @src -1:-1:-1 */ 0\n                            /// @src 47:6584:6600  \"_versionFallback\"\n                            let _1 := 0x01\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let slotValue := sload(/** @src 47:6584:6600  \"_versionFallback\" */ 0x01)\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let length := /** @src -1:-1:-1 */ 0\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            length := shr(/** @src 47:6584:6600  \"_versionFallback\" */ 0x01, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ slotValue)\n                            let outOfPlaceEncoding := and(slotValue, /** @src 47:6584:6600  \"_versionFallback\" */ 0x01)\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                            let _2 := 32\n                            if eq(outOfPlaceEncoding, lt(length, _2))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0x4e487b71))\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                mstore(4, 0x22)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0x24)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(memPtr, length)\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            switch outOfPlaceEncoding\n                            case 0 {\n                                mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ _2), and(slotValue, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ not(255)))\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                ret := add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), _2)\n                            }\n                            case 1 {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 47:6584:6600  \"_versionFallback\" */ 0x01)\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let dataPos := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                for { } lt(i, length) { i := add(i, _2) }\n                                {\n                                    mstore(add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2), sload(dataPos))\n                                    dataPos := add(dataPos, /** @src 47:6584:6600  \"_versionFallback\" */ _1)\n                                }\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                ret := add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2)\n                            }\n                            finalize_allocation(memPtr, sub(ret, memPtr))\n                            /// @src 43:3623:3635  \"return store\"\n                            var_mpos := memPtr\n                            leave\n                        }\n                        default /// @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 43:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 43:2702:2771  \"if (result > 31) {...\"\n                            if /** @src 43:2706:2717  \"result > 31\" */ gt(expr, /** @src 43:2715:2717  \"31\" */ 0x1f)\n                            /// @src 43:2702:2771  \"if (result > 31) {...\"\n                            {\n                                /// @src 43:2740:2760  \"InvalidShortString()\"\n                                let _3 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                                /// @src 43:2740:2760  \"InvalidShortString()\"\n                                mstore(_3, shl(226, 0x2cd44ac3))\n                                revert(_3, 4)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let memPtr_1 := mload(64)\n                            finalize_allocation_9021(memPtr_1)\n                            /// @src 43:2367:2457  \"assembly {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(memPtr_1, /** @src 43:2311:2313  \"32\" */ 0x20), /** @src 43:2367:2457  \"assembly {...\" */ var_value)\n                            /// @src 43:3570:3592  \"return toString(value)\"\n                            var_mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @ast-id 51095 @src 47:3845:4107  \"function _domainSeparatorV4() internal view returns (bytes32) {...\"\n                    function fun_domainSeparatorV4() -> var\n                    {\n                        /// @src 47:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        let expr := /** @src 47:3921:3949  \"address(this) == _cachedThis\" */ eq(/** @src 47:3929:3933  \"this\" */ address(), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 47:3938:3949  \"_cachedThis\" */ loadimmutable(\"50997\"), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ sub(shl(160, 1), 1)))\n                        /// @src 47:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        if expr\n                        {\n                            expr := /** @src 47:3953:3984  \"block.chainid == _cachedChainId\" */ eq(/** @src 47:3953:3966  \"block.chainid\" */ chainid(), /** @src 47:3970:3984  \"_cachedChainId\" */ loadimmutable(\"50995\"))\n                        }\n                        /// @src 47:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        switch expr\n                        case 0 {\n                            /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let expr_mpos := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                            /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let _1 := add(expr_mpos, 0x20)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(_1, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 64), /** @src 47:4226:4237  \"_hashedName\" */ loadimmutable(\"50999\"))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 47:4239:4253  \"_hashedVersion\" */ loadimmutable(\"51001\"))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 47:4255:4268  \"block.chainid\" */ chainid())\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 47:3929:3933  \"this\" */ address())\n                            /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            mstore(expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let newFreePtr := add(expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                            /// @src 47:4060:4090  \"return _buildDomainSeparator()\"\n                            var := /** @src 47:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _1, mload(/** @src 47:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos))\n                            /// @src 47:4060:4090  \"return _buildDomainSeparator()\"\n                            leave\n                        }\n                        default /// @src 47:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        {\n                            /// @src 47:4000:4029  \"return _cachedDomainSeparator\"\n                            var := /** @src 47:4007:4029  \"_cachedDomainSeparator\" */ loadimmutable(\"50993\")\n                            /// @src 47:4000:4029  \"return _cachedDomainSeparator\"\n                            leave\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000818000a\"\n            }\n        }\n        /// @use-src 29:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 34:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 35:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 36:\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 37:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 40:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 59:\"src/PranavCoin.sol\"\n        object \"PranavCoin_56415\" {\n            code {\n                {\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    let _1 := memoryguard(0x80)\n                    if callvalue() { revert(0, 0) }\n                    let _2 := 64\n                    let newFreePtr := add(_1, _2)\n                    let _3 := sub(shl(64, 1), 1)\n                    if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    mstore(_2, newFreePtr)\n                    mstore(_1, 10)\n                    let _4 := 32\n                    mstore(add(_1, _4), \"PranavCoin\")\n                    let memPtr := mload(_2)\n                    let newFreePtr_1 := add(memPtr, _2)\n                    if or(gt(newFreePtr_1, _3), lt(newFreePtr_1, memPtr))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    mstore(_2, newFreePtr_1)\n                    let _5 := 3\n                    mstore(memPtr, _5)\n                    mstore(add(memPtr, _4), \"PRC\")\n                    let newLen := mload(_1)\n                    if gt(newLen, _3)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    let _6 := sload(_5)\n                    let length := /** @src -1:-1:-1 */ 0\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    let _7 := 1\n                    length := shr(_7, _6)\n                    let outOfPlaceEncoding := and(_6, _7)\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, _4))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    let _8 := 31\n                    if gt(length, _8)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _5)\n                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                        let deleteStart := add(data, shr(5, add(newLen, _8)))\n                        if lt(newLen, _4) { deleteStart := data }\n                        let _9 := add(data, shr(5, add(length, _8)))\n                        let start := deleteStart\n                        for { } lt(start, _9) { start := add(start, _7) }\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    let srcOffset := /** @src -1:-1:-1 */ 0\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    srcOffset := _4\n                    switch gt(newLen, _8)\n                    case 1 {\n                        let loopEnd := and(newLen, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _5)\n                        let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        for { } lt(i, loopEnd) { i := add(i, _4) }\n                        {\n                            sstore(dstPtr, mload(add(_1, srcOffset)))\n                            dstPtr := add(dstPtr, _7)\n                            srcOffset := add(srcOffset, _4)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(_1, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(shr(and(shl(_5, newLen), 248), not(0)))))\n                        }\n                        sstore(_5, add(shl(_7, newLen), _7))\n                    }\n                    default {\n                        let value := /** @src -1:-1:-1 */ 0\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        if newLen\n                        {\n                            value := mload(add(_1, srcOffset))\n                        }\n                        sstore(_5, or(and(value, not(shr(shl(_5, newLen), not(0)))), shl(_7, newLen)))\n                    }\n                    let newLen_1 := mload(memPtr)\n                    if gt(newLen_1, _3)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 35:1690:1707  \"_symbol = symbol_\" */ 0x04, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    /// @src 35:1690:1707  \"_symbol = symbol_\"\n                    let _10 := 0x04\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    let _11 := sload(/** @src 35:1690:1707  \"_symbol = symbol_\" */ _10)\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    length_1 := shr(_7, _11)\n                    let outOfPlaceEncoding_1 := and(_11, _7)\n                    if iszero(outOfPlaceEncoding_1)\n                    {\n                        length_1 := and(length_1, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_1, lt(length_1, _4))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 35:1690:1707  \"_symbol = symbol_\" */ _10, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    if gt(length_1, _8)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 35:1690:1707  \"_symbol = symbol_\" */ _10)\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _8)))\n                        if lt(newLen_1, _4) { deleteStart_1 := data_1 }\n                        let _12 := add(data_1, shr(5, add(length_1, _8)))\n                        let start_1 := deleteStart_1\n                        for { } lt(start_1, _12) { start_1 := add(start_1, _7) }\n                        {\n                            sstore(start_1, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    srcOffset_1 := _4\n                    switch gt(newLen_1, _8)\n                    case 1 {\n                        let loopEnd_1 := and(newLen_1, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 35:1690:1707  \"_symbol = symbol_\" */ _10)\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                        let i_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _4) }\n                        {\n                            sstore(dstPtr_1, mload(add(memPtr, srcOffset_1)))\n                            dstPtr_1 := add(dstPtr_1, _7)\n                            srcOffset_1 := add(srcOffset_1, _4)\n                        }\n                        if lt(loopEnd_1, newLen_1)\n                        {\n                            let lastValue_1 := mload(add(memPtr, srcOffset_1))\n                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(_5, newLen_1), 248), not(0)))))\n                        }\n                        sstore(/** @src 35:1690:1707  \"_symbol = symbol_\" */ _10, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ add(shl(_7, newLen_1), _7))\n                    }\n                    default {\n                        let value_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        if newLen_1\n                        {\n                            value_1 := mload(add(memPtr, srcOffset_1))\n                        }\n                        sstore(/** @src 35:1690:1707  \"_symbol = symbol_\" */ _10, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ or(and(value_1, not(shr(shl(_5, newLen_1), not(0)))), shl(_7, newLen_1)))\n                    }\n                    /// @src 29:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    if /** @src 29:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 59:288:298  \"msg.sender\" */ caller())\n                    /// @src 29:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    {\n                        /// @src 29:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        let _13 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                        /// @src 29:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        mstore(_13, shl(224, 0x1e4fbdf7))\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        mstore(/** @src 29:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(_13, /** @src 35:1690:1707  \"_symbol = symbol_\" */ _10), /** @src -1:-1:-1 */ 0)\n                        /// @src 29:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        revert(_13, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                    }\n                    let _14 := sload(/** @src 29:3004:3010  \"_owner\" */ 0x05)\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    sstore(/** @src 29:3004:3010  \"_owner\" */ 0x05, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ or(and(_14, not(sub(shl(160, 1), 1))), /** @src 59:288:298  \"msg.sender\" */ caller()))\n                    /// @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    let _15 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                    /// @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    log3(/** @src -1:-1:-1 */ 0, 0, /** @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ and(_14, sub(shl(160, 1), 1)), /** @src 59:288:298  \"msg.sender\" */ caller())\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    let _16 := datasize(\"PranavCoin_56415_deployed\")\n                    codecopy(_15, dataoffset(\"PranavCoin_56415_deployed\"), _16)\n                    return(_15, _16)\n                }\n            }\n            /// @use-src 29:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 35:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 40:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 59:\"src/PranavCoin.sol\"\n            object \"PranavCoin_56415_deployed\" {\n                code {\n                    {\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x06fdde03 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let ret := 0\n                                let slotValue := sload(/** @src 35:1856:1861  \"_name\" */ 0x03)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let length := 0\n                                let _4 := 1\n                                length := shr(1, slotValue)\n                                let outOfPlaceEncoding := and(slotValue, 1)\n                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                let _5 := 32\n                                if eq(outOfPlaceEncoding, lt(length, _5))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(0, 0x24)\n                                }\n                                mstore(_1, length)\n                                switch outOfPlaceEncoding\n                                case 0 {\n                                    mstore(add(_1, _5), and(slotValue, not(255)))\n                                    ret := add(add(_1, shl(5, iszero(iszero(length)))), _5)\n                                }\n                                case 1 {\n                                    mstore(0, /** @src 35:1856:1861  \"_name\" */ 0x03)\n                                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                    let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                                    let i := 0\n                                    for { } lt(i, length) { i := add(i, _5) }\n                                    {\n                                        mstore(add(add(_1, i), _5), sload(dataPos))\n                                        dataPos := add(dataPos, _4)\n                                    }\n                                    ret := add(add(_1, i), _5)\n                                }\n                                let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(_2, newFreePtr)\n                                return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                            }\n                            case 0x095ea7b3 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                let value0 := abi_decode_address()\n                                let _6 := calldataload(36)\n                                /// @src 35:9809:9898  \"if (owner == address(0)) {...\"\n                                if /** @src 35:9813:9832  \"owner == address(0)\" */ iszero(/** @src 40:735:745  \"msg.sender\" */ caller())\n                                /// @src 35:9809:9898  \"if (owner == address(0)) {...\"\n                                {\n                                    /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                    let _7 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                    mstore(_7, shl(224, 0xe602df05))\n                                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                    mstore(/** @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\" */ add(_7, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                    /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                    revert(_7, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                }\n                                let _8 := and(/** @src 35:9911:9932  \"spender == address(0)\" */ value0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 35:9907:9997  \"if (spender == address(0)) {...\"\n                                if /** @src 35:9911:9932  \"spender == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _8)\n                                /// @src 35:9907:9997  \"if (spender == address(0)) {...\"\n                                {\n                                    /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                    let _9 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                    mstore(_9, shl(225, 0x4a1406b1))\n                                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                    mstore(/** @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\" */ add(_9, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                    /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                    revert(_9, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                }\n                                mstore(0, /** @src 40:735:745  \"msg.sender\" */ caller())\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                mstore(0x20, /** @src 35:8842:8846  \"true\" */ 0x01)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let _10 := keccak256(0, _2)\n                                mstore(0, _8)\n                                mstore(0x20, _10)\n                                sstore(keccak256(0, _2), _6)\n                                /// @src 35:10085:10116  \"Approval(owner, spender, value)\"\n                                let _11 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                mstore(_11, _6)\n                                /// @src 35:10085:10116  \"Approval(owner, spender, value)\"\n                                log3(_11, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x20, /** @src 35:10085:10116  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 40:735:745  \"msg.sender\" */ caller(), /** @src 35:10085:10116  \"Approval(owner, spender, value)\" */ _8)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let memPos := mload(_2)\n                                mstore(memPos, /** @src 35:8842:8846  \"true\" */ 0x01)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                return(memPos, 0x20)\n                            }\n                            case 0x18160ddd {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _12 := sload(/** @src 35:2927:2939  \"_totalSupply\" */ 0x02)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, _12)\n                                return(memPos_1, 32)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                                let value0_1 := abi_decode_address()\n                                let value1 := abi_decode_address_4059()\n                                let value := calldataload(68)\n                                let _13 := and(value0_1, sub(shl(160, 1), 1))\n                                mstore(0, _13)\n                                mstore(32, 1)\n                                let _14 := keccak256(0, _2)\n                                mstore(0, /** @src 40:735:745  \"msg.sender\" */ caller())\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                mstore(32, _14)\n                                let _15 := sload(keccak256(0, _2))\n                                /// @src 35:10576:10886  \"if (currentAllowance != type(uint256).max) {...\"\n                                if /** @src 35:10580:10617  \"currentAllowance != type(uint256).max\" */ iszero(eq(_15, /** @src 35:10600:10617  \"type(uint256).max\" */ not(0)))\n                                /// @src 35:10576:10886  \"if (currentAllowance != type(uint256).max) {...\"\n                                {\n                                    /// @src 35:10633:10763  \"if (currentAllowance < value) {...\"\n                                    if /** @src 35:10637:10661  \"currentAllowance < value\" */ lt(_15, value)\n                                    /// @src 35:10633:10763  \"if (currentAllowance < value) {...\"\n                                    {\n                                        /// @src 35:10688:10748  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        let _16 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                        /// @src 35:10688:10748  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        mstore(_16, shl(225, 0x7dc7a0d9))\n                                        revert(_16, sub(abi_encode_address_uint256_uint256(add(_16, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), /** @src 40:735:745  \"msg.sender\" */ caller(), /** @src 35:10688:10748  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _15, value), _16))\n                                    }\n                                    /// @src 35:9809:9898  \"if (owner == address(0)) {...\"\n                                    if /** @src 35:9813:9832  \"owner == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _13)\n                                    /// @src 35:9809:9898  \"if (owner == address(0)) {...\"\n                                    {\n                                        /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                        let _17 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                        /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                        mstore(_17, shl(224, 0xe602df05))\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        mstore(/** @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\" */ add(_17, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                        /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                        revert(_17, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                    }\n                                    /// @src 35:9907:9997  \"if (spender == address(0)) {...\"\n                                    if /** @src 35:9911:9932  \"spender == address(0)\" */ iszero(/** @src 40:735:745  \"msg.sender\" */ caller())\n                                    /// @src 35:9907:9997  \"if (spender == address(0)) {...\"\n                                    {\n                                        /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                        let _18 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                        /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                        mstore(_18, shl(225, 0x4a1406b1))\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        mstore(/** @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\" */ add(_18, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                        /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                        revert(_18, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                    }\n                                    mstore(0, _13)\n                                    mstore(32, 1)\n                                    let _19 := keccak256(0, _2)\n                                    mstore(0, /** @src 40:735:745  \"msg.sender\" */ caller())\n                                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                    mstore(32, _19)\n                                    sstore(keccak256(0, _2), sub(/** @src 35:10829:10853  \"currentAllowance - value\" */ _15, value))\n                                }\n                                /// @src 35:4986:4991  \"value\"\n                                fun_transfer(value0_1, value1, value)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, 1)\n                                return(memPos_2, 32)\n                            }\n                            case 0x313ce567 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, /** @src 35:2780:2782  \"18\" */ 0x12)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                return(memPos_3, 32)\n                            }\n                            case 0x40c10f19 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                let value0_2 := abi_decode_address()\n                                let value_1 := calldataload(36)\n                                /// @src 29:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let _20 := and(/** @src 35:7528:7549  \"account == address(0)\" */ value0_2, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 35:7524:7615  \"if (account == address(0)) {...\"\n                                if /** @src 35:7528:7549  \"account == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _20)\n                                /// @src 35:7524:7615  \"if (account == address(0)) {...\"\n                                {\n                                    /// @src 35:7572:7604  \"ERC20InvalidReceiver(address(0))\"\n                                    let _21 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 35:7572:7604  \"ERC20InvalidReceiver(address(0))\"\n                                    mstore(_21, shl(224, 0xec442f05))\n                                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                    mstore(/** @src 35:7572:7604  \"ERC20InvalidReceiver(address(0))\" */ add(_21, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                    /// @src 35:7572:7604  \"ERC20InvalidReceiver(address(0))\"\n                                    revert(_21, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                }\n                                let _22 := sload(/** @src 35:6233:6254  \"_totalSupply += value\" */ 0x02)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let sum := add(_22, value_1)\n                                if gt(_22, sum)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x11)\n                                    revert(0, 36)\n                                }\n                                sstore(/** @src 35:6233:6254  \"_totalSupply += value\" */ 0x02, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ sum)\n                                mstore(0, _20)\n                                mstore(0x20, 0)\n                                let dataSlot := keccak256(0, _2)\n                                sstore(dataSlot, add(sload(/** @src 35:7021:7043  \"_balances[to] += value\" */ dataSlot), /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ value_1))\n                                /// @src 35:7083:7108  \"Transfer(from, to, value)\"\n                                let _23 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                mstore(_23, value_1)\n                                /// @src 35:7083:7108  \"Transfer(from, to, value)\"\n                                log3(_23, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x20, /** @src 35:7083:7108  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0, /** @src 35:7083:7108  \"Transfer(from, to, value)\" */ _20)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                return(0, 0)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, 0)\n                                let _24 := sload(keccak256(0, _2))\n                                let memPos_4 := mload(_2)\n                                mstore(memPos_4, _24)\n                                return(memPos_4, 32)\n                            }\n                            case 0x715018a6 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 29:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let _25 := sload(/** @src 29:3004:3010  \"_owner\" */ 0x05)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                sstore(/** @src 29:3004:3010  \"_owner\" */ 0x05, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ and(_25, shl(160, 0xffffffffffffffffffffffff)))\n                                /// @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0, 0, /** @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ and(_25, sub(shl(160, 1), 1)), 0)\n                                return(0, 0)\n                            }\n                            case 0x8da5cb5b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_2 := and(sload(/** @src 29:1710:1716  \"_owner\" */ 0x05), /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                let memPos_5 := mload(_2)\n                                mstore(memPos_5, value_2)\n                                return(memPos_5, 32)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPtr := mload(_2)\n                                let ret_1 := 0\n                                let slotValue_1 := sload(_3)\n                                let length_1 := 0\n                                let _26 := 1\n                                length_1 := shr(1, slotValue_1)\n                                let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                                if iszero(outOfPlaceEncoding_1)\n                                {\n                                    length_1 := and(length_1, 0x7f)\n                                }\n                                let _27 := 32\n                                if eq(outOfPlaceEncoding_1, lt(length_1, _27))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(0, 0x24)\n                                }\n                                mstore(memPtr, length_1)\n                                switch outOfPlaceEncoding_1\n                                case 0 {\n                                    mstore(add(memPtr, _27), and(slotValue_1, not(255)))\n                                    ret_1 := add(add(memPtr, shl(5, iszero(iszero(length_1)))), _27)\n                                }\n                                case 1 {\n                                    mstore(0, _3)\n                                    let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                                    let i_1 := 0\n                                    for { } lt(i_1, length_1) { i_1 := add(i_1, _27) }\n                                    {\n                                        mstore(add(add(memPtr, i_1), _27), sload(dataPos_1))\n                                        dataPos_1 := add(dataPos_1, _26)\n                                    }\n                                    ret_1 := add(add(memPtr, i_1), _27)\n                                }\n                                let newFreePtr_1 := add(memPtr, and(add(sub(ret_1, memPtr), 31), not(31)))\n                                if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(_2, newFreePtr_1)\n                                return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr), newFreePtr_1))\n                            }\n                            case 0xa9059cbb {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                let value0_3 := abi_decode_address()\n                                /// @src 35:3459:3464  \"value\"\n                                fun_transfer(/** @src 40:735:745  \"msg.sender\" */ caller(), /** @src 35:3459:3464  \"value\" */ value0_3, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ calldataload(36))\n                                let memPos_6 := mload(_2)\n                                mstore(memPos_6, 1)\n                                return(memPos_6, 32)\n                            }\n                            case 0xdd62ed3e {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                let value0_4 := abi_decode_address()\n                                let value1_1 := abi_decode_address_4059()\n                                let _28 := sub(shl(160, 1), 1)\n                                mstore(0, and(value0_4, _28))\n                                mstore(32, /** @src 35:3657:3668  \"_allowances\" */ 0x01)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let _29 := keccak256(0, _2)\n                                mstore(0, and(value1_1, _28))\n                                mstore(32, _29)\n                                let _30 := sload(keccak256(0, _2))\n                                let memPos_7 := mload(_2)\n                                mstore(memPos_7, _30)\n                                return(memPos_7, 32)\n                            }\n                            case 0xf2fde38b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value0_5 := abi_decode_address()\n                                /// @src 29:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let _31 := sub(shl(160, 1), 1)\n                                let _32 := and(/** @src 29:2627:2649  \"newOwner == address(0)\" */ value0_5, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _31)\n                                /// @src 29:2623:2714  \"if (newOwner == address(0)) {...\"\n                                if /** @src 29:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _32)\n                                /// @src 29:2623:2714  \"if (newOwner == address(0)) {...\"\n                                {\n                                    /// @src 29:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    let _33 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 29:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    mstore(_33, shl(224, 0x1e4fbdf7))\n                                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                    mstore(/** @src 29:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_33, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                    /// @src 29:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    revert(_33, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                }\n                                let _34 := sload(/** @src 29:3004:3010  \"_owner\" */ 0x05)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                sstore(/** @src 29:3004:3010  \"_owner\" */ 0x05, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ or(and(_34, shl(160, 0xffffffffffffffffffffffff)), _32))\n                                /// @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0, 0, /** @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ and(_34, _31), /** @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _32)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                return(0, 0)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_string(headStart, value0) -> tail\n                    {\n                        let _1 := 32\n                        mstore(headStart, 32)\n                        let length := mload(value0)\n                        mstore(add(headStart, 32), length)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                        }\n                        mstore(add(add(headStart, length), 64), 0)\n                        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address_4059() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n                    {\n                        tail := add(headStart, 96)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                        mstore(add(headStart, 64), value2)\n                    }\n                    /// @ast-id 48620 @src 35:5393:5693  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                    function fun_transfer(var_from, var_to, var_value)\n                    {\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 35:5476:5494  \"from == address(0)\" */ var_from, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _1)\n                        /// @src 35:5472:5558  \"if (from == address(0)) {...\"\n                        if /** @src 35:5476:5494  \"from == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _2)\n                        /// @src 35:5472:5558  \"if (from == address(0)) {...\"\n                        {\n                            /// @src 35:5517:5547  \"ERC20InvalidSender(address(0))\"\n                            let _3 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(64)\n                            /// @src 35:5517:5547  \"ERC20InvalidSender(address(0))\"\n                            mstore(_3, shl(225, 0x4b637e8f))\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            mstore(/** @src 35:5517:5547  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 35:5492:5493  \"0\" */ 0x00)\n                            /// @src 35:5517:5547  \"ERC20InvalidSender(address(0))\"\n                            revert(_3, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                        }\n                        let _4 := and(/** @src 35:5571:5587  \"to == address(0)\" */ var_to, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _1)\n                        /// @src 35:5567:5653  \"if (to == address(0)) {...\"\n                        if /** @src 35:5571:5587  \"to == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                        /// @src 35:5567:5653  \"if (to == address(0)) {...\"\n                        {\n                            /// @src 35:5610:5642  \"ERC20InvalidReceiver(address(0))\"\n                            let _5 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(64)\n                            /// @src 35:5610:5642  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(_5, /** @src 35:7572:7604  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            mstore(/** @src 35:5610:5642  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 35:5492:5493  \"0\" */ 0x00)\n                            /// @src 35:5610:5642  \"ERC20InvalidReceiver(address(0))\"\n                            revert(_5, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                        }\n                        mstore(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _2)\n                        mstore(0x20, /** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0)\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        let _6 := sload(keccak256(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x40))\n                        /// @src 35:6336:6451  \"if (fromBalance < value) {...\"\n                        if /** @src 35:6340:6359  \"fromBalance < value\" */ lt(_6, var_value)\n                        /// @src 35:6336:6451  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 35:6386:6436  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            let _7 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(0x40)\n                            /// @src 35:6386:6436  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(_7, shl(226, 0x391434e3))\n                            revert(_7, sub(abi_encode_address_uint256_uint256(add(_7, 4), var_from, _6, var_value), _7))\n                        }\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        mstore(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _2)\n                        mstore(0x20, /** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0)\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        sstore(keccak256(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x40), sub(/** @src 35:6589:6608  \"fromBalance - value\" */ _6, var_value))\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        mstore(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                        let dataSlot := keccak256(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x40)\n                        sstore(dataSlot, add(sload(/** @src 35:7021:7043  \"_balances[to] += value\" */ dataSlot), /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ var_value))\n                        /// @src 35:7083:7108  \"Transfer(from, to, value)\"\n                        let _8 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(0x40)\n                        mstore(_8, var_value)\n                        /// @src 35:7083:7108  \"Transfer(from, to, value)\"\n                        log3(_8, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x20, /** @src 35:7083:7108  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n                    }\n                    /// @ast-id 48060 @src 29:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                    function fun_checkOwner()\n                    {\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        let value := and(sload(/** @src 29:1710:1716  \"_owner\" */ 0x05), /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 29:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        if /** @src 29:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ value, /** @src 40:735:745  \"msg.sender\" */ caller()))\n                        /// @src 29:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        {\n                            /// @src 29:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            let _1 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(64)\n                            /// @src 29:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            mstore(_1, shl(224, 0x118cdaa7))\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            mstore(/** @src 29:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 40:735:745  \"msg.sender\" */ caller())\n                            /// @src 29:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            revert(_1, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000818000a\"\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000818000a\"\n    }\n}\n","hash":"010003fb0ea14142c9f2b0e5f04ce656ecc6d0dd4cf703b18909f410ab087136","factoryDependencies":{"01000099d8c437db3f79f2b41b7a6772dfa52f4f3d4d686867c76639536eb836":"script/DeployMerkleAirdrop.s.sol:DeployMerkleAirdrop","010001254767133c0bfab0f12cca9e4bf07dcd32133865c9401a3cd248cb8010":"src/PranavCoin.sol:PranavCoin","01000219f332fef3bb095dec9e508e76220eb3a464d321f351d201f347c9d621":"src/Merkle-Airdrop.sol:MerkleAirdrop"},"id":60}