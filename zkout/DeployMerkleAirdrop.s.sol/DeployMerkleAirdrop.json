{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"DeployMerkleAirdrop.s.sol:DeployMerkleAirdrop\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.gt\t@.BB0_8\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.eq\t@.BB0_10\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_12[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_1[0], r2, r2\n\tor\t@CPI0_2[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_3[0], r0, r1\n\tadd\t13, r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_8:\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.eq\t@.BB0_15\n\tsub.s!\t@CPI0_7[0], r1, r1\n\tjump.ne\t@.BB0_2\n.BB0_10:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_deployMerkleAirdrop, @DEFAULT_UNWIND\n\tand\t@CPI0_13[0], r2, r2\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r2\n\tand\t@CPI0_13[0], r1, r1\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_14[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_15:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nfun_deployMerkleAirdrop:\n.func_begin1:\n\tnop\tstack+=[4]\n\tadd\t@CPI1_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB1_3\n\tld.1\t64, r4\n\tadd\t@CPI1_4[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI1_2[0], r4, r3\n\tadd\tr4, r0, stack-[4]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[3]\n\tshl.s\t192, r2, r1\n\tor\tstack-[3], r1, r1\n\tor\t@CPI1_5[0], r1, r1\n\tadd\t@CPI1_1[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_2[0], r3, stack[@returndatasize]\n\tand\t@CPI1_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_5\n\tadd\tstack-[4], r0, r3\n\tsub.s!\t@CPI1_6[0], r3, r1\n\tjump.ge\t@.BB1_11\n\tst.1\t64, r3\n\tsub.s!\t@CPI1_7[0], r3, r1\n\tjump.gt\t@.BB1_11\n\tadd\t36, r3, r1\n\tadd\t@CPI1_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tcontext.gas_left\tr2\n\tadd\t96, r0, r4\n\tadd\tr4, r0, stack-[2]\n\tst.1\tr1, r4\n\tadd\t@CPI1_9[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t100, r3, r1\n\tst.1\tr1, r0\n\tadd\t4, r3, r1\n\tst.1\tr1, r0\n\tadd\t@CPI1_2[0], r0, r1\n\tsub.s!\t@CPI1_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\tstack-[3], r1, r1\n\tor\t@CPI1_10[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_13\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB1_16\n\tadd\tr2, r0, stack-[1]\n\tand\t@CPI1_11[0], r2, r3\n\tld.1\t64, r1\n\tsub.s!\t@CPI1_7[0], r1, r2\n\tjump.gt\t@.BB1_11\n\tadd\t164, r1, r2\n\tadd\tr3, r0, stack-[4]\n\tst.1\tr2, r3\n\tadd\t132, r1, r2\n\tadd\t@CPI1_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t@CPI1_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t100, r1, r2\n\tcontext.gas_left\tr3\n\tadd\t64, r0, r4\n\tst.1\tr2, r4\n\tadd\t68, r1, r2\n\tadd\tstack-[2], r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI1_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI1_2[0], r0, r2\n\tsub.s!\t@CPI1_2[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI1_2[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI1_14[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_23\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB1_26\n\tadd\t13, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI1_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB1_3\n\tld.1\t64, r5\n\tadd\t36, r5, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI1_15[0], r0, r1\n\tst.1\tr5, r1\n\tadd\tstack-[3], r0, r1\n\tand\t@CPI1_11[0], r1, r1\n\tadd\t4, r5, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[4], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB1_40\n\tadd\t@CPI1_2[0], r0, r4\n\tsub.s!\t@CPI1_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI1_2[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI1_16[0], r1, r1\n\tadd\tr5, r0, stack-[4]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_2[0], r3, stack[@returndatasize]\n\tand\t@CPI1_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_35\n.BB1_40:\n\tsub.s!\t@CPI1_17[0], r5, r1\n\tjump.gt\t@.BB1_11\n\tst.1\t64, r5\n\tadd\t@CPI1_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB1_3\n\tld.1\t64, r4\n\tadd\t@CPI1_18[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI1_2[0], r4, r3\n\tadd\tr4, r0, stack-[4]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_5[0], r1, r1\n\tadd\t@CPI1_1[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_2[0], r3, stack[@returndatasize]\n\tand\t@CPI1_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_44\n\tadd\tstack-[4], r0, r2\n\tsub.s!\t@CPI1_17[0], r2, r1\n\tjump.gt\t@.BB1_11\n\tst.1\t64, r2\n\tadd\tstack-[3], r0, r1\n\tadd\tstack-[1], r0, r2\n\tret\n.BB1_11:\n\tadd\t@CPI1_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_20[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_1:\n\trevert\n.BB1_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_5:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB1_54\n\tadd\tr0, r0, r6\n.BB1_7:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_7\n.BB1_54:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB1_8\n\tjump\t@.BB1_9\n.BB1_13:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI1_2[0], r2, stack[@returndatasize]\n\tand\t@CPI1_2[0], r2, r2\n\tjump\t@.BB1_18\n.BB1_16:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n.BB1_18:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB1_53\n\tadd\tr0, r0, r6\n.BB1_20:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_20\n.BB1_53:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB1_21\n\tjump\t@.BB1_22\n.BB1_23:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI1_2[0], r2, stack[@returndatasize]\n\tand\t@CPI1_2[0], r2, r2\n\tjump\t@.BB1_29\n.BB1_26:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n.BB1_29:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB1_52\n\tadd\tr0, r0, r6\n.BB1_31:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_31\n.BB1_52:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_22\n.BB1_21:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB1_22:\n\tadd\t@CPI1_2[0], r0, r1\n\tsub.s!\t@CPI1_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI1_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_44:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB1_50\n\tadd\tr0, r0, r6\n.BB1_46:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_46\n.BB1_50:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_9\n.BB1_8:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB1_9:\n\tadd\t@CPI1_2[0], r0, r1\n\tsub.s!\t@CPI1_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_35:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB1_51\n\tadd\tr0, r0, r6\n.BB1_37:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_37\n.BB1_51:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_39\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB1_39:\n\tadd\t@CPI1_2[0], r0, r1\n\tsub.s!\t@CPI1_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__cxa_throw:\n.func_begin2:\n\trevert\n.func_end2:\n\n__farcall:\n.func_begin3:\n.tmp0:\n\tfar_call\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n__staticcall:\n.func_begin4:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB4_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_2:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -16711936\nCPI0_2:\n\t.cell 65537\nCPI0_3:\n\t.cell 100000000000000000000\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\n\t.cell 3225444901\nCPI0_6:\n\t.cell 4174167879\nCPI0_7:\n\t.cell 3225444902\nCPI0_8:\n\t.cell 123497912\nCPI0_9:\n\t.cell 2927812191\nCPI0_10:\n\t.cell 16711680\nCPI0_11:\n\t.cell 2535301202817642044428229017600\nCPI0_12:\nCPI1_12:\n\t.cell -38733980356924212998632005821026408372590900073093808180983500287173593348156\nCPI0_13:\nCPI1_11:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_14:\n\t.cell 5070602400912917605986812821504\nCPI1_0:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI1_1:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI1_3:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI1_4:\n\t.cell 57763817484313164028313283939489504447484577087939811246371138302511295758336\nCPI1_5:\n\t.cell 316912650057057350374175801344\nCPI1_6:\n\t.cell 18446744073709551616\nCPI1_7:\n\t.cell 18446744073709551483\nCPI1_8:\n\t.cell 452320755367215223072041012693165450642974499454535319430480752770768666640\nCPI1_9:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI1_10:\n\t.cell 904625697166532776746648320380374280103671765658434358441154937409622769664\nCPI1_13:\n\t.cell 452327351686492022877892650253381504445681004043670624601512424814225774113\nCPI1_14:\n\t.cell 904625697166532776746648320380374280103671770729036759354072543396435591168\nCPI1_15:\n\t.cell 29289127993025145568725129057828671567744754166070328588094505464281371246592\nCPI1_16:\n\t.cell 5387515050969974956360988622848\nCPI1_17:\n\t.cell 18446744073709551615\nCPI1_18:\n\t.cell 53787885087763336501906314510680303380505312860176240795757540877198344323072\nCPI1_19:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI1_20:\n\t.cell 2852213850513516153367582212096\n","methodIdentifiers":{"IS_SCRIPT()":"f8ccbf47","deployMerkleAirdrop()":"075c6db8","run()":"c0406226","s_merkleRoot()":"ae82de5f"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.3a2587f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployMerkleAirdrop\",\"outputs\":[{\"internalType\":\"contract MerkleAirdrop\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract PranavCoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[{\"internalType\":\"contract MerkleAirdrop\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract PranavCoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/DeployMerkleAirdrop.s.sol\":\"DeployMerkleAirdrop\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":murky/=lib/murky/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12\",\"dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x18436638da96539b6a9f971f8ce332c6fcad32d15c988af689b174f753d9936b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0351b5b167c9f0f6eb670bc6db5e9579aadb9a42edc62256c182695c3e9bf47e\",\"dweb:/ipfs/QmSQPNXU4NYhYojvyqHRzQx2duRx5njv6AHssoJMQb8Tq1\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x80b4189de089dc632b752b365a16c5063b58cc24da0dd38b82f2c25f56d25c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e2717e78844156a86733f1cada84dba906ffe03e4957de12ca219c65e9191b\",\"dweb:/ipfs/QmW8vg3AafPJRo7EC75RQJTtjiaYmfPa4U4sqmEuBXXzaP\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0xc452b8c0ab5a57e6ca49c4fbe6aead2460c2f8d60d58bc60af68e559b7ca1179\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0980b3b9e8cd9d9a0f2ae848f0f36a85158887e6fd961142a13b11299ae7f30a\",\"dweb:/ipfs/QmUrmDji3NR2V3YezV8xHSS3wjeBKq16FL7cHdBCnwLjKd\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0x29074fe5a74bb024c57b3570abf6c74d8bceed3438694d470fd0166a3ecd196a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4f8435ccbc56e384f4cc9ac9ff491cf30a82f2beac00e33ccc2cf8af3f77cc3\",\"dweb:/ipfs/QmUKJXxTe6nn1qfgnX8xbnboNNAPUuEmJyGqMZCKNiFBgn\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xfd29ed7a01e9ef109cc31542ca0f51ba3e793740570b69172ec3d8bfbb1643b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99379e0649be8106d2708a2bde73b5cdaba4505f1001f1586b53788bf971d097\",\"dweb:/ipfs/QmV9cCnvFoVzV2cVDW4Zbs3JQ3ehxBcooQS52taVxR637S\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x686a21b9be2594ccfda3a855270dd8ebc4288b8a9ed84ecd4ef1bca2ea3fc46b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c0bbc37f4d1aaae086d73f13f41b8043a9ad5b07f30a2fd7b8a74ead99b1ef6\",\"dweb:/ipfs/QmZpFyfCCFpbrkNtfHTn18qV7VvptPdoLN82Qu5XtMCci6\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xa548dd62e9e17616ae80a1e7ac7b1447ae377efc27fb9f7b4f4fbf5c0b0a1dfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27e9ae3e67eb229444cd43d49db5be57c586155fd1d363b3b1f9bb1b7bb0087\",\"dweb:/ipfs/QmT2GFnpXsTWBs8bkeVJtQ4VNX7f3igxwB77JBCr4mDXb3\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0xa67f5e17d65eea22581382bd8c2804025f1029bfbd80908dc77b218fad29fb1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db1206248cec67bdd40009d0b57e91a2ce62fd4a85eff8d3ea51b28b550afe88\",\"dweb:/ipfs/QmYcWcZ3XRPSx9r8cFwjokpESjjiCtkebVE4VK3FjE3GVd\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x89c4d3509df3e1387752bf07f04bdf967ddb424d8917808bc9e6e4bc7995db0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2909c1aa5cc0ef4288e88c361fc114838aeb2c9396f83886ab9c52b39baf602f\",\"dweb:/ipfs/QmS246CQ6JN1dH3khhZvURLFEgfJ1DiV7J1VYxisfqLVnm\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x2fe0f666490bd88fa762c0c49cbba17e847e45cf259d744d6797636392beee41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ad7a55cdd08f0c336167e50e2fd172142de995409a81ffc0602792262f2e86c\",\"dweb:/ipfs/QmY7g2r17jJ6ZGoJ3DzSa7abQzvUXJATGy4sd8SEPt7oA3\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x3f1998a2904792ff2a576827876638b4917573186537f878d30b23277a3b8d38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8dfb08ed617c9d874de901e44ac8af7af7b13e7c84000a1da3cdaf6004593e8\",\"dweb:/ipfs/QmPX2hZAvCZJCQNSXcWqhxh3xp6UitwESrw3K2u3aYNqiu\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2be34e47fc07baed68c4878618a6e13c13243753c3f656ca1b6e05287c5df4ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0bc7f3ae934c76aae959cf061b9764a6dbb2313c4281944dde278cd418599da\",\"dweb:/ipfs/QmYtYLrwC1nPJd86kVrQFQAGeS3XGmhXjCj25LQGfGkugi\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cd59334ed58b8884cd1f775afc9400db702e674e5d6a7a438c655b9de788d7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e62c7de7318f413b6352e3f2704ca23e7725ff144e43c8bd574d12dbf29047\",\"dweb:/ipfs/QmSEXG2rBx1VxU2uFTWdiChjDvA4osEY2mesjmoVeVhHko\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5c8d4114f077f6803bb89b8b07bfa26dfbf8f2001708e4e7fdf1e8d9ddd42f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b66c74efa1f994e3ea467b4165da1575857b29d81bec36e94678fe494ce5c615\",\"dweb:/ipfs/QmeXQFdzSJFmN8UdhxMqQwwUh1U2WEha5NoVLbSg3pCJc5\"]},\"script/DeployMerkleAirdrop.s.sol\":{\"keccak256\":\"0x2b9971edb0c4006377cf814d1a6156dbb9513d695e58ae2ca31835fbadaa44aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d85c9d69a1bc0c9eb0213fabdbfffb9a8ca6d351cc12612e1feff87aa310ef95\",\"dweb:/ipfs/QmVYghT9j5nDQR7nSoaL2xAxKt34xcjB9HPCDEu712kt1v\"]},\"src/Merkle-Airdrop.sol\":{\"keccak256\":\"0xe10eeea559ed3090a21d3bae5d302ac13fbeee23bfdba4013e21f0efc1a64fdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae3f6d0fb7f83c72ffe1073c23a130d3badafaee2f0e96c22648513a87f42be4\",\"dweb:/ipfs/QmV64vT4eziFpdaJwcju57kcFbVFmbufuBfCuWH9iME1vN\"]},\"src/PranavCoin.sol\":{\"keccak256\":\"0xc2e7805619d14dfe7c674ec5ddc3c6b3fe4189b975247a6e276d301b8497ed9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b14a31ab09d15fbd009e6b6c422e5bd14fdea193f8fc3cd8f5c10c7774a143e\",\"dweb:/ipfs/QmdCeQaaFSUuwCGNcAUDya9nHZeBTN4V9bShJ1uaMxfLQU\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/Script.sol\", 4:\"lib/forge-std/src/StdChains.sol\", 5:\"lib/forge-std/src/StdCheats.sol\", 13:\"lib/forge-std/src/StdUtils.sol\", 55:\"script/DeployMerkleAirdrop.s.sol\"\nobject \"DeployMerkleAirdrop_55440\" {\n    code {\n        {\n            /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 4:3166:3170  \"true\" */ 0x0c, /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ or(and(sload(/** @src 4:3166:3170  \"true\" */ 0x0c), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ not(16711935)), 65537))\n            sstore(/** @src 55:460:473  \"25 * 1e18 * 4\" */ 0x0d, 0x056bc75e2d63100000)\n            /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n            let _2 := datasize(\"DeployMerkleAirdrop_55440_deployed\")\n            codecopy(_1, dataoffset(\"DeployMerkleAirdrop_55440_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/Script.sol\", 55:\"script/DeployMerkleAirdrop.s.sol\"\n    object \"DeployMerkleAirdrop_55440_deployed\" {\n        code {\n            {\n                /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x075c6db8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let ret, ret_1 := fun_deployMerkleAirdrop()\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_contract_MerkleAirdrop_contract_PranavCoin(memPos, ret, ret_1), memPos))\n                    }\n                    case 0xae82de5f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, /** @src 55:365:431  \"0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4\" */ 0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4)\n                        /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                        return(memPos_1, 32)\n                    }\n                    case 0xc0406226 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 55:558:579  \"deployMerkleAirdrop()\"\n                        let expr_component_address, expr_component_address_1 := fun_deployMerkleAirdrop()\n                        /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                        let memPos_2 := mload(64)\n                        return(memPos_2, sub(abi_encode_contract_MerkleAirdrop_contract_PranavCoin(memPos_2, expr_component_address, expr_component_address_1), memPos_2))\n                    }\n                    case 0xf8ccbf47 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value := and(shr(16, sload(/** @src 2:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ 0xff)\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, iszero(iszero(value)))\n                        return(memPos_3, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_contract_MerkleAirdrop_contract_PranavCoin(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function finalize_allocation(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            /// @ast-id 55439 @src 55:592:949  \"function deployMerkleAirdrop() public returns (MerkleAirdrop, PranavCoin) {...\"\n            function fun_deployMerkleAirdrop() -> var_address, var_55389_address\n            {\n                /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 55:676:695  \"vm.startBroadcast()\"\n                if iszero(extcodesize(/** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _1))\n                /// @src 55:676:695  \"vm.startBroadcast()\"\n                {\n                    /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                    revert(0, 0)\n                }\n                let _2 := 64\n                /// @src 55:676:695  \"vm.startBroadcast()\"\n                let _3 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                /// @src 55:676:695  \"vm.startBroadcast()\"\n                mstore(_3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x7fb5297f))\n                /// @src 55:676:695  \"vm.startBroadcast()\"\n                let _4 := 0\n                let _5 := call(gas(), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _1, /** @src 55:676:695  \"vm.startBroadcast()\" */ 0, _3, 4, _3, 0)\n                if iszero(_5)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos, /** @src 55:676:695  \"vm.startBroadcast()\" */ 0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 55:676:695  \"vm.startBroadcast()\"\n                if _5\n                {\n                    finalize_allocation(_3)\n                    /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                    _4 := /** @src 55:676:695  \"vm.startBroadcast()\" */ 0\n                }\n                /// @src 55:724:740  \"new PranavCoin()\"\n                let _6 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                /// @src 55:724:740  \"new PranavCoin()\"\n                let _7 := datasize(\"PranavCoin_56415\")\n                let _8 := add(_6, _7)\n                let _9 := 0xffffffffffffffff\n                if or(gt(_8, _9), lt(_8, _6))\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    mstore(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 55:676:695  \"vm.startBroadcast()\" */ 4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x41)\n                    revert(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x24)\n                }\n                /// @src 55:724:740  \"new PranavCoin()\"\n                datacopy(_6, dataoffset(\"PranavCoin_56415\"), _7)\n                let expr_55402_address := create(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 55:724:740  \"new PranavCoin()\" */ _6, sub(_8, _6))\n                if iszero(expr_55402_address)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos_1 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos_1, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                let _10 := sub(shl(160, 1), 1)\n                let _11 := and(/** @src 55:813:827  \"address(token)\" */ expr_55402_address, /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _10)\n                /// @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                let _12 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                /// @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                let _13 := datasize(\"MerkleAirdrop_56377\")\n                let _14 := add(_12, _13)\n                if or(gt(_14, /** @src 55:724:740  \"new PranavCoin()\" */ _9), /** @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\" */ lt(_14, _12))\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    mstore(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 55:676:695  \"vm.startBroadcast()\" */ 4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x41)\n                    revert(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x24)\n                }\n                /// @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                datacopy(_12, dataoffset(\"MerkleAirdrop_56377\"), _13)\n                /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                mstore(_14, /** @src 55:365:431  \"0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4\" */ 0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4)\n                /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_14, 32), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _11)\n                /// @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                let expr_address := create(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\" */ _12, add(sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _14, /** @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\" */ _12), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _2))\n                /// @src 55:774:829  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                if iszero(expr_address)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos_2 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos_2, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos_2, returndatasize())\n                }\n                let _15 := sload(/** @src 55:868:880  \"amountToMint\" */ 0x0d)\n                /// @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\"\n                if iszero(extcodesize(_11))\n                {\n                    /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                    revert(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, _4)\n                }\n                /// @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\"\n                let _16 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                /// @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\"\n                mstore(_16, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x40c10f19))\n                mstore(/** @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\" */ add(_16, /** @src 55:676:695  \"vm.startBroadcast()\" */ 4), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ and(/** @src 55:850:866  \"address(airdrop)\" */ expr_address, /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _10))\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\" */ _16, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _15)\n                /// @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\"\n                let _17 := call(gas(), _11, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\" */ _16, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 68, /** @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\" */ _16, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4)\n                /// @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\"\n                if iszero(_17)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos_3 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos_3, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos_3, returndatasize())\n                }\n                /// @src 55:839:881  \"token.mint(address(airdrop), amountToMint)\"\n                if _17\n                {\n                    finalize_allocation(_16)\n                    /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                    if _4\n                    {\n                        revert(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, _4)\n                    }\n                }\n                /// @src 55:891:909  \"vm.stopBroadcast()\"\n                if iszero(extcodesize(/** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _1))\n                /// @src 55:891:909  \"vm.stopBroadcast()\"\n                {\n                    /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                    revert(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, _4)\n                }\n                /// @src 55:891:909  \"vm.stopBroadcast()\"\n                let _18 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                /// @src 55:891:909  \"vm.stopBroadcast()\"\n                mstore(_18, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(225, 0x3b756e9b))\n                /// @src 55:891:909  \"vm.stopBroadcast()\"\n                let _19 := call(gas(), /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ _1, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 55:891:909  \"vm.stopBroadcast()\" */ _18, /** @src 55:676:695  \"vm.startBroadcast()\" */ 4, /** @src 55:891:909  \"vm.stopBroadcast()\" */ _18, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4)\n                /// @src 55:891:909  \"vm.stopBroadcast()\"\n                if iszero(_19)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos_4 := /** @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos_4, /** @src 55:676:695  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos_4, returndatasize())\n                }\n                /// @src 55:891:909  \"vm.stopBroadcast()\"\n                if _19\n                {\n                    finalize_allocation(_18)\n                    /// @src 55:281:951  \"contract DeployMerkleAirdrop is Script {...\"\n                    if _4\n                    {\n                        revert(/** @src 55:676:695  \"vm.startBroadcast()\" */ _4, _4)\n                    }\n                }\n                /// @src 55:919:942  \"return (airdrop, token)\"\n                var_address := expr_address\n                var_55389_address := expr_55402_address\n            }\n        }\n        /// @use-src 33:\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\", 43:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 44:\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 47:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 58:\"src/Merkle-Airdrop.sol\"\n        object \"MerkleAirdrop_56377\" {\n            code {\n                {\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    let _1 := memoryguard(0x01a0)\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"MerkleAirdrop_56377\")\n                    let argSize := sub(codesize(), programSize)\n                    let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                    let _2 := sub(shl(64, 1), 1)\n                    if or(gt(newFreePtr, _2), lt(newFreePtr, _1))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    let _3 := 64\n                    mstore(_3, newFreePtr)\n                    codecopy(_1, programSize, argSize)\n                    if slt(sub(add(_1, argSize), _1), _3)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    let value := mload(_1)\n                    let value_1 := mload(add(_1, 32))\n                    if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1))))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    let memPtr := mload(_3)\n                    finalize_allocation(memPtr)\n                    mstore(memPtr, 13)\n                    let _4 := add(memPtr, 32)\n                    mstore(_4, \"MerkleAirdrop\")\n                    let memPtr_1 := mload(_3)\n                    finalize_allocation(memPtr_1)\n                    mstore(memPtr_1, 1)\n                    let _5 := add(memPtr_1, 32)\n                    mstore(_5, \"1\")\n                    /// @src 47:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\"\n                    let _6 := fun_toShortStringWithFallback(memPtr)\n                    /// @src 47:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\"\n                    let _7 := 288\n                    mstore(_7, /** @src 47:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\" */ _6)\n                    /// @src 47:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\"\n                    let _8 := fun_toShortStringWithFallback_2443(memPtr_1)\n                    /// @src 47:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\"\n                    let _9 := 320\n                    mstore(_9, /** @src 47:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\" */ _8)\n                    /// @src 47:3542:3564  \"keccak256(bytes(name))\"\n                    let _10 := keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _4, mload(/** @src 47:3542:3564  \"keccak256(bytes(name))\" */ memPtr))\n                    /// @src 47:3528:3564  \"_hashedName = keccak256(bytes(name))\"\n                    mstore(224, /** @src 47:3542:3564  \"keccak256(bytes(name))\" */ _10)\n                    /// @src 47:3591:3616  \"keccak256(bytes(version))\"\n                    let _11 := keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _5, mload(/** @src 47:3591:3616  \"keccak256(bytes(version))\" */ memPtr_1))\n                    /// @src 47:3574:3616  \"_hashedVersion = keccak256(bytes(version))\"\n                    let _12 := 256\n                    mstore(_12, /** @src 47:3591:3616  \"keccak256(bytes(version))\" */ _11)\n                    /// @src 47:3627:3657  \"_cachedChainId = block.chainid\"\n                    mstore(160, /** @src 47:3644:3657  \"block.chainid\" */ chainid())\n                    /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let expr_mpos := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_3)\n                    /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let _13 := add(expr_mpos, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 32)\n                    /// @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                    mstore(_13, 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                    mstore(add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3), /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _10)\n                    mstore(add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), _11)\n                    mstore(add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 47:3644:3657  \"block.chainid\" */ chainid())\n                    /// @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                    mstore(add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:3627:3657  \"_cachedChainId = block.chainid\" */ 160), /** @src 47:4278:4282  \"this\" */ address())\n                    /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    mstore(expr_mpos, /** @src 47:3627:3657  \"_cachedChainId = block.chainid\" */ 160)\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    let newFreePtr_1 := add(expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, expr_mpos))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(_3, newFreePtr_1)\n                    /// @src 47:3667:3715  \"_cachedDomainSeparator = _buildDomainSeparator()\"\n                    mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128, /** @src 47:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _13, mload(/** @src 47:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos)))\n                    /// @src 47:3725:3752  \"_cachedThis = address(this)\"\n                    mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192, /** @src 47:4278:4282  \"this\" */ address())\n                    /// @src 58:1932:1957  \"i_merkleRoot = merkleRoot\"\n                    let _14 := 352\n                    mstore(_14, value)\n                    /// @src 58:1967:1982  \"i_token = token\"\n                    let _15 := 384\n                    mstore(_15, value_1)\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    let _16 := datasize(\"MerkleAirdrop_56377_deployed\")\n                    codecopy(newFreePtr_1, dataoffset(\"MerkleAirdrop_56377_deployed\"), _16)\n                    setimmutable(newFreePtr_1, \"50993\", mload(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"50995\", mload(/** @src 47:3627:3657  \"_cachedChainId = block.chainid\" */ 160))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"50997\", mload(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"50999\", mload(/** @src 47:3528:3564  \"_hashedName = keccak256(bytes(name))\" */ 224))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"51001\", mload(/** @src 47:3574:3616  \"_hashedVersion = keccak256(bytes(version))\" */ _12))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"51004\", mload(/** @src 47:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\" */ _7))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"51007\", mload(/** @src 47:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\" */ _9))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"56097\", mload(/** @src 58:1932:1957  \"i_merkleRoot = merkleRoot\" */ _14))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    setimmutable(newFreePtr_1, \"56100\", mload(/** @src 58:1967:1982  \"i_token = token\" */ _15))\n                    /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                    return(newFreePtr_1, _16)\n                }\n                function finalize_allocation(memPtr)\n                {\n                    let newFreePtr := add(memPtr, 64)\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                /// @ast-id 49926 @src 43:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback(var_value_mpos) -> var\n                {\n                    /// @src 43:3037:3056  \"bytes(value).length\"\n                    let expr := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 43:3037:3049  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 43:3059:3061  \"32\"\n                    let _1 := 0x20\n                    /// @src 43:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 43:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 43:3059:3061  \"32\" */ _1)\n                    case /** @src 43:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0x24)\n                        }\n                        let _2 := sload(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let length := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let _3 := 1\n                        length := shr(_3, _2)\n                        let outOfPlaceEncoding := and(_2, _3)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 43:3059:3061  \"32\" */ _1))\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        {\n                            mstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, 0x00)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let data := keccak256(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 43:3059:3061  \"32\" */ _1)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let _4 := add(data, shr(5, add(length, 31)))\n                            let start := add(data, shr(5, add(expr, 31)))\n                            for { } lt(start, _4) { start := add(start, _3) }\n                            {\n                                sstore(start, /** @src 47:3432:3445  \"_nameFallback\" */ 0x00)\n                            }\n                        }\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let srcOffset := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        srcOffset := /** @src 43:3059:3061  \"32\" */ _1\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, 0x00)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let dstPtr := keccak256(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 43:3059:3061  \"32\" */ _1)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let i := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 43:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, _3)\n                                srcOffset := add(srcOffset, /** @src 43:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(shl(_3, expr), _3))\n                        }\n                        default {\n                            let value := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(/** @src 47:3432:3445  \"_nameFallback\" */ 0x00, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(_3, expr)))\n                        }\n                        /// @src 43:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var := /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 43:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 43:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 43:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 43:1840:1856  \"bstr.length > 31\" */ gt(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 43:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 43:1854:1856  \"31\" */ 0x1f)\n                        /// @src 43:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 43:1879:1897  \"StringTooLong(str)\"\n                            let _5 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                            /// @src 43:1879:1897  \"StringTooLong(str)\"\n                            mstore(_5, shl(224, 0x305a27a9))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(/** @src 43:1879:1897  \"StringTooLong(str)\" */ add(_5, 4), /** @src 43:3059:3061  \"32\" */ _1)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 36), length_1)\n                            let i_1 := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            for { }\n                            lt(i_1, length_1)\n                            {\n                                i_1 := add(i_1, /** @src 43:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            {\n                                mstore(add(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 43:3059:3061  \"32\" */ _1)))\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(add(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_1), 68), /** @src 47:3432:3445  \"_nameFallback\" */ 0x00)\n                            /// @src 43:1879:1897  \"StringTooLong(str)\"\n                            revert(_5, add(sub(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(add(length_1, /** @src 43:1854:1856  \"31\" */ 0x1f), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ not(31))), /** @src 43:1879:1897  \"StringTooLong(str)\" */ _5), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 68))\n                        }\n                        /// @src 43:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src 47:3432:3445  \"_nameFallback\" */ 0x00\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(var_value_mpos, /** @src 43:3059:3061  \"32\" */ _1))\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        if lt(length_2, /** @src 43:3059:3061  \"32\" */ _1)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 43:3059:3061  \"32\" */ _1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_2)), not(0)))\n                        }\n                        /// @src 43:3077:3104  \"return toShortString(value)\"\n                        var := /** @src 43:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_2)\n                        /// @src 43:3077:3104  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n                /// @ast-id 49926 @src 43:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback_2443(var_value_mpos) -> var\n                {\n                    /// @src 43:3037:3056  \"bytes(value).length\"\n                    let expr := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 43:3037:3049  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 43:3059:3061  \"32\"\n                    let _1 := 0x20\n                    /// @src 43:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 43:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 43:3059:3061  \"32\" */ _1)\n                    case /** @src 43:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _2 := 1\n                        let _3 := sload(_2)\n                        let length := /** @src -1:-1:-1 */ 0\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        length := shr(_2, _3)\n                        let outOfPlaceEncoding := and(_3, _2)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 43:3059:3061  \"32\" */ _1))\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _2)\n                            let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 43:3059:3061  \"32\" */ _1)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let _4 := add(data, shr(5, add(length, 31)))\n                            let start := add(data, shr(5, add(expr, 31)))\n                            for { } lt(start, _4) { start := add(start, _2) }\n                            {\n                                sstore(start, /** @src -1:-1:-1 */ 0)\n                            }\n                        }\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let srcOffset := /** @src -1:-1:-1 */ 0\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        srcOffset := /** @src 43:3059:3061  \"32\" */ _1\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _2)\n                            let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 43:3059:3061  \"32\" */ _1)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 43:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, _2)\n                                srcOffset := add(srcOffset, /** @src 43:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(_2, add(shl(_2, expr), _2))\n                        }\n                        default {\n                            let value := /** @src -1:-1:-1 */ 0\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(_2, or(and(value, not(shr(shl(3, expr), not(0)))), shl(_2, expr)))\n                        }\n                        /// @src 43:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var := /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 43:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 43:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 43:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 43:1840:1856  \"bstr.length > 31\" */ gt(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 43:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 43:1854:1856  \"31\" */ 0x1f)\n                        /// @src 43:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 43:1879:1897  \"StringTooLong(str)\"\n                            let _5 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                            /// @src 43:1879:1897  \"StringTooLong(str)\"\n                            mstore(_5, shl(224, 0x305a27a9))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(/** @src 43:1879:1897  \"StringTooLong(str)\" */ add(_5, 4), /** @src 43:3059:3061  \"32\" */ _1)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 36), length_1)\n                            let i_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            for { }\n                            lt(i_1, length_1)\n                            {\n                                i_1 := add(i_1, /** @src 43:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            {\n                                mstore(add(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 43:3059:3061  \"32\" */ _1)))\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(add(add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_1), 68), /** @src -1:-1:-1 */ 0)\n                            /// @src 43:1879:1897  \"StringTooLong(str)\"\n                            revert(_5, add(sub(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(/** @src 43:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(add(length_1, /** @src 43:1854:1856  \"31\" */ 0x1f), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ not(31))), /** @src 43:1879:1897  \"StringTooLong(str)\" */ _5), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 68))\n                        }\n                        /// @src 43:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(var_value_mpos, /** @src 43:3059:3061  \"32\" */ _1))\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        if lt(length_2, /** @src 43:3059:3061  \"32\" */ _1)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 43:3059:3061  \"32\" */ _1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_2)), not(0)))\n                        }\n                        /// @src 43:3077:3104  \"return toShortString(value)\"\n                        var := /** @src 43:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ length_2)\n                        /// @src 43:3077:3104  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n            }\n            /// @use-src 38:\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 43:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 46:\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 47:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 48:\"lib/openzeppelin-contracts/contracts/utils/cryptography/Hashes.sol\", 49:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\", 50:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 58:\"src/Merkle-Airdrop.sol\"\n            object \"MerkleAirdrop_56377_deployed\" {\n                code {\n                    {\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x1b2aa644 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 192) { revert(0, 0) }\n                                let offset := calldataload(_3)\n                                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                                let value0, value1 := abi_decode_array_bytes32_dyn_calldata(add(_3, offset), calldatasize())\n                                let value := calldataload(36)\n                                let _4 := sub(shl(160, 1), 1)\n                                let _5 := and(value, _4)\n                                if iszero(eq(value, _5)) { revert(0, 0) }\n                                let value_1 := calldataload(68)\n                                let value_2 := calldataload(100)\n                                if iszero(eq(value_2, and(value_2, 0xff))) { revert(0, 0) }\n                                mstore(0, _5)\n                                mstore(32, /** @src 58:3287:3296  \"s_claimed\" */ 0x02)\n                                /// @src 58:3283:3370  \"if (s_claimed[account]) {...\"\n                                if /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(sload(keccak256(0, _2)), 0xff)\n                                /// @src 58:3283:3370  \"if (s_claimed[account]) {...\"\n                                {\n                                    /// @src 58:3328:3359  \"MerkleAirdrop__AlreadyClaimed()\"\n                                    mstore(_1, shl(224, 0x1ac2170b))\n                                    revert(_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3)\n                                }\n                                /// @src 58:4279:4313  \"ECDSA.tryRecover(message, v, r, s)\"\n                                let expr_component, expr_component_1, expr_component_2 := fun_tryRecover(/** @src 58:3443:3471  \"_getMessage(account, amount)\" */ fun_getMessage(value, value_1), /** @src 58:4279:4313  \"ECDSA.tryRecover(message, v, r, s)\" */ value_2, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ calldataload(132), calldataload(164))\n                                /// @src 58:3411:3548  \"if (!_isValidSignature(account, _getMessage(account, amount), v, r, s)) {...\"\n                                if /** @src 58:3415:3481  \"!_isValidSignature(account, _getMessage(account, amount), v, r, s)\" */ iszero(/** @src 58:4330:4347  \"signer == account\" */ eq(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 58:4330:4347  \"signer == account\" */ expr_component, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _4), _5))\n                                /// @src 58:3411:3548  \"if (!_isValidSignature(account, _getMessage(account, amount), v, r, s)) {...\"\n                                {\n                                    /// @src 58:3504:3537  \"MerkleAirdrop__InvalidSignature()\"\n                                    let _6 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                    /// @src 58:3504:3537  \"MerkleAirdrop__InvalidSignature()\"\n                                    mstore(_6, shl(224, 0xab8b8565))\n                                    revert(_6, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3)\n                                }\n                                /// @src 58:3606:3633  \"abi.encode(account, amount)\"\n                                let expr_mpos := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                /// @src 58:3606:3633  \"abi.encode(account, amount)\"\n                                let _7 := add(expr_mpos, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 32)\n                                /// @src 58:3606:3633  \"abi.encode(account, amount)\"\n                                let _8 := sub(abi_encode_address_uint256(_7, value, value_1), expr_mpos)\n                                mstore(expr_mpos, add(_8, not(31)))\n                                finalize_allocation(expr_mpos, _8)\n                                /// @src 58:3596:3634  \"keccak256(abi.encode(account, amount))\"\n                                let _9 := keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _7, mload(/** @src 58:3596:3634  \"keccak256(abi.encode(account, amount))\" */ expr_mpos))\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let outPtr := mload(_2)\n                                let _10 := add(outPtr, 32)\n                                mstore(_10, _9)\n                                mstore(outPtr, 32)\n                                finalize_allocation_9021(outPtr)\n                                /// @src 58:3646:3776  \"if (!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)) {...\"\n                                if /** @src 58:3650:3702  \"!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ iszero(/** @src 58:3651:3702  \"MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ fun_verify(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ abi_decode_available_length_array_bytes32_dyn(/** @src 58:3651:3702  \"MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ value0, value1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ calldatasize()), /** @src 58:3683:3695  \"i_merkleRoot\" */ loadimmutable(\"56097\"), /** @src 58:3573:3636  \"keccak256(bytes.concat(keccak256(abi.encode(account, amount))))\" */ keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _10, mload(/** @src 58:3573:3636  \"keccak256(bytes.concat(keccak256(abi.encode(account, amount))))\" */ outPtr))))\n                                /// @src 58:3646:3776  \"if (!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)) {...\"\n                                {\n                                    /// @src 58:3725:3765  \"MerkleAirdrop__ClaimFailedInvalidProof()\"\n                                    let _11 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                    /// @src 58:3725:3765  \"MerkleAirdrop__ClaimFailedInvalidProof()\"\n                                    mstore(_11, shl(225, 0x751c01c5))\n                                    revert(_11, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3)\n                                }\n                                mstore(0, _5)\n                                mstore(32, /** @src 58:3287:3296  \"s_claimed\" */ 0x02)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let dataSlot := keccak256(0, _2)\n                                sstore(dataSlot, or(and(sload(dataSlot), not(255)), 1))\n                                /// @src 58:3826:3855  \"AirdropClaim(account, amount)\"\n                                log3(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0, 0, /** @src 58:3826:3855  \"AirdropClaim(account, amount)\" */ 0x0109d8fbd8363b83a5fa0c0f8dfbed54c793803139c404e89bf3697f66bdc505, _5, value_1)\n                                /// @src 58:3906:3912  \"amount\"\n                                fun_safeTransfer(/** @src 58:3888:3895  \"i_token\" */ loadimmutable(\"56100\"), /** @src 58:3906:3912  \"amount\" */ value, value_1)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                return(0, 0)\n                            }\n                            case 0x1b93f66d {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 58:4845:4854  \"s_claimed\" */ 0x02)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let value_3 := and(sload(keccak256(0, _2)), 0xff)\n                                let memPos := mload(_2)\n                                mstore(memPos, iszero(iszero(value_3)))\n                                return(memPos, 32)\n                            }\n                            case 0x21df0da7 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, and(/** @src 58:5052:5059  \"i_token\" */ loadimmutable(\"56100\"), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ sub(shl(160, 1), 1)))\n                                return(memPos_1, 32)\n                            }\n                            case 0x32b61db9 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                let offset_1 := calldataload(_3)\n                                if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                                let value0_1, value1_1 := abi_decode_array_bytes32_dyn_calldata(add(_3, offset_1), calldatasize())\n                                let value_4 := calldataload(36)\n                                mstore(0, /** @src 58:2339:2349  \"msg.sender\" */ caller())\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                mstore(32, /** @src 58:2329:2338  \"s_claimed\" */ 0x02)\n                                /// @src 58:2325:2415  \"if (s_claimed[msg.sender]) {...\"\n                                if /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(sload(keccak256(0, _2)), 0xff)\n                                /// @src 58:2325:2415  \"if (s_claimed[msg.sender]) {...\"\n                                {\n                                    /// @src 58:2373:2404  \"MerkleAirdrop__AlreadyClaimed()\"\n                                    let _12 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                    /// @src 58:2373:2404  \"MerkleAirdrop__AlreadyClaimed()\"\n                                    mstore(_12, /** @src 58:3328:3359  \"MerkleAirdrop__AlreadyClaimed()\" */ shl(224, 0x1ac2170b))\n                                    /// @src 58:2373:2404  \"MerkleAirdrop__AlreadyClaimed()\"\n                                    revert(_12, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3)\n                                }\n                                /// @src 58:2757:2787  \"abi.encode(msg.sender, amount)\"\n                                let expr_mpos_1 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                /// @src 58:2757:2787  \"abi.encode(msg.sender, amount)\"\n                                let _13 := add(expr_mpos_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 32)\n                                /// @src 58:2757:2787  \"abi.encode(msg.sender, amount)\"\n                                let _14 := sub(abi_encode_address_uint256(_13, /** @src 58:2339:2349  \"msg.sender\" */ caller(), /** @src 58:2757:2787  \"abi.encode(msg.sender, amount)\" */ value_4), expr_mpos_1)\n                                mstore(expr_mpos_1, add(_14, /** @src 58:3606:3633  \"abi.encode(account, amount)\" */ not(31)))\n                                /// @src 58:2757:2787  \"abi.encode(msg.sender, amount)\"\n                                finalize_allocation(expr_mpos_1, _14)\n                                /// @src 58:2747:2788  \"keccak256(abi.encode(msg.sender, amount))\"\n                                let _15 := keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _13, mload(/** @src 58:2747:2788  \"keccak256(abi.encode(msg.sender, amount))\" */ expr_mpos_1))\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let outPtr_1 := mload(_2)\n                                let _16 := add(outPtr_1, 32)\n                                mstore(_16, _15)\n                                mstore(outPtr_1, 32)\n                                finalize_allocation_9021(outPtr_1)\n                                /// @src 58:2800:2930  \"if (!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)) {...\"\n                                if /** @src 58:2804:2856  \"!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ iszero(/** @src 58:2805:2856  \"MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ fun_verify(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ abi_decode_available_length_array_bytes32_dyn(/** @src 58:2805:2856  \"MerkleProof.verify(merkleProof, i_merkleRoot, leaf)\" */ value0_1, value1_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ calldatasize()), /** @src 58:2837:2849  \"i_merkleRoot\" */ loadimmutable(\"56097\"), /** @src 58:2724:2790  \"keccak256(bytes.concat(keccak256(abi.encode(msg.sender, amount))))\" */ keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _16, mload(/** @src 58:2724:2790  \"keccak256(bytes.concat(keccak256(abi.encode(msg.sender, amount))))\" */ outPtr_1))))\n                                /// @src 58:2800:2930  \"if (!MerkleProof.verify(merkleProof, i_merkleRoot, leaf)) {...\"\n                                {\n                                    /// @src 58:2879:2919  \"MerkleAirdrop__ClaimFailedInvalidProof()\"\n                                    let _17 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(_2)\n                                    /// @src 58:2879:2919  \"MerkleAirdrop__ClaimFailedInvalidProof()\"\n                                    mstore(_17, /** @src 58:3725:3765  \"MerkleAirdrop__ClaimFailedInvalidProof()\" */ shl(225, 0x751c01c5))\n                                    /// @src 58:2879:2919  \"MerkleAirdrop__ClaimFailedInvalidProof()\"\n                                    revert(_17, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3)\n                                }\n                                mstore(0, /** @src 58:2339:2349  \"msg.sender\" */ caller())\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                mstore(32, /** @src 58:2329:2338  \"s_claimed\" */ 0x02)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let dataSlot_1 := keccak256(0, _2)\n                                sstore(dataSlot_1, or(and(sload(dataSlot_1), not(255)), 1))\n                                /// @src 58:2983:3015  \"AirdropClaim(msg.sender, amount)\"\n                                log3(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0, 0, /** @src 58:2983:3015  \"AirdropClaim(msg.sender, amount)\" */ 0x0109d8fbd8363b83a5fa0c0f8dfbed54c793803139c404e89bf3697f66bdc505, /** @src 58:2339:2349  \"msg.sender\" */ caller(), /** @src 58:2983:3015  \"AirdropClaim(msg.sender, amount)\" */ value_4)\n                                /// @src 58:3069:3075  \"amount\"\n                                fun_safeTransfer(/** @src 58:3048:3055  \"i_token\" */ loadimmutable(\"56100\"), /** @src 58:2339:2349  \"msg.sender\" */ caller(), /** @src 58:3069:3075  \"amount\" */ value_4)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                return(0, 0)\n                            }\n                            case 0x49590657 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, /** @src 58:4950:4962  \"i_merkleRoot\" */ loadimmutable(\"56097\"))\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                return(memPos_2, 32)\n                            }\n                            case 0x74b3c7ec {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 58:1610:1651  \"mapping(address => bool) public s_claimed\" */ 2)\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let value_5 := and(sload(keccak256(0, _2)), 0xff)\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, iszero(iszero(value_5)))\n                                return(memPos_3, 32)\n                            }\n                            case 0x84b0196e {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 47:6092:6140  \"return _name.toStringWithFallback(_nameFallback)\"\n                                let var_mpos := /** @src 47:6099:6140  \"_name.toStringWithFallback(_nameFallback)\" */ fun_toStringWithFallback(/** @src 47:6099:6104  \"_name\" */ loadimmutable(\"51004\"))\n                                /// @src 47:6547:6601  \"return _version.toStringWithFallback(_versionFallback)\"\n                                let var_mpos_1 := /** @src 47:6554:6601  \"_version.toStringWithFallback(_versionFallback)\" */ fun_toStringWithFallback_5521(/** @src 47:6554:6562  \"_version\" */ loadimmutable(\"51007\"))\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                let memPtr := mload(_2)\n                                let _18 := 0x20\n                                let newFreePtr := add(memPtr, 0x20)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(_2, newFreePtr)\n                                mstore(memPtr, 0)\n                                let memPos_4 := mload(_2)\n                                mstore(memPos_4, shl(248, 15))\n                                mstore(add(memPos_4, 0x20), 224)\n                                let tail := abi_encode_string(var_mpos, add(memPos_4, 224))\n                                mstore(add(memPos_4, _2), sub(tail, memPos_4))\n                                let tail_1 := abi_encode_string(var_mpos_1, tail)\n                                mstore(add(memPos_4, 96), /** @src 47:5590:5603  \"block.chainid\" */ chainid())\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                mstore(add(memPos_4, 128), /** @src 47:5625:5629  \"this\" */ address())\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                mstore(add(memPos_4, 160), 0)\n                                mstore(add(memPos_4, 192), sub(tail_1, memPos_4))\n                                let pos := tail_1\n                                let length := mload(memPtr)\n                                mstore(tail_1, length)\n                                pos := add(tail_1, 0x20)\n                                let srcPtr := newFreePtr\n                                let i := 0\n                                for { }\n                                lt(i, length)\n                                {\n                                    i := add(i, /** @src 47:6584:6600  \"_versionFallback\" */ 0x01)\n                                }\n                                /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                                {\n                                    mstore(pos, mload(srcPtr))\n                                    pos := add(pos, _18)\n                                    srcPtr := add(srcPtr, _18)\n                                }\n                                return(memPos_4, sub(pos, memPos_4))\n                            }\n                            case 0x8d93d984 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                let value0_2 := abi_decode_address()\n                                let ret := fun_getMessage(value0_2, calldataload(36))\n                                let memPos_5 := mload(_2)\n                                mstore(memPos_5, ret)\n                                return(memPos_5, 32)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_decode_array_bytes32_dyn_calldata(offset, end) -> arrayPos, length\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        length := calldataload(offset)\n                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                        arrayPos := add(offset, 0x20)\n                        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_encode_string(value, pos) -> end\n                    {\n                        let length := mload(value)\n                        mstore(pos, length)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        for { } lt(i, length) { i := add(i, 0x20) }\n                        {\n                            let _1 := 0x20\n                            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                        }\n                        mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        end := add(add(pos, and(add(length, 31), /** @src 58:3606:3633  \"abi.encode(account, amount)\" */ not(31))), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0x20)\n                    }\n                    function abi_encode_address_uint256(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                    }\n                    function finalize_allocation_9021(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 64)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), /** @src 58:3606:3633  \"abi.encode(account, amount)\" */ not(31)))\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function abi_decode_available_length_array_bytes32_dyn(offset, length, end) -> array\n                    {\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0x24)\n                        }\n                        let _1 := shl(5, length)\n                        let _2 := 0x20\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, add(_1, 0x20))\n                        array := memPtr\n                        let dst := memPtr\n                        mstore(memPtr, length)\n                        dst := add(memPtr, 0x20)\n                        let srcEnd := add(offset, _1)\n                        if gt(srcEnd, end)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let src := offset\n                        for { } lt(src, srcEnd) { src := add(src, _2) }\n                        {\n                            mstore(dst, calldataload(src))\n                            dst := add(dst, _2)\n                        }\n                    }\n                    /// @ast-id 56345 @src 58:4361:4598  \"function _getMessage(address account, uint256 amount) public view returns (bytes32) {...\"\n                    function fun_getMessage(var_account, var_amount) -> var\n                    {\n                        /// @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\"\n                        let _1 := 64\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let memPtr := mload(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let newFreePtr := add(memPtr, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let _2 := 0xffffffffffffffff\n                        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ newFreePtr)\n                        let _3 := sub(shl(160, 1), 1)\n                        /// @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\"\n                        mstore(memPtr, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ var_account, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3))\n                        /// @src 58:4531:4579  \"AirDropClaim({account: account, amount: amount})\"\n                        let _4 := add(memPtr, 32)\n                        /// @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\"\n                        mstore(_4, var_amount)\n                        /// @src 58:4502:4580  \"abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount}))\"\n                        let expr_56340_mpos := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1)\n                        /// @src 58:4502:4580  \"abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount}))\"\n                        let _5 := add(expr_56340_mpos, /** @src 58:4531:4579  \"AirDropClaim({account: account, amount: amount})\" */ 32)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        mstore(_5, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ 0xc0f4a2a1381428431909845939ce5eb5fbc52b85bd7e391f00f18deaafd74b06)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        mstore(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ add(/** @src 58:4502:4580  \"abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount}))\" */ expr_56340_mpos, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ mload(memPtr), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _3))\n                        mstore(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ add(/** @src 58:4502:4580  \"abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount}))\" */ expr_56340_mpos, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ 96), mload(_4))\n                        /// @src 58:4502:4580  \"abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount}))\"\n                        mstore(expr_56340_mpos, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ 96)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        let newFreePtr_1 := add(expr_56340_mpos, /** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ 128)\n                        /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                        if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, expr_56340_mpos))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ newFreePtr_1)\n                        /// @src 58:4492:4581  \"keccak256(abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount})))\"\n                        let _6 := keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _5, mload(/** @src 58:4492:4581  \"keccak256(abi.encode(MESSAGE_TYPEHASH, AirDropClaim({account: account, amount: amount})))\" */ expr_56340_mpos))\n                        /// @src 47:5053:5073  \"_domainSeparatorV4()\"\n                        let _7 := fun_domainSeparatorV4()\n                        /// @src 50:3515:3748  \"assembly {...\"\n                        let usr$ptr := mload(/** @src 58:1702:1759  \"keccak256(\\\"AirDropClaim(address account,uint256 amount)\\\")\" */ _1)\n                        /// @src 50:3515:3748  \"assembly {...\"\n                        mstore(usr$ptr, \"\\x19\\x01\")\n                        mstore(add(usr$ptr, 0x02), _7)\n                        mstore(add(usr$ptr, 0x22), _6)\n                        /// @src 58:4455:4591  \"return _hashTypedDataV4(...\"\n                        var := /** @src 50:3515:3748  \"assembly {...\" */ keccak256(usr$ptr, 0x42)\n                    }\n                    /// @ast-id 51268 @src 49:1303:1457  \"function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {...\"\n                    function fun_verify(var_proof_mpos, var_root, var_leaf) -> var\n                    {\n                        /// @src 49:2107:2134  \"bytes32 computedHash = leaf\"\n                        let var_computedHash := var_leaf\n                        /// @src 49:2149:2162  \"uint256 i = 0\"\n                        let var_i := /** @src -1:-1:-1 */ 0\n                        /// @src 49:2144:2278  \"for (uint256 i = 0; i < proof.length; i++) {...\"\n                        for { }\n                        /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 1\n                        /// @src 49:2149:2162  \"uint256 i = 0\"\n                        {\n                            /// @src 49:2182:2185  \"i++\"\n                            var_i := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(/** @src 49:2182:2185  \"i++\" */ var_i, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 1)\n                        }\n                        /// @src 49:2182:2185  \"i++\"\n                        {\n                            /// @src 49:2164:2180  \"i < proof.length\"\n                            if iszero(lt(var_i, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(/** @src 49:2168:2180  \"proof.length\" */ var_proof_mpos)))\n                            /// @src 49:2164:2180  \"i < proof.length\"\n                            { break }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let _1 := 32\n                            let _2 := mload(add(add(var_proof_mpos, shl(5, var_i)), _1))\n                            /// @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\"\n                            let expr := /** @src -1:-1:-1 */ 0\n                            /// @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\"\n                            switch /** @src 48:494:499  \"a < b\" */ lt(var_computedHash, _2)\n                            case /** @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\" */ 0 {\n                                /// @src 48:823:942  \"assembly {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 48:823:942  \"assembly {...\" */ _2)\n                                mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _1, /** @src 48:823:942  \"assembly {...\" */ var_computedHash)\n                                /// @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\"\n                                expr := /** @src 48:823:942  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 48:823:942  \"assembly {...\" */ 0x40)\n                            }\n                            default /// @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\"\n                            {\n                                /// @src 48:823:942  \"assembly {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 48:823:942  \"assembly {...\" */ var_computedHash)\n                                mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _1, /** @src 48:823:942  \"assembly {...\" */ _2)\n                                /// @src 48:494:555  \"a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a)\"\n                                expr := /** @src 48:823:942  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 48:823:942  \"assembly {...\" */ 0x40)\n                            }\n                            /// @src 49:2201:2267  \"computedHash = Hashes.commutativeKeccak256(computedHash, proof[i])\"\n                            var_computedHash := expr\n                        }\n                        /// @src 49:1410:1450  \"return processProof(proof, leaf) == root\"\n                        var := /** @src 49:1417:1450  \"processProof(proof, leaf) == root\" */ eq(var_computedHash, var_root)\n                    }\n                    /// @ast-id 49041 @src 38:1271:1431  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n                    function fun_safeTransfer(var_token_address, var_to, var_value)\n                    {\n                        /// @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let expr_49037_mpos := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                        /// @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let _1 := add(expr_49037_mpos, 0x20)\n                        mstore(_1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0xa9059cbb))\n                        /// @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let _2 := sub(abi_encode_address_uint256(add(expr_49037_mpos, 36), var_to, var_value), expr_49037_mpos)\n                        mstore(expr_49037_mpos, add(_2, /** @src 58:3606:3633  \"abi.encode(account, amount)\" */ not(31)))\n                        /// @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\"\n                        finalize_allocation(expr_49037_mpos, _2)\n                        /// @src 38:6687:7108  \"assembly (\\\"memory-safe\\\") {...\"\n                        if iszero(call(gas(), var_token_address, /** @src -1:-1:-1 */ 0, /** @src 38:6687:7108  \"assembly (\\\"memory-safe\\\") {...\" */ _1, mload(expr_49037_mpos), /** @src -1:-1:-1 */ 0, /** @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20))\n                        /// @src 38:6687:7108  \"assembly (\\\"memory-safe\\\") {...\"\n                        {\n                            let usr$ptr := mload(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 64)\n                            /// @src 38:6687:7108  \"assembly (\\\"memory-safe\\\") {...\"\n                            returndatacopy(usr$ptr, /** @src -1:-1:-1 */ 0, /** @src 38:6687:7108  \"assembly (\\\"memory-safe\\\") {...\" */ returndatasize())\n                            revert(usr$ptr, returndatasize())\n                        }\n                        let var_returnSize := returndatasize()\n                        let var_returnValue := mload(/** @src -1:-1:-1 */ 0)\n                        /// @src 38:7122:7190  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 38:7122:7190  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                        switch /** @src 38:7122:7137  \"returnSize == 0\" */ iszero(var_returnSize)\n                        case /** @src 38:7122:7190  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\" */ 0 {\n                            expr := /** @src 38:7174:7190  \"returnValue != 1\" */ iszero(eq(var_returnValue, /** @src 38:7189:7190  \"1\" */ 0x01))\n                        }\n                        default /// @src 38:7122:7190  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                        {\n                            expr := /** @src 38:7140:7171  \"address(token).code.length == 0\" */ iszero(/** @src 38:7140:7166  \"address(token).code.length\" */ extcodesize(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 38:7140:7154  \"address(token)\" */ var_token_address, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ sub(shl(160, 1), 1))))\n                        }\n                        /// @src 38:7118:7264  \"if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {...\"\n                        if expr\n                        {\n                            /// @src 38:7213:7253  \"SafeERC20FailedOperation(address(token))\"\n                            let _3 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                            /// @src 38:7213:7253  \"SafeERC20FailedOperation(address(token))\"\n                            mstore(_3, shl(224, 0x5274afe7))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(/** @src 38:7213:7253  \"SafeERC20FailedOperation(address(token))\" */ add(_3, 4), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 38:7238:7252  \"address(token)\" */ var_token_address, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ sub(shl(160, 1), 1)))\n                            /// @src 38:7213:7253  \"SafeERC20FailedOperation(address(token))\"\n                            revert(_3, /** @src 38:1380:1423  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                        }\n                    }\n                    /// @ast-id 50886 @src 46:5140:6670  \"function tryRecover(...\"\n                    function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n                    {\n                        /// @src 46:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        if /** @src 46:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 46:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                        /// @src 46:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        {\n                            /// @src 46:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var := /** @src 46:6297:6298  \"0\" */ 0x00\n                            /// @src 46:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_1 := /** @src 46:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                            /// @src 46:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_2 := var_s\n                            leave\n                        }\n                        /// @src 46:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _1 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                        mstore(_1, var_hash)\n                        mstore(add(_1, 32), and(var_v, 0xff))\n                        mstore(add(_1, 64), var_r)\n                        mstore(add(_1, 96), var_s)\n                        /// @src 46:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        mstore(/** @src -1:-1:-1 */ 0, 0)\n                        /// @src 46:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        if iszero(staticcall(gas(), 1, _1, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 128, /** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 32))\n                        /// @src 46:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        {\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 46:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _2 := mload(/** @src -1:-1:-1 */ 0)\n                        /// @src 46:6491:6604  \"if (signer == address(0)) {...\"\n                        if /** @src 46:6495:6515  \"signer == address(0)\" */ iszero(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 46:6495:6515  \"signer == address(0)\" */ _2, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ sub(shl(160, 1), 1)))\n                        /// @src 46:6491:6604  \"if (signer == address(0)) {...\"\n                        {\n                            /// @src 46:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var := /** @src -1:-1:-1 */ 0\n                            /// @src 46:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_1 := /** @src 46:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                            /// @src 46:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_2 := /** @src -1:-1:-1 */ 0\n                            /// @src 46:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            leave\n                        }\n                        /// @src 46:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var := _2\n                        var_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 46:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var_2 := /** @src -1:-1:-1 */ 0\n                    }\n                    /// @ast-id 49953 @src 43:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback(var_value) -> var__mpos\n                    {\n                        /// @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 43:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let ret := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let slotValue := sload(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0)\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let length := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let _1 := 1\n                            length := shr(1, slotValue)\n                            let outOfPlaceEncoding := and(slotValue, 1)\n                            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                            let _2 := 32\n                            if eq(outOfPlaceEncoding, lt(length, _2))\n                            {\n                                mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0, shl(224, 0x4e487b71))\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                mstore(4, 0x22)\n                                revert(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0x24)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(memPtr, length)\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            switch outOfPlaceEncoding\n                            case 0 {\n                                mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ _2), and(slotValue, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ not(255)))\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                ret := add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), _2)\n                            }\n                            case 1 {\n                                mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0, 0)\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                                let i := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 0\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                for { } lt(i, length) { i := add(i, _2) }\n                                {\n                                    mstore(add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2), sload(dataPos))\n                                    dataPos := add(dataPos, _1)\n                                }\n                                ret := add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2)\n                            }\n                            finalize_allocation(memPtr, sub(ret, memPtr))\n                            /// @src 43:3623:3635  \"return store\"\n                            var__mpos := memPtr\n                            leave\n                        }\n                        default /// @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 43:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 43:2702:2771  \"if (result > 31) {...\"\n                            if /** @src 43:2706:2717  \"result > 31\" */ gt(expr, /** @src 43:2715:2717  \"31\" */ 0x1f)\n                            /// @src 43:2702:2771  \"if (result > 31) {...\"\n                            {\n                                /// @src 43:2740:2760  \"InvalidShortString()\"\n                                let _3 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                                /// @src 43:2740:2760  \"InvalidShortString()\"\n                                mstore(_3, shl(226, 0x2cd44ac3))\n                                revert(_3, 4)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let memPtr_1 := mload(64)\n                            finalize_allocation_9021(memPtr_1)\n                            /// @src 43:2367:2457  \"assembly {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(memPtr_1, /** @src 43:2311:2313  \"32\" */ 0x20), /** @src 43:2367:2457  \"assembly {...\" */ var_value)\n                            /// @src 43:3570:3592  \"return toString(value)\"\n                            var__mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @ast-id 49953 @src 43:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback_5521(var_value) -> var_mpos\n                    {\n                        /// @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 43:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let ret := /** @src -1:-1:-1 */ 0\n                            /// @src 47:6584:6600  \"_versionFallback\"\n                            let _1 := 0x01\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let slotValue := sload(/** @src 47:6584:6600  \"_versionFallback\" */ 0x01)\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let length := /** @src -1:-1:-1 */ 0\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            length := shr(/** @src 47:6584:6600  \"_versionFallback\" */ 0x01, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ slotValue)\n                            let outOfPlaceEncoding := and(slotValue, /** @src 47:6584:6600  \"_versionFallback\" */ 0x01)\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                            let _2 := 32\n                            if eq(outOfPlaceEncoding, lt(length, _2))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ shl(224, 0x4e487b71))\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                mstore(4, 0x22)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0x24)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(memPtr, length)\n                            /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            switch outOfPlaceEncoding\n                            case 0 {\n                                mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ _2), and(slotValue, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ not(255)))\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                ret := add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), _2)\n                            }\n                            case 1 {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 47:6584:6600  \"_versionFallback\" */ 0x01)\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let dataPos := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                for { } lt(i, length) { i := add(i, _2) }\n                                {\n                                    mstore(add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2), sload(dataPos))\n                                    dataPos := add(dataPos, /** @src 47:6584:6600  \"_versionFallback\" */ _1)\n                                }\n                                /// @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                ret := add(add(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ memPtr, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2)\n                            }\n                            finalize_allocation(memPtr, sub(ret, memPtr))\n                            /// @src 43:3623:3635  \"return store\"\n                            var_mpos := memPtr\n                            leave\n                        }\n                        default /// @src 43:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 43:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 43:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 43:2702:2771  \"if (result > 31) {...\"\n                            if /** @src 43:2706:2717  \"result > 31\" */ gt(expr, /** @src 43:2715:2717  \"31\" */ 0x1f)\n                            /// @src 43:2702:2771  \"if (result > 31) {...\"\n                            {\n                                /// @src 43:2740:2760  \"InvalidShortString()\"\n                                let _3 := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                                /// @src 43:2740:2760  \"InvalidShortString()\"\n                                mstore(_3, shl(226, 0x2cd44ac3))\n                                revert(_3, 4)\n                            }\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let memPtr_1 := mload(64)\n                            finalize_allocation_9021(memPtr_1)\n                            /// @src 43:2367:2457  \"assembly {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ add(memPtr_1, /** @src 43:2311:2313  \"32\" */ 0x20), /** @src 43:2367:2457  \"assembly {...\" */ var_value)\n                            /// @src 43:3570:3592  \"return toString(value)\"\n                            var_mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @ast-id 51095 @src 47:3845:4107  \"function _domainSeparatorV4() internal view returns (bytes32) {...\"\n                    function fun_domainSeparatorV4() -> var\n                    {\n                        /// @src 47:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        let expr := /** @src 47:3921:3949  \"address(this) == _cachedThis\" */ eq(/** @src 47:3929:3933  \"this\" */ address(), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ and(/** @src 47:3938:3949  \"_cachedThis\" */ loadimmutable(\"50997\"), /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ sub(shl(160, 1), 1)))\n                        /// @src 47:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        if expr\n                        {\n                            expr := /** @src 47:3953:3984  \"block.chainid == _cachedChainId\" */ eq(/** @src 47:3953:3966  \"block.chainid\" */ chainid(), /** @src 47:3970:3984  \"_cachedChainId\" */ loadimmutable(\"50995\"))\n                        }\n                        /// @src 47:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        switch expr\n                        case 0 {\n                            /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let expr_mpos := /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ mload(64)\n                            /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let _1 := add(expr_mpos, 0x20)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(_1, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ 64), /** @src 47:4226:4237  \"_hashedName\" */ loadimmutable(\"50999\"))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 47:4239:4253  \"_hashedVersion\" */ loadimmutable(\"51001\"))\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 47:4255:4268  \"block.chainid\" */ chainid())\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            mstore(/** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 47:3929:3933  \"this\" */ address())\n                            /// @src 47:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            mstore(expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            let newFreePtr := add(expr_mpos, /** @src 47:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                            /// @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\"\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                            /// @src 47:4060:4090  \"return _buildDomainSeparator()\"\n                            var := /** @src 47:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 58:598:5069  \"contract MerkleAirdrop is EIP712{...\" */ _1, mload(/** @src 47:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos))\n                            /// @src 47:4060:4090  \"return _buildDomainSeparator()\"\n                            leave\n                        }\n                        default /// @src 47:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        {\n                            /// @src 47:4000:4029  \"return _cachedDomainSeparator\"\n                            var := /** @src 47:4007:4029  \"_cachedDomainSeparator\" */ loadimmutable(\"50993\")\n                            /// @src 47:4000:4029  \"return _cachedDomainSeparator\"\n                            leave\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000818000a\"\n            }\n        }\n        /// @use-src 29:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 34:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 35:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 36:\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 37:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 40:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 59:\"src/PranavCoin.sol\"\n        object \"PranavCoin_56415\" {\n            code {\n                {\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    let _1 := memoryguard(0x80)\n                    if callvalue() { revert(0, 0) }\n                    let _2 := 64\n                    let newFreePtr := add(_1, _2)\n                    let _3 := sub(shl(64, 1), 1)\n                    if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    mstore(_2, newFreePtr)\n                    mstore(_1, 10)\n                    let _4 := 32\n                    mstore(add(_1, _4), \"PranavCoin\")\n                    let memPtr := mload(_2)\n                    let newFreePtr_1 := add(memPtr, _2)\n                    if or(gt(newFreePtr_1, _3), lt(newFreePtr_1, memPtr))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    mstore(_2, newFreePtr_1)\n                    let _5 := 3\n                    mstore(memPtr, _5)\n                    mstore(add(memPtr, _4), \"PRC\")\n                    let newLen := mload(_1)\n                    if gt(newLen, _3)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    let _6 := sload(_5)\n                    let length := /** @src -1:-1:-1 */ 0\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    let _7 := 1\n                    length := shr(_7, _6)\n                    let outOfPlaceEncoding := and(_6, _7)\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, _4))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    let _8 := 31\n                    if gt(length, _8)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _5)\n                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                        let deleteStart := add(data, shr(5, add(newLen, _8)))\n                        if lt(newLen, _4) { deleteStart := data }\n                        let _9 := add(data, shr(5, add(length, _8)))\n                        let start := deleteStart\n                        for { } lt(start, _9) { start := add(start, _7) }\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    let srcOffset := /** @src -1:-1:-1 */ 0\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    srcOffset := _4\n                    switch gt(newLen, _8)\n                    case 1 {\n                        let loopEnd := and(newLen, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _5)\n                        let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        for { } lt(i, loopEnd) { i := add(i, _4) }\n                        {\n                            sstore(dstPtr, mload(add(_1, srcOffset)))\n                            dstPtr := add(dstPtr, _7)\n                            srcOffset := add(srcOffset, _4)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(_1, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(shr(and(shl(_5, newLen), 248), not(0)))))\n                        }\n                        sstore(_5, add(shl(_7, newLen), _7))\n                    }\n                    default {\n                        let value := /** @src -1:-1:-1 */ 0\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        if newLen\n                        {\n                            value := mload(add(_1, srcOffset))\n                        }\n                        sstore(_5, or(and(value, not(shr(shl(_5, newLen), not(0)))), shl(_7, newLen)))\n                    }\n                    let newLen_1 := mload(memPtr)\n                    if gt(newLen_1, _3)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 35:1690:1707  \"_symbol = symbol_\" */ 0x04, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    /// @src 35:1690:1707  \"_symbol = symbol_\"\n                    let _10 := 0x04\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    let _11 := sload(/** @src 35:1690:1707  \"_symbol = symbol_\" */ _10)\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    length_1 := shr(_7, _11)\n                    let outOfPlaceEncoding_1 := and(_11, _7)\n                    if iszero(outOfPlaceEncoding_1)\n                    {\n                        length_1 := and(length_1, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_1, lt(length_1, _4))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 35:1690:1707  \"_symbol = symbol_\" */ _10, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    if gt(length_1, _8)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 35:1690:1707  \"_symbol = symbol_\" */ _10)\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _8)))\n                        if lt(newLen_1, _4) { deleteStart_1 := data_1 }\n                        let _12 := add(data_1, shr(5, add(length_1, _8)))\n                        let start_1 := deleteStart_1\n                        for { } lt(start_1, _12) { start_1 := add(start_1, _7) }\n                        {\n                            sstore(start_1, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    srcOffset_1 := _4\n                    switch gt(newLen_1, _8)\n                    case 1 {\n                        let loopEnd_1 := and(newLen_1, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 35:1690:1707  \"_symbol = symbol_\" */ _10)\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                        let i_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _4) }\n                        {\n                            sstore(dstPtr_1, mload(add(memPtr, srcOffset_1)))\n                            dstPtr_1 := add(dstPtr_1, _7)\n                            srcOffset_1 := add(srcOffset_1, _4)\n                        }\n                        if lt(loopEnd_1, newLen_1)\n                        {\n                            let lastValue_1 := mload(add(memPtr, srcOffset_1))\n                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(_5, newLen_1), 248), not(0)))))\n                        }\n                        sstore(/** @src 35:1690:1707  \"_symbol = symbol_\" */ _10, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ add(shl(_7, newLen_1), _7))\n                    }\n                    default {\n                        let value_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        if newLen_1\n                        {\n                            value_1 := mload(add(memPtr, srcOffset_1))\n                        }\n                        sstore(/** @src 35:1690:1707  \"_symbol = symbol_\" */ _10, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ or(and(value_1, not(shr(shl(_5, newLen_1), not(0)))), shl(_7, newLen_1)))\n                    }\n                    /// @src 29:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    if /** @src 29:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 59:288:298  \"msg.sender\" */ caller())\n                    /// @src 29:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    {\n                        /// @src 29:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        let _13 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                        /// @src 29:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        mstore(_13, shl(224, 0x1e4fbdf7))\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        mstore(/** @src 29:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(_13, /** @src 35:1690:1707  \"_symbol = symbol_\" */ _10), /** @src -1:-1:-1 */ 0)\n                        /// @src 29:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        revert(_13, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                    }\n                    let _14 := sload(/** @src 29:3004:3010  \"_owner\" */ 0x05)\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    sstore(/** @src 29:3004:3010  \"_owner\" */ 0x05, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ or(and(_14, not(sub(shl(160, 1), 1))), /** @src 59:288:298  \"msg.sender\" */ caller()))\n                    /// @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    let _15 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                    /// @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    log3(/** @src -1:-1:-1 */ 0, 0, /** @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ and(_14, sub(shl(160, 1), 1)), /** @src 59:288:298  \"msg.sender\" */ caller())\n                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                    let _16 := datasize(\"PranavCoin_56415_deployed\")\n                    codecopy(_15, dataoffset(\"PranavCoin_56415_deployed\"), _16)\n                    return(_15, _16)\n                }\n            }\n            /// @use-src 29:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 35:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 40:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 59:\"src/PranavCoin.sol\"\n            object \"PranavCoin_56415_deployed\" {\n                code {\n                    {\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x06fdde03 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let ret := 0\n                                let slotValue := sload(/** @src 35:1856:1861  \"_name\" */ 0x03)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let length := 0\n                                let _4 := 1\n                                length := shr(1, slotValue)\n                                let outOfPlaceEncoding := and(slotValue, 1)\n                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                let _5 := 32\n                                if eq(outOfPlaceEncoding, lt(length, _5))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(0, 0x24)\n                                }\n                                mstore(_1, length)\n                                switch outOfPlaceEncoding\n                                case 0 {\n                                    mstore(add(_1, _5), and(slotValue, not(255)))\n                                    ret := add(add(_1, shl(5, iszero(iszero(length)))), _5)\n                                }\n                                case 1 {\n                                    mstore(0, /** @src 35:1856:1861  \"_name\" */ 0x03)\n                                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                    let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                                    let i := 0\n                                    for { } lt(i, length) { i := add(i, _5) }\n                                    {\n                                        mstore(add(add(_1, i), _5), sload(dataPos))\n                                        dataPos := add(dataPos, _4)\n                                    }\n                                    ret := add(add(_1, i), _5)\n                                }\n                                let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(_2, newFreePtr)\n                                return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                            }\n                            case 0x095ea7b3 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                let value0 := abi_decode_address()\n                                let _6 := calldataload(36)\n                                /// @src 35:9809:9898  \"if (owner == address(0)) {...\"\n                                if /** @src 35:9813:9832  \"owner == address(0)\" */ iszero(/** @src 40:735:745  \"msg.sender\" */ caller())\n                                /// @src 35:9809:9898  \"if (owner == address(0)) {...\"\n                                {\n                                    /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                    let _7 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                    mstore(_7, shl(224, 0xe602df05))\n                                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                    mstore(/** @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\" */ add(_7, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                    /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                    revert(_7, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                }\n                                let _8 := and(/** @src 35:9911:9932  \"spender == address(0)\" */ value0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 35:9907:9997  \"if (spender == address(0)) {...\"\n                                if /** @src 35:9911:9932  \"spender == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _8)\n                                /// @src 35:9907:9997  \"if (spender == address(0)) {...\"\n                                {\n                                    /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                    let _9 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                    mstore(_9, shl(225, 0x4a1406b1))\n                                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                    mstore(/** @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\" */ add(_9, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                    /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                    revert(_9, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                }\n                                mstore(0, /** @src 40:735:745  \"msg.sender\" */ caller())\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                mstore(0x20, /** @src 35:8842:8846  \"true\" */ 0x01)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let _10 := keccak256(0, _2)\n                                mstore(0, _8)\n                                mstore(0x20, _10)\n                                sstore(keccak256(0, _2), _6)\n                                /// @src 35:10085:10116  \"Approval(owner, spender, value)\"\n                                let _11 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                mstore(_11, _6)\n                                /// @src 35:10085:10116  \"Approval(owner, spender, value)\"\n                                log3(_11, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x20, /** @src 35:10085:10116  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 40:735:745  \"msg.sender\" */ caller(), /** @src 35:10085:10116  \"Approval(owner, spender, value)\" */ _8)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let memPos := mload(_2)\n                                mstore(memPos, /** @src 35:8842:8846  \"true\" */ 0x01)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                return(memPos, 0x20)\n                            }\n                            case 0x18160ddd {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _12 := sload(/** @src 35:2927:2939  \"_totalSupply\" */ 0x02)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, _12)\n                                return(memPos_1, 32)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                                let value0_1 := abi_decode_address()\n                                let value1 := abi_decode_address_4059()\n                                let value := calldataload(68)\n                                let _13 := and(value0_1, sub(shl(160, 1), 1))\n                                mstore(0, _13)\n                                mstore(32, 1)\n                                let _14 := keccak256(0, _2)\n                                mstore(0, /** @src 40:735:745  \"msg.sender\" */ caller())\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                mstore(32, _14)\n                                let _15 := sload(keccak256(0, _2))\n                                /// @src 35:10576:10886  \"if (currentAllowance != type(uint256).max) {...\"\n                                if /** @src 35:10580:10617  \"currentAllowance != type(uint256).max\" */ iszero(eq(_15, /** @src 35:10600:10617  \"type(uint256).max\" */ not(0)))\n                                /// @src 35:10576:10886  \"if (currentAllowance != type(uint256).max) {...\"\n                                {\n                                    /// @src 35:10633:10763  \"if (currentAllowance < value) {...\"\n                                    if /** @src 35:10637:10661  \"currentAllowance < value\" */ lt(_15, value)\n                                    /// @src 35:10633:10763  \"if (currentAllowance < value) {...\"\n                                    {\n                                        /// @src 35:10688:10748  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        let _16 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                        /// @src 35:10688:10748  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        mstore(_16, shl(225, 0x7dc7a0d9))\n                                        revert(_16, sub(abi_encode_address_uint256_uint256(add(_16, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), /** @src 40:735:745  \"msg.sender\" */ caller(), /** @src 35:10688:10748  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _15, value), _16))\n                                    }\n                                    /// @src 35:9809:9898  \"if (owner == address(0)) {...\"\n                                    if /** @src 35:9813:9832  \"owner == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _13)\n                                    /// @src 35:9809:9898  \"if (owner == address(0)) {...\"\n                                    {\n                                        /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                        let _17 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                        /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                        mstore(_17, shl(224, 0xe602df05))\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        mstore(/** @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\" */ add(_17, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                        /// @src 35:9855:9887  \"ERC20InvalidApprover(address(0))\"\n                                        revert(_17, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                    }\n                                    /// @src 35:9907:9997  \"if (spender == address(0)) {...\"\n                                    if /** @src 35:9911:9932  \"spender == address(0)\" */ iszero(/** @src 40:735:745  \"msg.sender\" */ caller())\n                                    /// @src 35:9907:9997  \"if (spender == address(0)) {...\"\n                                    {\n                                        /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                        let _18 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                        /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                        mstore(_18, shl(225, 0x4a1406b1))\n                                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                        mstore(/** @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\" */ add(_18, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                        /// @src 35:9955:9986  \"ERC20InvalidSpender(address(0))\"\n                                        revert(_18, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                    }\n                                    mstore(0, _13)\n                                    mstore(32, 1)\n                                    let _19 := keccak256(0, _2)\n                                    mstore(0, /** @src 40:735:745  \"msg.sender\" */ caller())\n                                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                    mstore(32, _19)\n                                    sstore(keccak256(0, _2), sub(/** @src 35:10829:10853  \"currentAllowance - value\" */ _15, value))\n                                }\n                                /// @src 35:4986:4991  \"value\"\n                                fun_transfer(value0_1, value1, value)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, 1)\n                                return(memPos_2, 32)\n                            }\n                            case 0x313ce567 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, /** @src 35:2780:2782  \"18\" */ 0x12)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                return(memPos_3, 32)\n                            }\n                            case 0x40c10f19 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                let value0_2 := abi_decode_address()\n                                let value_1 := calldataload(36)\n                                /// @src 29:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let _20 := and(/** @src 35:7528:7549  \"account == address(0)\" */ value0_2, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 35:7524:7615  \"if (account == address(0)) {...\"\n                                if /** @src 35:7528:7549  \"account == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _20)\n                                /// @src 35:7524:7615  \"if (account == address(0)) {...\"\n                                {\n                                    /// @src 35:7572:7604  \"ERC20InvalidReceiver(address(0))\"\n                                    let _21 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 35:7572:7604  \"ERC20InvalidReceiver(address(0))\"\n                                    mstore(_21, shl(224, 0xec442f05))\n                                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                    mstore(/** @src 35:7572:7604  \"ERC20InvalidReceiver(address(0))\" */ add(_21, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                    /// @src 35:7572:7604  \"ERC20InvalidReceiver(address(0))\"\n                                    revert(_21, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                }\n                                let _22 := sload(/** @src 35:6233:6254  \"_totalSupply += value\" */ 0x02)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let sum := add(_22, value_1)\n                                if gt(_22, sum)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x11)\n                                    revert(0, 36)\n                                }\n                                sstore(/** @src 35:6233:6254  \"_totalSupply += value\" */ 0x02, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ sum)\n                                mstore(0, _20)\n                                mstore(0x20, 0)\n                                let dataSlot := keccak256(0, _2)\n                                sstore(dataSlot, add(sload(/** @src 35:7021:7043  \"_balances[to] += value\" */ dataSlot), /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ value_1))\n                                /// @src 35:7083:7108  \"Transfer(from, to, value)\"\n                                let _23 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                mstore(_23, value_1)\n                                /// @src 35:7083:7108  \"Transfer(from, to, value)\"\n                                log3(_23, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x20, /** @src 35:7083:7108  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0, /** @src 35:7083:7108  \"Transfer(from, to, value)\" */ _20)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                return(0, 0)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, 0)\n                                let _24 := sload(keccak256(0, _2))\n                                let memPos_4 := mload(_2)\n                                mstore(memPos_4, _24)\n                                return(memPos_4, 32)\n                            }\n                            case 0x715018a6 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 29:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let _25 := sload(/** @src 29:3004:3010  \"_owner\" */ 0x05)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                sstore(/** @src 29:3004:3010  \"_owner\" */ 0x05, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ and(_25, shl(160, 0xffffffffffffffffffffffff)))\n                                /// @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0, 0, /** @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ and(_25, sub(shl(160, 1), 1)), 0)\n                                return(0, 0)\n                            }\n                            case 0x8da5cb5b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_2 := and(sload(/** @src 29:1710:1716  \"_owner\" */ 0x05), /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                let memPos_5 := mload(_2)\n                                mstore(memPos_5, value_2)\n                                return(memPos_5, 32)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPtr := mload(_2)\n                                let ret_1 := 0\n                                let slotValue_1 := sload(_3)\n                                let length_1 := 0\n                                let _26 := 1\n                                length_1 := shr(1, slotValue_1)\n                                let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                                if iszero(outOfPlaceEncoding_1)\n                                {\n                                    length_1 := and(length_1, 0x7f)\n                                }\n                                let _27 := 32\n                                if eq(outOfPlaceEncoding_1, lt(length_1, _27))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(0, 0x24)\n                                }\n                                mstore(memPtr, length_1)\n                                switch outOfPlaceEncoding_1\n                                case 0 {\n                                    mstore(add(memPtr, _27), and(slotValue_1, not(255)))\n                                    ret_1 := add(add(memPtr, shl(5, iszero(iszero(length_1)))), _27)\n                                }\n                                case 1 {\n                                    mstore(0, _3)\n                                    let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                                    let i_1 := 0\n                                    for { } lt(i_1, length_1) { i_1 := add(i_1, _27) }\n                                    {\n                                        mstore(add(add(memPtr, i_1), _27), sload(dataPos_1))\n                                        dataPos_1 := add(dataPos_1, _26)\n                                    }\n                                    ret_1 := add(add(memPtr, i_1), _27)\n                                }\n                                let newFreePtr_1 := add(memPtr, and(add(sub(ret_1, memPtr), 31), not(31)))\n                                if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(_2, newFreePtr_1)\n                                return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr), newFreePtr_1))\n                            }\n                            case 0xa9059cbb {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                let value0_3 := abi_decode_address()\n                                /// @src 35:3459:3464  \"value\"\n                                fun_transfer(/** @src 40:735:745  \"msg.sender\" */ caller(), /** @src 35:3459:3464  \"value\" */ value0_3, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ calldataload(36))\n                                let memPos_6 := mload(_2)\n                                mstore(memPos_6, 1)\n                                return(memPos_6, 32)\n                            }\n                            case 0xdd62ed3e {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                                let value0_4 := abi_decode_address()\n                                let value1_1 := abi_decode_address_4059()\n                                let _28 := sub(shl(160, 1), 1)\n                                mstore(0, and(value0_4, _28))\n                                mstore(32, /** @src 35:3657:3668  \"_allowances\" */ 0x01)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let _29 := keccak256(0, _2)\n                                mstore(0, and(value1_1, _28))\n                                mstore(32, _29)\n                                let _30 := sload(keccak256(0, _2))\n                                let memPos_7 := mload(_2)\n                                mstore(memPos_7, _30)\n                                return(memPos_7, 32)\n                            }\n                            case 0xf2fde38b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value0_5 := abi_decode_address()\n                                /// @src 29:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                let _31 := sub(shl(160, 1), 1)\n                                let _32 := and(/** @src 29:2627:2649  \"newOwner == address(0)\" */ value0_5, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _31)\n                                /// @src 29:2623:2714  \"if (newOwner == address(0)) {...\"\n                                if /** @src 29:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _32)\n                                /// @src 29:2623:2714  \"if (newOwner == address(0)) {...\"\n                                {\n                                    /// @src 29:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    let _33 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 29:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    mstore(_33, shl(224, 0x1e4fbdf7))\n                                    /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                    mstore(/** @src 29:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_33, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _3), 0)\n                                    /// @src 29:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    revert(_33, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                                }\n                                let _34 := sload(/** @src 29:3004:3010  \"_owner\" */ 0x05)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                sstore(/** @src 29:3004:3010  \"_owner\" */ 0x05, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ or(and(_34, shl(160, 0xffffffffffffffffffffffff)), _32))\n                                /// @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0, 0, /** @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ and(_34, _31), /** @src 29:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _32)\n                                /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                                return(0, 0)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_string(headStart, value0) -> tail\n                    {\n                        let _1 := 32\n                        mstore(headStart, 32)\n                        let length := mload(value0)\n                        mstore(add(headStart, 32), length)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                        }\n                        mstore(add(add(headStart, length), 64), 0)\n                        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address_4059() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n                    {\n                        tail := add(headStart, 96)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                        mstore(add(headStart, 64), value2)\n                    }\n                    /// @ast-id 48620 @src 35:5393:5693  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                    function fun_transfer(var_from, var_to, var_value)\n                    {\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 35:5476:5494  \"from == address(0)\" */ var_from, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _1)\n                        /// @src 35:5472:5558  \"if (from == address(0)) {...\"\n                        if /** @src 35:5476:5494  \"from == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _2)\n                        /// @src 35:5472:5558  \"if (from == address(0)) {...\"\n                        {\n                            /// @src 35:5517:5547  \"ERC20InvalidSender(address(0))\"\n                            let _3 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(64)\n                            /// @src 35:5517:5547  \"ERC20InvalidSender(address(0))\"\n                            mstore(_3, shl(225, 0x4b637e8f))\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            mstore(/** @src 35:5517:5547  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 35:5492:5493  \"0\" */ 0x00)\n                            /// @src 35:5517:5547  \"ERC20InvalidSender(address(0))\"\n                            revert(_3, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                        }\n                        let _4 := and(/** @src 35:5571:5587  \"to == address(0)\" */ var_to, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _1)\n                        /// @src 35:5567:5653  \"if (to == address(0)) {...\"\n                        if /** @src 35:5571:5587  \"to == address(0)\" */ iszero(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                        /// @src 35:5567:5653  \"if (to == address(0)) {...\"\n                        {\n                            /// @src 35:5610:5642  \"ERC20InvalidReceiver(address(0))\"\n                            let _5 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(64)\n                            /// @src 35:5610:5642  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(_5, /** @src 35:7572:7604  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            mstore(/** @src 35:5610:5642  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 35:5492:5493  \"0\" */ 0x00)\n                            /// @src 35:5610:5642  \"ERC20InvalidReceiver(address(0))\"\n                            revert(_5, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                        }\n                        mstore(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _2)\n                        mstore(0x20, /** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0)\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        let _6 := sload(keccak256(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x40))\n                        /// @src 35:6336:6451  \"if (fromBalance < value) {...\"\n                        if /** @src 35:6340:6359  \"fromBalance < value\" */ lt(_6, var_value)\n                        /// @src 35:6336:6451  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 35:6386:6436  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            let _7 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(0x40)\n                            /// @src 35:6386:6436  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(_7, shl(226, 0x391434e3))\n                            revert(_7, sub(abi_encode_address_uint256_uint256(add(_7, 4), var_from, _6, var_value), _7))\n                        }\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        mstore(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _2)\n                        mstore(0x20, /** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0)\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        sstore(keccak256(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x40), sub(/** @src 35:6589:6608  \"fromBalance - value\" */ _6, var_value))\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        mstore(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ _4)\n                        let dataSlot := keccak256(/** @src 35:6093:6633  \"if (from == address(0)) {...\" */ 0, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x40)\n                        sstore(dataSlot, add(sload(/** @src 35:7021:7043  \"_balances[to] += value\" */ dataSlot), /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ var_value))\n                        /// @src 35:7083:7108  \"Transfer(from, to, value)\"\n                        let _8 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(0x40)\n                        mstore(_8, var_value)\n                        /// @src 35:7083:7108  \"Transfer(from, to, value)\"\n                        log3(_8, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 0x20, /** @src 35:7083:7108  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n                    }\n                    /// @ast-id 48060 @src 29:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                    function fun_checkOwner()\n                    {\n                        /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                        let value := and(sload(/** @src 29:1710:1716  \"_owner\" */ 0x05), /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 29:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        if /** @src 29:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ value, /** @src 40:735:745  \"msg.sender\" */ caller()))\n                        /// @src 29:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        {\n                            /// @src 29:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            let _1 := /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ mload(64)\n                            /// @src 29:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            mstore(_1, shl(224, 0x118cdaa7))\n                            /// @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\"\n                            mstore(/** @src 29:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 40:735:745  \"msg.sender\" */ caller())\n                            /// @src 29:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            revert(_1, /** @src 59:195:403  \"contract PranavCoin is ERC20, Ownable {...\" */ 36)\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000818000a\"\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000818000a\"\n    }\n}\n","hash":"01000099d8c437db3f79f2b41b7a6772dfa52f4f3d4d686867c76639536eb836","factoryDependencies":{"010001254767133c0bfab0f12cca9e4bf07dcd32133865c9401a3cd248cb8010":"src/PranavCoin.sol:PranavCoin","01000219f332fef3bb095dec9e508e76220eb3a464d321f351d201f347c9d621":"src/Merkle-Airdrop.sol:MerkleAirdrop"},"id":55}